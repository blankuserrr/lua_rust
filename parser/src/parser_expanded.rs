// This file was generated by rustylr 1.12.0
// This generated code is targeting rusty_lr version 3.20.0.
// There might be a build error if the version is not matched.
//
// Input file: ../../lua_rust/parser/src/parser.rs
// Output file: out.tab.rs
// ================================User Codes Begin================================
use crate::expression;
use crate::statement;
use crate::ChunkOrExpressions;
use crate::Expression;
use crate::ParseError;
use crate::Span;
use crate::SpannedString;
use crate::Statement;
use lua_tokenizer::Token;
use lua_tokenizer::TokenType;
macro_rules! new_binary_node {
    ($ variant : ident , $ op : ident , $ lhs : ident , $ rhs : ident) => {{
        let span = $lhs.span().merge_ordered(&$rhs.span());
        let span_op = $op.span();
        let binary_data = expression::ExprBinaryData::new($lhs, $rhs, span, span_op);
        Expression::Binary(expression::ExprBinary::$variant(binary_data))
    }};
}
macro_rules! new_unary_node {
    ($ variant : ident , $ op : ident , $ lhs : ident) => {{
        let span = $op.span().merge_ordered(&$lhs.span());
        let span_op = $op.span();
        let unary_data = expression::ExprUnaryData::new($lhs, span, span_op);
        Expression::Unary(expression::ExprUnary::$variant(unary_data))
    }};
}
fn filter(token: &Token) -> &TokenType {
    &token.token_type
}
// =================================User Codes End=================================
/*
====================================Grammar=====================================

# of terminal classes: 59
# of states: 226

ChunkOrExpressions -> Chunk
ChunkOrExpressions -> ExpList1
Block -> Statement* ReturnStatement?
Statement -> semicolon
Statement -> VarList equal ExpList1
Statement -> FunctionCall
Statement -> coloncolon ident coloncolon
Statement -> break_
Statement -> goto_ ident
Statement -> do_ Block end_
Statement -> while_ Exp do_ Block end_
Statement -> repeat_ Block until_ Exp
Statement -> if_ Exp then_ Block ElseIf* (else_, Block)? end_
Statement -> for_ ident equal Exp comma Exp (comma, Exp)? do_ Block end_
Statement -> for_ NameList in_ ExpList1 do_ Block end_
Statement -> function_ FuncName FuncBody
Statement -> local_ function_ ident FuncBody
Statement -> local_ AttNameList (equal, ExpList1)?
ElseIf -> elseif_ Exp then_ Block
ReturnStatement -> return_ ExpList0 semicolon?
Var -> ident
Var -> PrefixExp lbracket Exp rbracket
Var -> PrefixExp dot ident
PrefixExp -> FunctionCall
FunctionCall -> PrefixExp Args
FunctionCall -> PrefixExp colon ident Args
Args -> lparen ExpList0 rparen
Args -> TableConstructor
Args -> string_literal
VarList -> VarList comma Var
VarList -> Var
ExpList1 -> ExpList1 comma Exp
ExpList1 -> Exp
ExpList0 -> ExpList1
ExpList0 ->
NameList -> NameList comma ident
NameList -> ident
AttName -> ident Attrib
AttNameList -> AttNameList comma AttName
AttNameList -> AttName
Attrib -> less ident greater
Attrib ->
Exp -> numeric_literal
Exp -> nil
Exp -> string_literal
Exp -> bool_
Exp -> dotdotdot
Exp -> FunctionDef
Exp -> TableConstructor
Exp -> not_ Exp
Exp -> hash Exp
Exp -> minus Exp
Exp -> plus Exp
Exp -> tilde Exp
Exp -> Exp asterisk Exp
Exp -> Exp slash Exp
Exp -> Exp slashslash Exp
Exp -> Exp percent Exp
Exp -> Exp plus Exp
Exp -> Exp minus Exp
Exp -> Exp dotdot Exp
Exp -> Exp lessless Exp
Exp -> Exp greatergreater Exp
Exp -> Exp ampersand Exp
Exp -> Exp tilde Exp
Exp -> Exp pipe Exp
Exp -> Exp less Exp
Exp -> Exp lessequal Exp
Exp -> Exp greater Exp
Exp -> Exp greaterequal Exp
Exp -> Exp tildeequal Exp
Exp -> Exp equalequal Exp
Exp -> Exp and_ Exp
Exp -> Exp or_ Exp
Exp -> Exp caret Exp
TableConstructor -> lbrace FieldList rbrace
FieldList1 -> FieldList1 FieldSep Field
FieldList1 -> Field
FieldList -> FieldList1 FieldSep?
FieldList ->
Field -> lbracket Exp rbracket equal Exp
Field -> ident equal Exp
Field -> Exp
FunctionDef -> function_ FuncBody
FuncBody -> lparen ParList? rparen Block end_
FuncName1 -> FuncName1 dot ident
FuncName1 -> ident
FuncName -> FuncName1 colon ident
FuncName -> FuncName1
ParList -> NameList (comma, dotdotdot)?
ParList -> dotdotdot
Statement+ -> Statement
Statement+ -> Statement+ Statement
Statement* ->
ReturnStatement? -> ReturnStatement
ReturnStatement? ->
ElseIf+ -> ElseIf
ElseIf+ -> ElseIf+ ElseIf
ElseIf* ->
(else_, Block)? -> (else_, Block)
(else_, Block)? ->
(comma, Exp)? -> (comma, Exp)
(comma, Exp)? ->
(equal, ExpList1)? -> (equal, ExpList1)
(equal, ExpList1)? ->
semicolon? -> semicolon
semicolon? ->
ParList? -> ParList
ParList? ->
(comma, dotdotdot)? -> (comma, dotdotdot)
(comma, dotdotdot)? ->
Chunk -> Block
PrefixExp -> Var
Exp -> PrefixExp
Statement* -> Statement+
ElseIf* -> ElseIf+
(else_, Block) -> else_ Block
(comma, Exp) -> comma Exp
(equal, ExpList1) -> equal ExpList1
(comma, dotdotdot) -> comma dotdotdot
PrefixExp -> lparen Exp rparen
FieldSep -> comma
FieldSep -> semicolon
FieldSep? -> FieldSep
FieldSep? ->
Augmented -> ChunkOrExpressions eof

*/
// =============================Generated Codes Begin==============================
#[doc = r" type alias for `Context`"]
#[allow(non_camel_case_types, dead_code)]
pub type ChunkOrExpressionsContext = ::rusty_lr::glr::Context<ChunkOrExpressionsTokenData>;
#[doc = r" type alias for CFG production rule"]
#[allow(non_camel_case_types, dead_code)]
pub type ChunkOrExpressionsRule =
    ::rusty_lr::rule::ProductionRule<&'static str, ChunkOrExpressionsNonTerminals>;
#[doc = r" type alias for DFA state"]
#[allow(non_camel_case_types, dead_code)]
pub type ChunkOrExpressionsState =
    ::rusty_lr::glr::SparseState<ChunkOrExpressionsNonTerminals, ::rusty_lr::stackvec::SmallVecU8>;
#[doc = r" type alias for `InvalidTerminalError`"]
#[allow(non_camel_case_types, dead_code)]
pub type ChunkOrExpressionsParseError = ::rusty_lr::glr::ParseError<Token, ParseError>;
#[doc = r" An enum that represents non-terminal symbols"]
#[allow(non_camel_case_types, dead_code)]
#[derive(
    Clone,
    Copy,
    std :: hash :: Hash,
    std :: cmp :: PartialEq,
    std :: cmp :: Eq,
    std :: cmp :: PartialOrd,
    std :: cmp :: Ord,
)]
pub enum ChunkOrExpressionsNonTerminals {
    ChunkOrExpressions,
    Chunk,
    Block,
    Statement,
    ElseIf,
    ReturnStatement,
    Var,
    PrefixExp,
    FunctionCall,
    Args,
    VarList,
    ExpList1,
    ExpList0,
    NameList,
    AttName,
    AttNameList,
    Attrib,
    Exp,
    TableConstructor,
    FieldList1,
    FieldList,
    Field,
    FieldSep,
    FunctionDef,
    FuncBody,
    FuncName1,
    FuncName,
    ParList,
    error,
    _StatementPlus29,
    _StatementStar30,
    _ReturnStatementQuestion31,
    _ElseIfPlus32,
    _ElseIfStar33,
    _Group34,
    __Group34Question35,
    _Group36,
    __Group36Question37,
    _Group38,
    __Group38Question39,
    _semicolonQuestion40,
    _FieldSepQuestion41,
    _ParListQuestion42,
    _Group43,
    __Group43Question44,
    Augmented,
}
impl std::fmt::Display for ChunkOrExpressionsNonTerminals {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        use rusty_lr::nonterminal::NonTerminal;
        write!(f, "{}", self.as_str())
    }
}
impl std::fmt::Debug for ChunkOrExpressionsNonTerminals {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        use rusty_lr::nonterminal::NonTerminal;
        write!(f, "{}", self.as_str())
    }
}
impl ::rusty_lr::nonterminal::NonTerminal for ChunkOrExpressionsNonTerminals {
    fn as_str(&self) -> &'static str {
        match self {
            ChunkOrExpressionsNonTerminals::ChunkOrExpressions => "ChunkOrExpressions",
            ChunkOrExpressionsNonTerminals::Chunk => "Chunk",
            ChunkOrExpressionsNonTerminals::Block => "Block",
            ChunkOrExpressionsNonTerminals::Statement => "Statement",
            ChunkOrExpressionsNonTerminals::ElseIf => "ElseIf",
            ChunkOrExpressionsNonTerminals::ReturnStatement => "ReturnStatement",
            ChunkOrExpressionsNonTerminals::Var => "Var",
            ChunkOrExpressionsNonTerminals::PrefixExp => "PrefixExp",
            ChunkOrExpressionsNonTerminals::FunctionCall => "FunctionCall",
            ChunkOrExpressionsNonTerminals::Args => "Args",
            ChunkOrExpressionsNonTerminals::VarList => "VarList",
            ChunkOrExpressionsNonTerminals::ExpList1 => "ExpList1",
            ChunkOrExpressionsNonTerminals::ExpList0 => "ExpList0",
            ChunkOrExpressionsNonTerminals::NameList => "NameList",
            ChunkOrExpressionsNonTerminals::AttName => "AttName",
            ChunkOrExpressionsNonTerminals::AttNameList => "AttNameList",
            ChunkOrExpressionsNonTerminals::Attrib => "Attrib",
            ChunkOrExpressionsNonTerminals::Exp => "Exp",
            ChunkOrExpressionsNonTerminals::TableConstructor => "TableConstructor",
            ChunkOrExpressionsNonTerminals::FieldList1 => "FieldList1",
            ChunkOrExpressionsNonTerminals::FieldList => "FieldList",
            ChunkOrExpressionsNonTerminals::Field => "Field",
            ChunkOrExpressionsNonTerminals::FieldSep => "FieldSep",
            ChunkOrExpressionsNonTerminals::FunctionDef => "FunctionDef",
            ChunkOrExpressionsNonTerminals::FuncBody => "FuncBody",
            ChunkOrExpressionsNonTerminals::FuncName1 => "FuncName1",
            ChunkOrExpressionsNonTerminals::FuncName => "FuncName",
            ChunkOrExpressionsNonTerminals::ParList => "ParList",
            ChunkOrExpressionsNonTerminals::error => "'error'",
            ChunkOrExpressionsNonTerminals::_StatementPlus29 => "Statement+",
            ChunkOrExpressionsNonTerminals::_StatementStar30 => "Statement*",
            ChunkOrExpressionsNonTerminals::_ReturnStatementQuestion31 => "ReturnStatement?",
            ChunkOrExpressionsNonTerminals::_ElseIfPlus32 => "ElseIf+",
            ChunkOrExpressionsNonTerminals::_ElseIfStar33 => "ElseIf*",
            ChunkOrExpressionsNonTerminals::_Group34 => "(else_, Block)",
            ChunkOrExpressionsNonTerminals::__Group34Question35 => "(else_, Block)?",
            ChunkOrExpressionsNonTerminals::_Group36 => "(comma, Exp)",
            ChunkOrExpressionsNonTerminals::__Group36Question37 => "(comma, Exp)?",
            ChunkOrExpressionsNonTerminals::_Group38 => "(equal, ExpList1)",
            ChunkOrExpressionsNonTerminals::__Group38Question39 => "(equal, ExpList1)?",
            ChunkOrExpressionsNonTerminals::_semicolonQuestion40 => "semicolon?",
            ChunkOrExpressionsNonTerminals::_FieldSepQuestion41 => "FieldSep?",
            ChunkOrExpressionsNonTerminals::_ParListQuestion42 => "ParList?",
            ChunkOrExpressionsNonTerminals::_Group43 => "(comma, dotdotdot)",
            ChunkOrExpressionsNonTerminals::__Group43Question44 => "(comma, dotdotdot)?",
            ChunkOrExpressionsNonTerminals::Augmented => "Augmented",
        }
    }
    fn is_trace(&self) -> bool {
        match self {
            ChunkOrExpressionsNonTerminals::ChunkOrExpressions => false,
            ChunkOrExpressionsNonTerminals::Chunk => false,
            ChunkOrExpressionsNonTerminals::Block => false,
            ChunkOrExpressionsNonTerminals::Statement => false,
            ChunkOrExpressionsNonTerminals::ElseIf => false,
            ChunkOrExpressionsNonTerminals::ReturnStatement => false,
            ChunkOrExpressionsNonTerminals::Var => false,
            ChunkOrExpressionsNonTerminals::PrefixExp => false,
            ChunkOrExpressionsNonTerminals::FunctionCall => false,
            ChunkOrExpressionsNonTerminals::Args => false,
            ChunkOrExpressionsNonTerminals::VarList => false,
            ChunkOrExpressionsNonTerminals::ExpList1 => false,
            ChunkOrExpressionsNonTerminals::ExpList0 => false,
            ChunkOrExpressionsNonTerminals::NameList => false,
            ChunkOrExpressionsNonTerminals::AttName => false,
            ChunkOrExpressionsNonTerminals::AttNameList => false,
            ChunkOrExpressionsNonTerminals::Attrib => false,
            ChunkOrExpressionsNonTerminals::Exp => false,
            ChunkOrExpressionsNonTerminals::TableConstructor => false,
            ChunkOrExpressionsNonTerminals::FieldList1 => false,
            ChunkOrExpressionsNonTerminals::FieldList => false,
            ChunkOrExpressionsNonTerminals::Field => false,
            ChunkOrExpressionsNonTerminals::FieldSep => false,
            ChunkOrExpressionsNonTerminals::FunctionDef => false,
            ChunkOrExpressionsNonTerminals::FuncBody => false,
            ChunkOrExpressionsNonTerminals::FuncName1 => false,
            ChunkOrExpressionsNonTerminals::FuncName => false,
            ChunkOrExpressionsNonTerminals::ParList => false,
            ChunkOrExpressionsNonTerminals::error => false,
            ChunkOrExpressionsNonTerminals::_StatementPlus29 => false,
            ChunkOrExpressionsNonTerminals::_StatementStar30 => false,
            ChunkOrExpressionsNonTerminals::_ReturnStatementQuestion31 => false,
            ChunkOrExpressionsNonTerminals::_ElseIfPlus32 => false,
            ChunkOrExpressionsNonTerminals::_ElseIfStar33 => false,
            ChunkOrExpressionsNonTerminals::_Group34 => false,
            ChunkOrExpressionsNonTerminals::__Group34Question35 => false,
            ChunkOrExpressionsNonTerminals::_Group36 => false,
            ChunkOrExpressionsNonTerminals::__Group36Question37 => false,
            ChunkOrExpressionsNonTerminals::_Group38 => false,
            ChunkOrExpressionsNonTerminals::__Group38Question39 => false,
            ChunkOrExpressionsNonTerminals::_semicolonQuestion40 => false,
            ChunkOrExpressionsNonTerminals::_FieldSepQuestion41 => false,
            ChunkOrExpressionsNonTerminals::_ParListQuestion42 => false,
            ChunkOrExpressionsNonTerminals::_Group43 => false,
            ChunkOrExpressionsNonTerminals::__Group43Question44 => false,
            ChunkOrExpressionsNonTerminals::Augmented => false,
        }
    }
    fn nonterm_type(&self) -> Option<::rusty_lr::nonterminal::NonTerminalType> {
        match self {
            ChunkOrExpressionsNonTerminals::ChunkOrExpressions => None,
            ChunkOrExpressionsNonTerminals::Chunk => None,
            ChunkOrExpressionsNonTerminals::Block => None,
            ChunkOrExpressionsNonTerminals::Statement => None,
            ChunkOrExpressionsNonTerminals::ElseIf => None,
            ChunkOrExpressionsNonTerminals::ReturnStatement => None,
            ChunkOrExpressionsNonTerminals::Var => None,
            ChunkOrExpressionsNonTerminals::PrefixExp => None,
            ChunkOrExpressionsNonTerminals::FunctionCall => None,
            ChunkOrExpressionsNonTerminals::Args => None,
            ChunkOrExpressionsNonTerminals::VarList => None,
            ChunkOrExpressionsNonTerminals::ExpList1 => None,
            ChunkOrExpressionsNonTerminals::ExpList0 => None,
            ChunkOrExpressionsNonTerminals::NameList => None,
            ChunkOrExpressionsNonTerminals::AttName => None,
            ChunkOrExpressionsNonTerminals::AttNameList => None,
            ChunkOrExpressionsNonTerminals::Attrib => None,
            ChunkOrExpressionsNonTerminals::Exp => None,
            ChunkOrExpressionsNonTerminals::TableConstructor => None,
            ChunkOrExpressionsNonTerminals::FieldList1 => None,
            ChunkOrExpressionsNonTerminals::FieldList => None,
            ChunkOrExpressionsNonTerminals::Field => None,
            ChunkOrExpressionsNonTerminals::FieldSep => None,
            ChunkOrExpressionsNonTerminals::FunctionDef => None,
            ChunkOrExpressionsNonTerminals::FuncBody => None,
            ChunkOrExpressionsNonTerminals::FuncName1 => None,
            ChunkOrExpressionsNonTerminals::FuncName => None,
            ChunkOrExpressionsNonTerminals::ParList => None,
            ChunkOrExpressionsNonTerminals::error => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Error)
            }
            ChunkOrExpressionsNonTerminals::_StatementPlus29 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::PlusLeft)
            }
            ChunkOrExpressionsNonTerminals::_StatementStar30 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Star)
            }
            ChunkOrExpressionsNonTerminals::_ReturnStatementQuestion31 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::_ElseIfPlus32 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::PlusLeft)
            }
            ChunkOrExpressionsNonTerminals::_ElseIfStar33 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Star)
            }
            ChunkOrExpressionsNonTerminals::_Group34 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Group)
            }
            ChunkOrExpressionsNonTerminals::__Group34Question35 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::_Group36 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Group)
            }
            ChunkOrExpressionsNonTerminals::__Group36Question37 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::_Group38 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Group)
            }
            ChunkOrExpressionsNonTerminals::__Group38Question39 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::_semicolonQuestion40 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::_FieldSepQuestion41 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::_ParListQuestion42 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::_Group43 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Group)
            }
            ChunkOrExpressionsNonTerminals::__Group43Question44 => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Optional)
            }
            ChunkOrExpressionsNonTerminals::Augmented => {
                Some(::rusty_lr::nonterminal::NonTerminalType::Augmented)
            }
        }
    }
}
#[doc = r" enum for each non-terminal and terminal symbol, that actually hold data"]
#[allow(unused_braces, unused_parens, non_snake_case, non_camel_case_types)]
#[derive(Clone)]
pub enum ChunkOrExpressionsTokenData {
    Terminals(Token),
    Empty,
    Variant2(ChunkOrExpressions),
    Variant3(statement::Block),
    Variant4(Statement),
    Variant5(statement::StmtElseIf),
    Variant6(statement::ReturnStatement),
    Variant7(Expression),
    Variant8(expression::ExprFunctionCall),
    Variant9(expression::FunctionCallArguments),
    Variant10(Vec<Expression>),
    Variant11(Vec<SpannedString>),
    Variant12(statement::AttName),
    Variant13(Vec<statement::AttName>),
    Variant14(Option<statement::Attrib>),
    Variant15(expression::ExprTable),
    Variant16(Vec<expression::TableField>),
    Variant17(expression::TableField),
    Variant18(expression::ExprFunction),
    Variant19(statement::FunctionName),
    Variant20(expression::ParameterList),
    Variant21(Vec<Statement>),
    Variant22(Option<statement::ReturnStatement>),
    Variant23(Vec<statement::StmtElseIf>),
    Variant24(Option<statement::Block>),
    Variant25(Option<Expression>),
    Variant26(Option<Vec<Expression>>),
    Variant27(Option<Token>),
    Variant28(Option<expression::ParameterList>),
}
#[allow(
    unused_braces,
    unused_parens,
    unused_variables,
    non_snake_case,
    unused_mut,
    dead_code
)]
impl ChunkOrExpressionsTokenData {
    fn reduce_identity(args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>, idx: usize) -> Self {
        let value = args.swap_remove(idx).0;
        args.clear();
        value
    }
    fn reduce_clear(args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>) -> Self {
        args.clear();
        ChunkOrExpressionsTokenData::Empty
    }
    #[doc = "ChunkOrExpressions -> Chunk"]
    #[inline]
    fn reduce_ChunkOrExpressions_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant3(mut Chunk), __rustylr_location_Chunk) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant2({
            ChunkOrExpressions::Chunk(Chunk)
        }))
    }
    #[doc = "ChunkOrExpressions -> ExpList1"]
    #[inline]
    fn reduce_ChunkOrExpressions_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant10(mut ExpList1), __rustylr_location_ExpList1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant2({
            ChunkOrExpressions::Expressions(ExpList1)
        }))
    }
    #[doc = "Block -> Statement* ReturnStatement?"]
    #[inline]
    fn reduce_Block_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant21(mut Statement), __rustylr_location_Statement) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (
            ChunkOrExpressionsTokenData::Variant22(mut ReturnStatement),
            __rustylr_location_ReturnStatement,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant3({
            let span0 = if let Some(first) = Statement.first() {
                first.span()
            } else {
                Span::new_none()
            };
            if let Some(ret) = ReturnStatement {
                let span1 = ret.span();
                let span = span0.merge_ordered(&span1);
                statement::Block::new(Statement, Some(ret), span)
            } else {
                let span1 = if let Some(last) = Statement.last() {
                    last.span()
                } else {
                    Span::new_none()
                };
                let span = span0.merge_ordered(&span1);
                statement::Block::new(Statement, None, span)
            }
        }))
    }
    #[doc = "Statement -> semicolon"]
    #[inline]
    fn reduce_Statement_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            Statement::None(statement::StmtNone::new(semicolon.span()))
        }))
    }
    #[doc = "Statement -> VarList equal ExpList1"]
    #[inline]
    fn reduce_Statement_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant10(mut VarList), __rustylr_location_VarList) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut equal), __rustylr_location_equal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant10(mut ExpList1), __rustylr_location_ExpList1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = VarList
                .first()
                .unwrap()
                .span()
                .merge_ordered(&ExpList1.last().unwrap().span());
            let span_eq = equal.span();
            Statement::Assignment(statement::StmtAssignment::new(
                VarList, ExpList1, span, span_eq,
            ))
        }))
    }
    #[doc = "Statement -> FunctionCall"]
    #[inline]
    fn reduce_Statement_2(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Variant8(mut FunctionCall),
            __rustylr_location_FunctionCall,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            Statement::FunctionCall(FunctionCall)
        }))
    }
    #[doc = "Statement -> coloncolon ident coloncolon"]
    #[inline]
    fn reduce_Statement_3(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut c1), __rustylr_location_c1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut c2), __rustylr_location_c2) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = c1.span().merge_ordered(&c2.span());
            Statement::Label(statement::StmtLabel::new(ident.into(), span))
        }))
    }
    #[doc = "Statement -> break_"]
    #[inline]
    fn reduce_Statement_4(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut break_), __rustylr_location_break_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            Statement::Break(statement::StmtBreak::new(break_.span()))
        }))
    }
    #[doc = "Statement -> goto_ ident"]
    #[inline]
    fn reduce_Statement_5(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut goto_), __rustylr_location_goto_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = goto_.span().merge_ordered(&ident.span());
            Statement::Goto(statement::StmtGoto::new(ident.into(), span))
        }))
    }
    #[doc = "Statement -> do_ Block end_"]
    #[inline]
    fn reduce_Statement_6(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut do_), __rustylr_location_do_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut end_), __rustylr_location_end_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = do_.span().merge_ordered(&end_.span());
            Statement::Do(statement::StmtDo::new(Block, span))
        }))
    }
    #[doc = "Statement -> while_ Exp do_ Block end_"]
    #[inline]
    fn reduce_Statement_7(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut while_), __rustylr_location_while_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut do_), __rustylr_location_do_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut end_), __rustylr_location_end_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = while_.span().merge_ordered(&end_.span());
            Statement::While(statement::StmtWhile::new(Exp, Block, span))
        }))
    }
    #[doc = "Statement -> repeat_ Block until_ Exp"]
    #[inline]
    fn reduce_Statement_8(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut repeat_), __rustylr_location_repeat_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut until_), __rustylr_location_until_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = repeat_.span().merge_ordered(&Exp.span());
            Statement::Repeat(statement::StmtRepeat::new(Block, Exp, span))
        }))
    }
    #[doc = "Statement -> if_ Exp then_ Block ElseIf* (else_, Block)? end_"]
    #[inline]
    fn reduce_Statement_9(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut if_), __rustylr_location_if_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut then_), __rustylr_location_then_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant23(mut elseifs), __rustylr_location_elseifs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant24(mut else_), __rustylr_location_else_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut end_), __rustylr_location_end_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = if_.span().merge_ordered(&end_.span());
            Statement::If(statement::StmtIf::new(Exp, Block, elseifs, else_, span))
        }))
    }
    #[doc = "Statement -> for_ ident equal Exp comma Exp (comma, Exp)? do_ Block end_"]
    #[inline]
    fn reduce_Statement_10(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut for_), __rustylr_location_for_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut equal), __rustylr_location_equal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut start), __rustylr_location_start) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut comma), __rustylr_location_comma) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut end), __rustylr_location_end) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant25(mut step), __rustylr_location_step) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut do_), __rustylr_location_do_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut end_), __rustylr_location_end_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = for_.span().merge_ordered(&end_.span());
            Statement::For(statement::StmtFor::new(
                ident.token_type.into_ident().unwrap(),
                start,
                end,
                step.unwrap_or_else(|| {
                    Expression::Numeric(expression::ExprNumeric::new(1.into(), Span::new_none()))
                }),
                Block,
                span,
            ))
        }))
    }
    #[doc = "Statement -> for_ NameList in_ ExpList1 do_ Block end_"]
    #[inline]
    fn reduce_Statement_11(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut for_), __rustylr_location_for_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant11(mut NameList), __rustylr_location_NameList) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut in_), __rustylr_location_in_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant10(mut ExpList1), __rustylr_location_ExpList1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut do_), __rustylr_location_do_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut end_), __rustylr_location_end_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = for_.span().merge_ordered(&end_.span());
            Statement::ForGeneric(statement::StmtForGeneric::new(
                NameList, ExpList1, Block, span,
            ))
        }))
    }
    #[doc = "Statement -> function_ FuncName FuncBody"]
    #[inline]
    fn reduce_Statement_12(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut function_), __rustylr_location_function_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant19(mut FuncName), __rustylr_location_FuncName) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant18(mut FuncBody), __rustylr_location_FuncBody) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = function_.span().merge_ordered(&FuncBody.span());
            Statement::FunctionDefinition(statement::StmtFunctionDefinition::new(
                FuncName, FuncBody, span,
            ))
        }))
    }
    #[doc = "Statement -> local_ function_ ident FuncBody"]
    #[inline]
    fn reduce_Statement_13(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut local_), __rustylr_location_local_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut function_), __rustylr_location_function_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant18(mut FuncBody), __rustylr_location_FuncBody) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span = local_.span().merge_ordered(&FuncBody.span());
            Statement::FunctionDefinitionLocal(statement::StmtFunctionDefinitionLocal::new(
                ident.into(),
                FuncBody,
                span,
            ))
        }))
    }
    #[doc = "Statement -> local_ AttNameList (equal, ExpList1)?"]
    #[inline]
    fn reduce_Statement_14(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut local_), __rustylr_location_local_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (
            ChunkOrExpressionsTokenData::Variant13(mut AttNameList),
            __rustylr_location_AttNameList,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant26(mut rhs_list), __rustylr_location_rhs_list) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant4({
            let span0 = local_.span();
            if let Some(rhs) = rhs_list {
                let span = span0.merge_ordered(&rhs.last().unwrap().span());
                Statement::LocalDeclaration(statement::StmtLocalDeclaration::new(
                    AttNameList,
                    Some(rhs),
                    span,
                ))
            } else {
                let span = AttNameList.last().unwrap().span();
                Statement::LocalDeclaration(statement::StmtLocalDeclaration::new(
                    AttNameList,
                    None,
                    span,
                ))
            }
        }))
    }
    #[doc = "ElseIf -> elseif_ Exp then_ Block"]
    #[inline]
    fn reduce_ElseIf_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut elseif_), __rustylr_location_elseif_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut then_), __rustylr_location_then_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant5({
            let span = if Block.span().is_none() {
                elseif_.span().merge_ordered(&then_.span())
            } else {
                elseif_.span().merge_ordered(&Block.span())
            };
            statement::StmtElseIf::new(Exp, Block, span)
        }))
    }
    #[doc = "ReturnStatement -> return_ ExpList0 semicolon?"]
    #[inline]
    fn reduce_ReturnStatement_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut return_), __rustylr_location_return_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant10(mut ExpList0), __rustylr_location_ExpList0) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant27(mut semicolon), __rustylr_location_semicolon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant6({
            let span0 = return_.span();
            let span = if let Some(last) = semicolon {
                span0.merge_ordered(&last.span())
            } else {
                if let Some(last) = ExpList0.last() {
                    span0.merge_ordered(&last.span())
                } else {
                    span0
                }
            };
            statement::ReturnStatement::new(ExpList0, span)
        }))
    }
    #[doc = "Var -> ident"]
    #[inline]
    fn reduce_Var_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::Ident(ident.into())
        }))
    }
    #[doc = "Var -> PrefixExp lbracket Exp rbracket"]
    #[inline]
    fn reduce_Var_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut PrefixExp), __rustylr_location_PrefixExp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut lbracket), __rustylr_location_lbracket) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut rbracket), __rustylr_location_rbracket) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            let span = PrefixExp.span().merge_ordered(&rbracket.span());
            Expression::TableIndex(expression::ExprTableIndex::new(PrefixExp, Exp, span))
        }))
    }
    #[doc = "Var -> PrefixExp dot ident"]
    #[inline]
    fn reduce_Var_2(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut PrefixExp), __rustylr_location_PrefixExp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut dot), __rustylr_location_dot) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            let span = PrefixExp.span().merge_ordered(&ident.span());
            let member = expression::ExprString::from(ident);
            Expression::TableIndex(expression::ExprTableIndex::new(
                PrefixExp,
                Expression::String(member),
                span,
            ))
        }))
    }
    #[doc = "PrefixExp -> FunctionCall"]
    #[inline]
    fn reduce_PrefixExp_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Variant8(mut FunctionCall),
            __rustylr_location_FunctionCall,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::FunctionCall(FunctionCall)
        }))
    }
    #[doc = "FunctionCall -> PrefixExp Args"]
    #[inline]
    fn reduce_FunctionCall_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut PrefixExp), __rustylr_location_PrefixExp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant9(mut Args), __rustylr_location_Args) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant8({
            let span = PrefixExp.span().merge_ordered(&Args.span());
            expression::ExprFunctionCall::new(PrefixExp, None, Args, span)
        }))
    }
    #[doc = "FunctionCall -> PrefixExp colon ident Args"]
    #[inline]
    fn reduce_FunctionCall_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut PrefixExp), __rustylr_location_PrefixExp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut colon), __rustylr_location_colon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant9(mut Args), __rustylr_location_Args) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant8({
            let span = PrefixExp.span().merge_ordered(&Args.span());
            expression::ExprFunctionCall::new(PrefixExp, Some(ident.into()), Args, span)
        }))
    }
    #[doc = "Args -> lparen ExpList0 rparen"]
    #[inline]
    fn reduce_Args_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut lparen), __rustylr_location_lparen) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant10(mut ExpList0), __rustylr_location_ExpList0) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut rparen), __rustylr_location_rparen) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant9({
            let span = lparen.span().merge_ordered(&rparen.span());
            expression::FunctionCallArguments::new(ExpList0, span)
        }))
    }
    #[doc = "Args -> TableConstructor"]
    #[inline]
    fn reduce_Args_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Variant15(mut TableConstructor),
            __rustylr_location_TableConstructor,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant9({
            let span = TableConstructor.span();
            let table_expr = Expression::Table(TableConstructor);
            let exprs = vec![table_expr];
            expression::FunctionCallArguments::new(exprs, span)
        }))
    }
    #[doc = "Args -> string_literal"]
    #[inline]
    fn reduce_Args_2(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Terminals(mut string_literal),
            __rustylr_location_string_literal,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant9({
            let span = string_literal.span();
            let exprs = vec![Expression::String(string_literal.into())];
            expression::FunctionCallArguments::new(exprs, span)
        }))
    }
    #[doc = "VarList -> VarList comma Var"]
    #[inline]
    fn reduce_VarList_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant10(mut VarList), __rustylr_location_VarList) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut comma), __rustylr_location_comma) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Var), __rustylr_location_Var) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant10({
            VarList.push(Var);
            VarList
        }))
    }
    #[doc = "VarList -> Var"]
    #[inline]
    fn reduce_VarList_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut Var), __rustylr_location_Var) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant10({ vec![Var] }))
    }
    #[doc = "ExpList1 -> ExpList1 comma Exp"]
    #[inline]
    fn reduce_ExpList1_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant10(mut ExpList1), __rustylr_location_ExpList1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut comma), __rustylr_location_comma) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant10({
            ExpList1.push(Exp);
            ExpList1
        }))
    }
    #[doc = "ExpList1 -> Exp"]
    #[inline]
    fn reduce_ExpList1_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant10({ vec![Exp] }))
    }
    #[doc = "ExpList0 -> ExpList1"]
    #[inline]
    fn reduce_ExpList0_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant10(mut ExpList1), __rustylr_location_ExpList1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant10({ ExpList1 }))
    }
    #[doc = "ExpList0 -> "]
    #[inline]
    fn reduce_ExpList0_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant10({ vec![] }))
    }
    #[doc = "NameList -> NameList comma ident"]
    #[inline]
    fn reduce_NameList_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant11(mut NameList), __rustylr_location_NameList) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut comma), __rustylr_location_comma) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant11({
            NameList.push(ident.into());
            NameList
        }))
    }
    #[doc = "NameList -> ident"]
    #[inline]
    fn reduce_NameList_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant11({
            vec![ident.into()]
        }))
    }
    #[doc = "AttName -> ident Attrib"]
    #[inline]
    fn reduce_AttName_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant14(mut Attrib), __rustylr_location_Attrib) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant12({
            let span = ident.span();
            statement::AttName::new(ident.into(), Attrib, span)
        }))
    }
    #[doc = "AttNameList -> AttNameList comma AttName"]
    #[inline]
    fn reduce_AttNameList_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Variant13(mut AttNameList),
            __rustylr_location_AttNameList,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut comma), __rustylr_location_comma) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant12(mut AttName), __rustylr_location_AttName) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant13({
            AttNameList.push(AttName);
            AttNameList
        }))
    }
    #[doc = "AttNameList -> AttName"]
    #[inline]
    fn reduce_AttNameList_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant12(mut AttName), __rustylr_location_AttName) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant13({ vec![AttName] }))
    }
    #[doc = "Attrib -> less ident greater"]
    #[inline]
    fn reduce_Attrib_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut less), __rustylr_location_less) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut greater), __rustylr_location_greater) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant14({
            let s: SpannedString = ident.into();
            match s.as_str() {
                "const" => Some(statement::Attrib::Const),
                "close" => Some(statement::Attrib::Close),
                _ => {
                    return Err(ParseError::UnknownAttribute(s));
                }
            }
        }))
    }
    #[doc = "Attrib -> "]
    #[inline]
    fn reduce_Attrib_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant14({ None }))
    }
    #[doc = "Exp -> numeric_literal"]
    #[inline]
    fn reduce_Exp_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Terminals(mut numeric_literal),
            __rustylr_location_numeric_literal,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::Numeric(numeric_literal.into())
        }))
    }
    #[doc = "Exp -> nil"]
    #[inline]
    fn reduce_Exp_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut nil), __rustylr_location_nil) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::Nil(nil.into())
        }))
    }
    #[doc = "Exp -> string_literal"]
    #[inline]
    fn reduce_Exp_2(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Terminals(mut string_literal),
            __rustylr_location_string_literal,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::String(string_literal.into())
        }))
    }
    #[doc = "Exp -> bool_"]
    #[inline]
    fn reduce_Exp_3(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut bool_), __rustylr_location_bool_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::Bool(bool_.into())
        }))
    }
    #[doc = "Exp -> dotdotdot"]
    #[inline]
    fn reduce_Exp_4(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut dotdotdot), __rustylr_location_dotdotdot) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::Variadic(dotdotdot.into())
        }))
    }
    #[doc = "Exp -> FunctionDef"]
    #[inline]
    fn reduce_Exp_5(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Variant18(mut FunctionDef),
            __rustylr_location_FunctionDef,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::Function(FunctionDef)
        }))
    }
    #[doc = "Exp -> TableConstructor"]
    #[inline]
    fn reduce_Exp_7(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (
            ChunkOrExpressionsTokenData::Variant15(mut TableConstructor),
            __rustylr_location_TableConstructor,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            Expression::Table(TableConstructor)
        }))
    }
    #[doc = "Exp -> not_ Exp"]
    #[inline]
    fn reduce_Exp_8(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut not_), __rustylr_location_not_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_unary_node!(LogicalNot, not_, Exp)
        }))
    }
    #[doc = "Exp -> hash Exp"]
    #[inline]
    fn reduce_Exp_9(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut hash), __rustylr_location_hash) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_unary_node!(Length, hash, Exp)
        }))
    }
    #[doc = "Exp -> minus Exp"]
    #[inline]
    fn reduce_Exp_10(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut minus), __rustylr_location_minus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_unary_node!(Minus, minus, Exp)
        }))
    }
    #[doc = "Exp -> plus Exp"]
    #[inline]
    fn reduce_Exp_11(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut plus), __rustylr_location_plus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_unary_node!(Plus, plus, Exp)
        }))
    }
    #[doc = "Exp -> tilde Exp"]
    #[inline]
    fn reduce_Exp_12(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut tilde), __rustylr_location_tilde) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_unary_node!(BitwiseNot, tilde, Exp)
        }))
    }
    #[doc = "Exp -> Exp asterisk Exp"]
    #[inline]
    fn reduce_Exp_13(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut asterisk), __rustylr_location_asterisk) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Mul, asterisk, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp slash Exp"]
    #[inline]
    fn reduce_Exp_14(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut slash), __rustylr_location_slash) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Div, slash, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp slashslash Exp"]
    #[inline]
    fn reduce_Exp_15(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut slashslash), __rustylr_location_slashslash) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(FloorDiv, slashslash, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp percent Exp"]
    #[inline]
    fn reduce_Exp_16(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut percent), __rustylr_location_percent) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Mod, percent, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp plus Exp"]
    #[inline]
    fn reduce_Exp_17(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut plus), __rustylr_location_plus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Add, plus, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp minus Exp"]
    #[inline]
    fn reduce_Exp_18(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut minus), __rustylr_location_minus) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Sub, minus, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp dotdot Exp"]
    #[inline]
    fn reduce_Exp_19(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut dotdot), __rustylr_location_dotdot) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Concat, dotdot, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp lessless Exp"]
    #[inline]
    fn reduce_Exp_20(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut lessless), __rustylr_location_lessless) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(ShiftLeft, lessless, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp greatergreater Exp"]
    #[inline]
    fn reduce_Exp_21(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (
            ChunkOrExpressionsTokenData::Terminals(mut greatergreater),
            __rustylr_location_greatergreater,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(ShiftRight, greatergreater, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp ampersand Exp"]
    #[inline]
    fn reduce_Exp_22(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ampersand), __rustylr_location_ampersand) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(BitwiseAnd, ampersand, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp tilde Exp"]
    #[inline]
    fn reduce_Exp_23(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut tilde), __rustylr_location_tilde) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(BitwiseXor, tilde, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp pipe Exp"]
    #[inline]
    fn reduce_Exp_24(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut pipe), __rustylr_location_pipe) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(BitwiseOr, pipe, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp less Exp"]
    #[inline]
    fn reduce_Exp_25(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut less), __rustylr_location_less) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(LessThan, less, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp lessequal Exp"]
    #[inline]
    fn reduce_Exp_26(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut lessequal), __rustylr_location_lessequal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(LessEqual, lessequal, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp greater Exp"]
    #[inline]
    fn reduce_Exp_27(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut greater), __rustylr_location_greater) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(GreaterThan, greater, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp greaterequal Exp"]
    #[inline]
    fn reduce_Exp_28(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (
            ChunkOrExpressionsTokenData::Terminals(mut greaterequal),
            __rustylr_location_greaterequal,
        ) = __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(GreaterEqual, greaterequal, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp tildeequal Exp"]
    #[inline]
    fn reduce_Exp_29(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut tildeequal), __rustylr_location_tildeequal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(NotEqual, tildeequal, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp equalequal Exp"]
    #[inline]
    fn reduce_Exp_30(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut equalequal), __rustylr_location_equalequal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Equal, equalequal, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp and_ Exp"]
    #[inline]
    fn reduce_Exp_31(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut and_), __rustylr_location_and_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(LogicalAnd, and_, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp or_ Exp"]
    #[inline]
    fn reduce_Exp_32(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut or_), __rustylr_location_or_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(LogicalOr, or_, lhs, rhs)
        }))
    }
    #[doc = "Exp -> Exp caret Exp"]
    #[inline]
    fn reduce_Exp_33(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut lhs), __rustylr_location_lhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut caret), __rustylr_location_caret) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut rhs), __rustylr_location_rhs) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant7({
            new_binary_node!(Pow, caret, lhs, rhs)
        }))
    }
    #[doc = "TableConstructor -> lbrace FieldList rbrace"]
    #[inline]
    fn reduce_TableConstructor_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut lbrace), __rustylr_location_lbrace) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant16(mut FieldList), __rustylr_location_FieldList) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut rbrace), __rustylr_location_rbrace) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant15({
            let span = lbrace.span().merge_ordered(&rbrace.span());
            expression::ExprTable::new(FieldList, span)
        }))
    }
    #[doc = "FieldList1 -> FieldList1 FieldSep Field"]
    #[inline]
    fn reduce_FieldList1_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant16(mut FieldList1), __rustylr_location_FieldList1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_FieldSep) = __rustylr_args.pop().unwrap();
        let (ChunkOrExpressionsTokenData::Variant17(mut Field), __rustylr_location_Field) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant16({
            FieldList1.push(Field);
            FieldList1
        }))
    }
    #[doc = "FieldList1 -> Field"]
    #[inline]
    fn reduce_FieldList1_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant17(mut Field), __rustylr_location_Field) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant16({ vec![Field] }))
    }
    #[doc = "FieldList -> FieldList1 FieldSep?"]
    #[inline]
    fn reduce_FieldList_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant16(mut FieldList1), __rustylr_location_FieldList1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (_, __rustylr_location_FieldSep) = __rustylr_args.pop().unwrap();
        Ok(ChunkOrExpressionsTokenData::Variant16({ FieldList1 }))
    }
    #[doc = "FieldList -> "]
    #[inline]
    fn reduce_FieldList_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant16({ vec![] }))
    }
    #[doc = "Field -> lbracket Exp rbracket equal Exp"]
    #[inline]
    fn reduce_Field_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut lbracket), __rustylr_location_lbracket) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut k), __rustylr_location_k) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut rbracket), __rustylr_location_rbracket) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut equal), __rustylr_location_equal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut v), __rustylr_location_v) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant17({
            let span = lbracket.span().merge_ordered(&v.span());
            expression::TableField::KeyValue(expression::TableFieldKeyValue::new(k, v, span))
        }))
    }
    #[doc = "Field -> ident equal Exp"]
    #[inline]
    fn reduce_Field_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut equal), __rustylr_location_equal) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant17({
            let span = ident.span().merge_ordered(&Exp.span());
            expression::TableField::NameValue(expression::TableFieldNameValue::new(
                ident.into(),
                Exp,
                span,
            ))
        }))
    }
    #[doc = "Field -> Exp"]
    #[inline]
    fn reduce_Field_2(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut Exp), __rustylr_location_Exp) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant17({
            expression::TableField::Value(expression::TableFieldValue::new(Exp))
        }))
    }
    #[doc = "FunctionDef -> function_ FuncBody"]
    #[inline]
    fn reduce_FunctionDef_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut function_), __rustylr_location_function_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant18(mut FuncBody), __rustylr_location_FuncBody) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant18({
            let span = function_.span().merge_ordered(&FuncBody.span());
            FuncBody.span = span;
            FuncBody
        }))
    }
    #[doc = "FuncBody -> lparen ParList? rparen Block end_"]
    #[inline]
    fn reduce_FuncBody_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut lparen), __rustylr_location_lparen) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant28(mut ParList), __rustylr_location_ParList) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut rparen), __rustylr_location_rparen) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant3(mut Block), __rustylr_location_Block) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut end_), __rustylr_location_end_) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant18({
            let span = lparen.span().merge_ordered(&end_.span());
            expression::ExprFunction::new(ParList, Block, span)
        }))
    }
    #[doc = "FuncName1 -> FuncName1 dot ident"]
    #[inline]
    fn reduce_FuncName1_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant11(mut FuncName1), __rustylr_location_FuncName1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut dot), __rustylr_location_dot) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant11({
            FuncName1.push(ident.into());
            FuncName1
        }))
    }
    #[doc = "FuncName1 -> ident"]
    #[inline]
    fn reduce_FuncName1_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant11({
            vec![ident.into()]
        }))
    }
    #[doc = "FuncName -> FuncName1 colon ident"]
    #[inline]
    fn reduce_FuncName_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant11(mut FuncName1), __rustylr_location_FuncName1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut colon), __rustylr_location_colon) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Terminals(mut ident), __rustylr_location_ident) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant19({
            let span = FuncName1
                .first()
                .unwrap()
                .span()
                .merge_ordered(&ident.span());
            statement::FunctionName::new(FuncName1, Some(ident.into()), span)
        }))
    }
    #[doc = "FuncName -> FuncName1"]
    #[inline]
    fn reduce_FuncName_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant11(mut FuncName1), __rustylr_location_FuncName1) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant19({
            let span = FuncName1
                .first()
                .unwrap()
                .span()
                .merge_ordered(&FuncName1.last().unwrap().span());
            statement::FunctionName::new(FuncName1, None, span)
        }))
    }
    #[doc = "ParList -> NameList (comma, dotdotdot)?"]
    #[inline]
    fn reduce_ParList_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant11(mut NameList), __rustylr_location_NameList) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant27(mut var), __rustylr_location_var) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant20({
            if let Some(var) = var {
                let span = NameList.first().unwrap().span().merge_ordered(&var.span());
                expression::ParameterList::new(NameList, true, span)
            } else {
                let span = NameList.first().unwrap().span();
                expression::ParameterList::new(NameList, false, span)
            }
        }))
    }
    #[doc = "ParList -> dotdotdot"]
    #[inline]
    fn reduce_ParList_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut dotdotdot), __rustylr_location_dotdotdot) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant20({
            expression::ParameterList::new(Vec::new(), true, dotdotdot.span())
        }))
    }
    #[doc = "Statement+ -> Statement"]
    #[inline]
    fn reduce__StatementPlus29_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant4(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant21({ vec![A] }))
    }
    #[doc = "Statement+ -> Statement+ Statement"]
    #[inline]
    fn reduce__StatementPlus29_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant21(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant4(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant21({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "Statement* -> "]
    #[inline]
    fn reduce__StatementStar30_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant21({ vec![] }))
    }
    #[doc = "ReturnStatement? -> ReturnStatement"]
    #[inline]
    fn reduce__ReturnStatementQuestion31_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant6(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant22(Some(A)))
    }
    #[doc = "ReturnStatement? -> "]
    #[inline]
    fn reduce__ReturnStatementQuestion31_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant22({ None }))
    }
    #[doc = "ElseIf+ -> ElseIf"]
    #[inline]
    fn reduce__ElseIfPlus32_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant5(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant23({ vec![A] }))
    }
    #[doc = "ElseIf+ -> ElseIf+ ElseIf"]
    #[inline]
    fn reduce__ElseIfPlus32_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant23(mut Ap), __rustylr_location_Ap) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        let (ChunkOrExpressionsTokenData::Variant5(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant23({
            Ap.push(A);
            Ap
        }))
    }
    #[doc = "ElseIf* -> "]
    #[inline]
    fn reduce__ElseIfStar33_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant23({ vec![] }))
    }
    #[doc = "(else_, Block)? -> (else_, Block)"]
    #[inline]
    fn reduce___Group34Question35_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant3(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant24(Some(A)))
    }
    #[doc = "(else_, Block)? -> "]
    #[inline]
    fn reduce___Group34Question35_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant24({ None }))
    }
    #[doc = "(comma, Exp)? -> (comma, Exp)"]
    #[inline]
    fn reduce___Group36Question37_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant7(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant25(Some(A)))
    }
    #[doc = "(comma, Exp)? -> "]
    #[inline]
    fn reduce___Group36Question37_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant25({ None }))
    }
    #[doc = "(equal, ExpList1)? -> (equal, ExpList1)"]
    #[inline]
    fn reduce___Group38Question39_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant10(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant26(Some(A)))
    }
    #[doc = "(equal, ExpList1)? -> "]
    #[inline]
    fn reduce___Group38Question39_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant26({ None }))
    }
    #[doc = "semicolon? -> semicolon"]
    #[inline]
    fn reduce__semicolonQuestion40_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant27(Some(A)))
    }
    #[doc = "semicolon? -> "]
    #[inline]
    fn reduce__semicolonQuestion40_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant27({ None }))
    }
    #[doc = "ParList? -> ParList"]
    #[inline]
    fn reduce__ParListQuestion42_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Variant20(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant28(Some(A)))
    }
    #[doc = "ParList? -> "]
    #[inline]
    fn reduce__ParListQuestion42_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant28({ None }))
    }
    #[doc = "(comma, dotdotdot)? -> (comma, dotdotdot)"]
    #[inline]
    fn reduce___Group43Question44_0(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        let (ChunkOrExpressionsTokenData::Terminals(mut A), __rustylr_location_A) =
            __rustylr_args.pop().unwrap()
        else {
            unreachable!()
        };
        Ok(ChunkOrExpressionsTokenData::Variant27(Some(A)))
    }
    #[doc = "(comma, dotdotdot)? -> "]
    #[inline]
    fn reduce___Group43Question44_1(
        __rustylr_args: &mut Vec<(Self, ::rusty_lr::DefaultLocation)>,
        shift: &mut bool,
        lookahead: &Token,
        data: &mut (),
        __rustylr_location0: &mut ::rusty_lr::DefaultLocation,
    ) -> Result<ChunkOrExpressionsTokenData, ParseError> {
        Ok(ChunkOrExpressionsTokenData::Variant27({ None }))
    }
}
#[allow(
    unused_braces,
    unused_parens,
    non_snake_case,
    non_camel_case_types,
    unused_variables
)]
impl ::rusty_lr::nonterminal::TokenData for ChunkOrExpressionsTokenData {
    type Term = Token;
    type NonTerm = ChunkOrExpressionsNonTerminals;
    type ReduceActionError = ParseError;
    type UserData = ();
    type StartType = ChunkOrExpressions;
    type Location = ::rusty_lr::DefaultLocation;
    fn reduce_action(
        rule_index: usize,
        reduce_args: &mut Vec<(Self, Self::Location)>,
        shift: &mut bool,
        lookahead: &Self::Term,
        user_data: &mut Self::UserData,
        location0: &mut Self::Location,
    ) -> Result<Self, Self::ReduceActionError> {
        match rule_index {
            0usize => Self::reduce_ChunkOrExpressions_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            1usize => Self::reduce_ChunkOrExpressions_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            2usize => Self::reduce_Block_0(reduce_args, shift, lookahead, user_data, location0),
            3usize => Self::reduce_Statement_0(reduce_args, shift, lookahead, user_data, location0),
            4usize => Self::reduce_Statement_1(reduce_args, shift, lookahead, user_data, location0),
            5usize => Self::reduce_Statement_2(reduce_args, shift, lookahead, user_data, location0),
            6usize => Self::reduce_Statement_3(reduce_args, shift, lookahead, user_data, location0),
            7usize => Self::reduce_Statement_4(reduce_args, shift, lookahead, user_data, location0),
            8usize => Self::reduce_Statement_5(reduce_args, shift, lookahead, user_data, location0),
            9usize => Self::reduce_Statement_6(reduce_args, shift, lookahead, user_data, location0),
            10usize => {
                Self::reduce_Statement_7(reduce_args, shift, lookahead, user_data, location0)
            }
            11usize => {
                Self::reduce_Statement_8(reduce_args, shift, lookahead, user_data, location0)
            }
            12usize => {
                Self::reduce_Statement_9(reduce_args, shift, lookahead, user_data, location0)
            }
            13usize => {
                Self::reduce_Statement_10(reduce_args, shift, lookahead, user_data, location0)
            }
            14usize => {
                Self::reduce_Statement_11(reduce_args, shift, lookahead, user_data, location0)
            }
            15usize => {
                Self::reduce_Statement_12(reduce_args, shift, lookahead, user_data, location0)
            }
            16usize => {
                Self::reduce_Statement_13(reduce_args, shift, lookahead, user_data, location0)
            }
            17usize => {
                Self::reduce_Statement_14(reduce_args, shift, lookahead, user_data, location0)
            }
            18usize => Self::reduce_ElseIf_0(reduce_args, shift, lookahead, user_data, location0),
            19usize => {
                Self::reduce_ReturnStatement_0(reduce_args, shift, lookahead, user_data, location0)
            }
            20usize => Self::reduce_Var_0(reduce_args, shift, lookahead, user_data, location0),
            21usize => Self::reduce_Var_1(reduce_args, shift, lookahead, user_data, location0),
            22usize => Self::reduce_Var_2(reduce_args, shift, lookahead, user_data, location0),
            23usize => {
                Self::reduce_PrefixExp_1(reduce_args, shift, lookahead, user_data, location0)
            }
            24usize => {
                Self::reduce_FunctionCall_0(reduce_args, shift, lookahead, user_data, location0)
            }
            25usize => {
                Self::reduce_FunctionCall_1(reduce_args, shift, lookahead, user_data, location0)
            }
            26usize => Self::reduce_Args_0(reduce_args, shift, lookahead, user_data, location0),
            27usize => Self::reduce_Args_1(reduce_args, shift, lookahead, user_data, location0),
            28usize => Self::reduce_Args_2(reduce_args, shift, lookahead, user_data, location0),
            29usize => Self::reduce_VarList_0(reduce_args, shift, lookahead, user_data, location0),
            30usize => Self::reduce_VarList_1(reduce_args, shift, lookahead, user_data, location0),
            31usize => Self::reduce_ExpList1_0(reduce_args, shift, lookahead, user_data, location0),
            32usize => Self::reduce_ExpList1_1(reduce_args, shift, lookahead, user_data, location0),
            33usize => Self::reduce_ExpList0_0(reduce_args, shift, lookahead, user_data, location0),
            34usize => Self::reduce_ExpList0_1(reduce_args, shift, lookahead, user_data, location0),
            35usize => Self::reduce_NameList_0(reduce_args, shift, lookahead, user_data, location0),
            36usize => Self::reduce_NameList_1(reduce_args, shift, lookahead, user_data, location0),
            37usize => Self::reduce_AttName_0(reduce_args, shift, lookahead, user_data, location0),
            38usize => {
                Self::reduce_AttNameList_0(reduce_args, shift, lookahead, user_data, location0)
            }
            39usize => {
                Self::reduce_AttNameList_1(reduce_args, shift, lookahead, user_data, location0)
            }
            40usize => Self::reduce_Attrib_0(reduce_args, shift, lookahead, user_data, location0),
            41usize => Self::reduce_Attrib_1(reduce_args, shift, lookahead, user_data, location0),
            42usize => Self::reduce_Exp_0(reduce_args, shift, lookahead, user_data, location0),
            43usize => Self::reduce_Exp_1(reduce_args, shift, lookahead, user_data, location0),
            44usize => Self::reduce_Exp_2(reduce_args, shift, lookahead, user_data, location0),
            45usize => Self::reduce_Exp_3(reduce_args, shift, lookahead, user_data, location0),
            46usize => Self::reduce_Exp_4(reduce_args, shift, lookahead, user_data, location0),
            47usize => Self::reduce_Exp_5(reduce_args, shift, lookahead, user_data, location0),
            48usize => Self::reduce_Exp_7(reduce_args, shift, lookahead, user_data, location0),
            49usize => Self::reduce_Exp_8(reduce_args, shift, lookahead, user_data, location0),
            50usize => Self::reduce_Exp_9(reduce_args, shift, lookahead, user_data, location0),
            51usize => Self::reduce_Exp_10(reduce_args, shift, lookahead, user_data, location0),
            52usize => Self::reduce_Exp_11(reduce_args, shift, lookahead, user_data, location0),
            53usize => Self::reduce_Exp_12(reduce_args, shift, lookahead, user_data, location0),
            54usize => Self::reduce_Exp_13(reduce_args, shift, lookahead, user_data, location0),
            55usize => Self::reduce_Exp_14(reduce_args, shift, lookahead, user_data, location0),
            56usize => Self::reduce_Exp_15(reduce_args, shift, lookahead, user_data, location0),
            57usize => Self::reduce_Exp_16(reduce_args, shift, lookahead, user_data, location0),
            58usize => Self::reduce_Exp_17(reduce_args, shift, lookahead, user_data, location0),
            59usize => Self::reduce_Exp_18(reduce_args, shift, lookahead, user_data, location0),
            60usize => Self::reduce_Exp_19(reduce_args, shift, lookahead, user_data, location0),
            61usize => Self::reduce_Exp_20(reduce_args, shift, lookahead, user_data, location0),
            62usize => Self::reduce_Exp_21(reduce_args, shift, lookahead, user_data, location0),
            63usize => Self::reduce_Exp_22(reduce_args, shift, lookahead, user_data, location0),
            64usize => Self::reduce_Exp_23(reduce_args, shift, lookahead, user_data, location0),
            65usize => Self::reduce_Exp_24(reduce_args, shift, lookahead, user_data, location0),
            66usize => Self::reduce_Exp_25(reduce_args, shift, lookahead, user_data, location0),
            67usize => Self::reduce_Exp_26(reduce_args, shift, lookahead, user_data, location0),
            68usize => Self::reduce_Exp_27(reduce_args, shift, lookahead, user_data, location0),
            69usize => Self::reduce_Exp_28(reduce_args, shift, lookahead, user_data, location0),
            70usize => Self::reduce_Exp_29(reduce_args, shift, lookahead, user_data, location0),
            71usize => Self::reduce_Exp_30(reduce_args, shift, lookahead, user_data, location0),
            72usize => Self::reduce_Exp_31(reduce_args, shift, lookahead, user_data, location0),
            73usize => Self::reduce_Exp_32(reduce_args, shift, lookahead, user_data, location0),
            74usize => Self::reduce_Exp_33(reduce_args, shift, lookahead, user_data, location0),
            75usize => {
                Self::reduce_TableConstructor_0(reduce_args, shift, lookahead, user_data, location0)
            }
            76usize => {
                Self::reduce_FieldList1_0(reduce_args, shift, lookahead, user_data, location0)
            }
            77usize => {
                Self::reduce_FieldList1_1(reduce_args, shift, lookahead, user_data, location0)
            }
            78usize => {
                Self::reduce_FieldList_0(reduce_args, shift, lookahead, user_data, location0)
            }
            79usize => {
                Self::reduce_FieldList_1(reduce_args, shift, lookahead, user_data, location0)
            }
            80usize => Self::reduce_Field_0(reduce_args, shift, lookahead, user_data, location0),
            81usize => Self::reduce_Field_1(reduce_args, shift, lookahead, user_data, location0),
            82usize => Self::reduce_Field_2(reduce_args, shift, lookahead, user_data, location0),
            83usize => {
                Self::reduce_FunctionDef_0(reduce_args, shift, lookahead, user_data, location0)
            }
            84usize => Self::reduce_FuncBody_0(reduce_args, shift, lookahead, user_data, location0),
            85usize => {
                Self::reduce_FuncName1_0(reduce_args, shift, lookahead, user_data, location0)
            }
            86usize => {
                Self::reduce_FuncName1_1(reduce_args, shift, lookahead, user_data, location0)
            }
            87usize => Self::reduce_FuncName_0(reduce_args, shift, lookahead, user_data, location0),
            88usize => Self::reduce_FuncName_1(reduce_args, shift, lookahead, user_data, location0),
            89usize => Self::reduce_ParList_0(reduce_args, shift, lookahead, user_data, location0),
            90usize => Self::reduce_ParList_1(reduce_args, shift, lookahead, user_data, location0),
            91usize => {
                Self::reduce__StatementPlus29_0(reduce_args, shift, lookahead, user_data, location0)
            }
            92usize => {
                Self::reduce__StatementPlus29_1(reduce_args, shift, lookahead, user_data, location0)
            }
            93usize => {
                Self::reduce__StatementStar30_1(reduce_args, shift, lookahead, user_data, location0)
            }
            94usize => Self::reduce__ReturnStatementQuestion31_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            95usize => Self::reduce__ReturnStatementQuestion31_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            96usize => {
                Self::reduce__ElseIfPlus32_0(reduce_args, shift, lookahead, user_data, location0)
            }
            97usize => {
                Self::reduce__ElseIfPlus32_1(reduce_args, shift, lookahead, user_data, location0)
            }
            98usize => {
                Self::reduce__ElseIfStar33_1(reduce_args, shift, lookahead, user_data, location0)
            }
            99usize => Self::reduce___Group34Question35_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            100usize => Self::reduce___Group34Question35_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            101usize => Self::reduce___Group36Question37_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            102usize => Self::reduce___Group36Question37_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            103usize => Self::reduce___Group38Question39_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            104usize => Self::reduce___Group38Question39_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            105usize => Self::reduce__semicolonQuestion40_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            106usize => Self::reduce__semicolonQuestion40_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            107usize => Self::reduce__ParListQuestion42_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            108usize => Self::reduce__ParListQuestion42_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            109usize => Self::reduce___Group43Question44_0(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            110usize => Self::reduce___Group43Question44_1(
                reduce_args,
                shift,
                lookahead,
                user_data,
                location0,
            ),
            111usize..=119usize => Ok(Self::reduce_identity(reduce_args, 0usize)),
            120usize => Ok(Self::reduce_identity(reduce_args, 1usize)),
            121usize..=125usize => Ok(Self::reduce_clear(reduce_args)),
            _ => {
                unreachable!("Invalid Rule: {}", rule_index);
            }
        }
    }
    fn new_error_nonterm() -> Self {
        ChunkOrExpressionsTokenData::Empty
    }
    fn new_terminal(term: Token) -> Self {
        ChunkOrExpressionsTokenData::Terminals(term)
    }
}
#[allow(
    unused_braces,
    unused_parens,
    non_snake_case,
    non_camel_case_types,
    unused_variables
)]
impl TryFrom<ChunkOrExpressionsTokenData> for ChunkOrExpressions {
    type Error = ();
    fn try_from(token: ChunkOrExpressionsTokenData) -> Result<Self, Self::Error> {
        match token {
            ChunkOrExpressionsTokenData::Variant2(data) => Ok(data),
            _ => Err(()),
        }
    }
}
#[doc = r" A struct that holds the entire parser table and production rules."]
#[allow(
    unused_braces,
    unused_parens,
    unused_variables,
    non_snake_case,
    unused_mut
)]
pub struct ChunkOrExpressionsParser {
    #[doc = r" production rules"]
    pub rules: Vec<ChunkOrExpressionsRule>,
    #[doc = r" states"]
    pub states: Vec<ChunkOrExpressionsState>,
    #[doc = r" terminal classes"]
    pub classes: Vec<Vec<&'static str>>,
}
impl ::rusty_lr::glr::Parser for ChunkOrExpressionsParser {
    type Term = Token;
    type NonTerm = ChunkOrExpressionsNonTerminals;
    type State = ChunkOrExpressionsState;
    type TerminalClassElement = &'static str;
    fn get_rules(&self) -> &[ChunkOrExpressionsRule] {
        &self.rules
    }
    fn get_states(&self) -> &[ChunkOrExpressionsState] {
        &self.states
    }
    fn get_terminals(
        &self,
        i: usize,
    ) -> Option<impl IntoIterator<Item = Self::TerminalClassElement> + '_> {
        self.classes.get(i).map(|class| class.iter().copied())
    }
    fn to_terminal_class(&self, terminal: &Self::Term) -> usize {
        #[allow(unreachable_patterns)]
        match filter(terminal) {
            TokenType::Ident(_) => 0usize,
            TokenType::String(_) => 1usize,
            TokenType::Numeric(_) => 2usize,
            TokenType::Nil => 3usize,
            TokenType::Bool(_) => 4usize,
            TokenType::Plus => 5usize,
            TokenType::Minus => 6usize,
            TokenType::Asterisk => 7usize,
            TokenType::Slash => 8usize,
            TokenType::Percent => 9usize,
            TokenType::Caret => 10usize,
            TokenType::Hash => 11usize,
            TokenType::Ampersand => 12usize,
            TokenType::Tilde => 13usize,
            TokenType::Pipe => 14usize,
            TokenType::LessLess => 15usize,
            TokenType::GreaterGreater => 16usize,
            TokenType::SlashSlash => 17usize,
            TokenType::EqualEqual => 18usize,
            TokenType::TildeEqual => 19usize,
            TokenType::LessEqual => 20usize,
            TokenType::GreaterEqual => 21usize,
            TokenType::Less => 22usize,
            TokenType::Greater => 23usize,
            TokenType::Equal => 24usize,
            TokenType::LParen => 25usize,
            TokenType::RParen => 26usize,
            TokenType::LBrace => 27usize,
            TokenType::RBrace => 28usize,
            TokenType::LBracket => 29usize,
            TokenType::RBracket => 30usize,
            TokenType::ColonColon => 31usize,
            TokenType::Semicolon => 32usize,
            TokenType::Colon => 33usize,
            TokenType::Comma => 34usize,
            TokenType::Dot => 35usize,
            TokenType::DotDot => 36usize,
            TokenType::DotDotDot => 37usize,
            TokenType::And => 38usize,
            TokenType::Break => 39usize,
            TokenType::Do => 40usize,
            TokenType::Else => 41usize,
            TokenType::Elseif => 42usize,
            TokenType::End => 43usize,
            TokenType::For => 44usize,
            TokenType::Function => 45usize,
            TokenType::Goto => 46usize,
            TokenType::If => 47usize,
            TokenType::In => 48usize,
            TokenType::Local => 49usize,
            TokenType::Not => 50usize,
            TokenType::Or => 51usize,
            TokenType::Repeat => 52usize,
            TokenType::Return => 53usize,
            TokenType::Then => 54usize,
            TokenType::Until => 55usize,
            TokenType::While => 56usize,
            TokenType::Eof => 57usize,
            _ => 58usize,
        }
    }
    fn get_error_nonterm(&self) -> Option<Self::NonTerm> {
        None
    }
}
#[doc = r" A struct that holds the whole parser table."]
#[allow(
    unused_braces,
    unused_parens,
    unused_variables,
    non_snake_case,
    unused_mut
)]
impl ChunkOrExpressionsParser {
    #[doc = r" Calculates the states and parser tables from the grammar."]
    #[allow(clippy::clone_on_copy)]
    pub fn new() -> Self {
        let rules = vec![
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ChunkOrExpressions,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Chunk,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ChunkOrExpressions,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::ExpList1,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Block,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::_StatementStar30),
                    ::rusty_lr::Token::NonTerm(
                        ChunkOrExpressionsNonTerminals::_ReturnStatementQuestion31,
                    ),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![::rusty_lr::Token::Term(32usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::VarList),
                    ::rusty_lr::Token::Term(24usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ExpList1),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::FunctionCall,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(31usize),
                    ::rusty_lr::Token::Term(0usize),
                    ::rusty_lr::Token::Term(31usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![::rusty_lr::Token::Term(39usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(46usize),
                    ::rusty_lr::Token::Term(0usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(40usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                    ::rusty_lr::Token::Term(43usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(56usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(40usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                    ::rusty_lr::Token::Term(43usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(52usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                    ::rusty_lr::Token::Term(55usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(47usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(54usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::_ElseIfStar33),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::__Group34Question35),
                    ::rusty_lr::Token::Term(43usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(44usize),
                    ::rusty_lr::Token::Term(0usize),
                    ::rusty_lr::Token::Term(24usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(34usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::__Group36Question37),
                    ::rusty_lr::Token::Term(40usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                    ::rusty_lr::Token::Term(43usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(44usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::NameList),
                    ::rusty_lr::Token::Term(48usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ExpList1),
                    ::rusty_lr::Token::Term(40usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                    ::rusty_lr::Token::Term(43usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(45usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FuncName),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FuncBody),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(49usize),
                    ::rusty_lr::Token::Term(45usize),
                    ::rusty_lr::Token::Term(0usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FuncBody),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Statement,
                rule: vec![
                    ::rusty_lr::Token::Term(49usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::AttNameList),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::__Group38Question39),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ElseIf,
                rule: vec![
                    ::rusty_lr::Token::Term(42usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(54usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ReturnStatement,
                rule: vec![
                    ::rusty_lr::Token::Term(53usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ExpList0),
                    ::rusty_lr::Token::NonTerm(
                        ChunkOrExpressionsNonTerminals::_semicolonQuestion40,
                    ),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Var,
                rule: vec![::rusty_lr::Token::Term(0usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Var,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::PrefixExp),
                    ::rusty_lr::Token::Term(29usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(30usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Var,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::PrefixExp),
                    ::rusty_lr::Token::Term(35usize),
                    ::rusty_lr::Token::Term(0usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::PrefixExp,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::FunctionCall,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FunctionCall,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::PrefixExp),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Args),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FunctionCall,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::PrefixExp),
                    ::rusty_lr::Token::Term(33usize),
                    ::rusty_lr::Token::Term(0usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Args),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Args,
                rule: vec![
                    ::rusty_lr::Token::Term(25usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ExpList0),
                    ::rusty_lr::Token::Term(26usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Args,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::TableConstructor,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Args,
                rule: vec![::rusty_lr::Token::Term(1usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::VarList,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::VarList),
                    ::rusty_lr::Token::Term(34usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Var),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::VarList,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Var,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ExpList1,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ExpList1),
                    ::rusty_lr::Token::Term(34usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ExpList1,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Exp,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ExpList0,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::ExpList1,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ExpList0,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::NameList,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::NameList),
                    ::rusty_lr::Token::Term(34usize),
                    ::rusty_lr::Token::Term(0usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::NameList,
                rule: vec![::rusty_lr::Token::Term(0usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::AttName,
                rule: vec![
                    ::rusty_lr::Token::Term(0usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Attrib),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::AttNameList,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::AttNameList),
                    ::rusty_lr::Token::Term(34usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::AttName),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::AttNameList,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::AttName,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Attrib,
                rule: vec![
                    ::rusty_lr::Token::Term(22usize),
                    ::rusty_lr::Token::Term(0usize),
                    ::rusty_lr::Token::Term(23usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Attrib,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::Term(2usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::Term(3usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::Term(1usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::Term(4usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::Term(37usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::FunctionDef,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::TableConstructor,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::Term(50usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::Term(11usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::Term(6usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::Term(5usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::Term(13usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(7usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(8usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(17usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(9usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(5usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(6usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(36usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(15usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(16usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(12usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(13usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(14usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(22usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(20usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(23usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(21usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(19usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(18usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(38usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(51usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(10usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::TableConstructor,
                rule: vec![
                    ::rusty_lr::Token::Term(27usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FieldList),
                    ::rusty_lr::Token::Term(28usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FieldList1,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FieldList1),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FieldSep),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Field),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FieldList1,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Field,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FieldList,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FieldList1),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::_FieldSepQuestion41),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FieldList,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Field,
                rule: vec![
                    ::rusty_lr::Token::Term(29usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(30usize),
                    ::rusty_lr::Token::Term(24usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Field,
                rule: vec![
                    ::rusty_lr::Token::Term(0usize),
                    ::rusty_lr::Token::Term(24usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Field,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Exp,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FunctionDef,
                rule: vec![
                    ::rusty_lr::Token::Term(45usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FuncBody),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FuncBody,
                rule: vec![
                    ::rusty_lr::Token::Term(25usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::_ParListQuestion42),
                    ::rusty_lr::Token::Term(26usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                    ::rusty_lr::Token::Term(43usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FuncName1,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FuncName1),
                    ::rusty_lr::Token::Term(35usize),
                    ::rusty_lr::Token::Term(0usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FuncName1,
                rule: vec![::rusty_lr::Token::Term(0usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FuncName,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::FuncName1),
                    ::rusty_lr::Token::Term(33usize),
                    ::rusty_lr::Token::Term(0usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FuncName,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::FuncName1,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ParList,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::NameList),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::__Group43Question44),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::ParList,
                rule: vec![::rusty_lr::Token::Term(37usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_StatementPlus29,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Statement,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_StatementPlus29,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::_StatementPlus29),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Statement),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_StatementStar30,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ReturnStatementQuestion31,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::ReturnStatement,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ReturnStatementQuestion31,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ElseIfPlus32,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::ElseIf,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ElseIfPlus32,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::_ElseIfPlus32),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ElseIf),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ElseIfStar33,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group34Question35,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::_Group34,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group34Question35,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group36Question37,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::_Group36,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group36Question37,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group38Question39,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::_Group38,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group38Question39,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_semicolonQuestion40,
                rule: vec![::rusty_lr::Token::Term(32usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_semicolonQuestion40,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ParListQuestion42,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::ParList,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ParListQuestion42,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group43Question44,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::_Group43,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::__Group43Question44,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Chunk,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Block,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::PrefixExp,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::Var,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Exp,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::PrefixExp,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_StatementStar30,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::_StatementPlus29,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_ElseIfStar33,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::_ElseIfPlus32,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_Group34,
                rule: vec![
                    ::rusty_lr::Token::Term(41usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Block),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_Group36,
                rule: vec![
                    ::rusty_lr::Token::Term(34usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_Group38,
                rule: vec![
                    ::rusty_lr::Token::Term(24usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ExpList1),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_Group43,
                rule: vec![
                    ::rusty_lr::Token::Term(34usize),
                    ::rusty_lr::Token::Term(37usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::PrefixExp,
                rule: vec![
                    ::rusty_lr::Token::Term(25usize),
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::Exp),
                    ::rusty_lr::Token::Term(26usize),
                ],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FieldSep,
                rule: vec![::rusty_lr::Token::Term(34usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::FieldSep,
                rule: vec![::rusty_lr::Token::Term(32usize)],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_FieldSepQuestion41,
                rule: vec![::rusty_lr::Token::NonTerm(
                    ChunkOrExpressionsNonTerminals::FieldSep,
                )],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::_FieldSepQuestion41,
                rule: vec![],
            },
            ::rusty_lr::rule::ProductionRule {
                name: ChunkOrExpressionsNonTerminals::Augmented,
                rule: vec![
                    ::rusty_lr::Token::NonTerm(ChunkOrExpressionsNonTerminals::ChunkOrExpressions),
                    ::rusty_lr::Token::Term(57usize),
                ],
            },
        ];
        let terminal_class_names = vec![
            "ident",
            "string_literal",
            "numeric_literal",
            "nil",
            "bool_",
            "plus",
            "minus",
            "asterisk",
            "slash",
            "percent",
            "caret",
            "hash",
            "ampersand",
            "tilde",
            "pipe",
            "lessless",
            "greatergreater",
            "slashslash",
            "equalequal",
            "tildeequal",
            "lessequal",
            "greaterequal",
            "less",
            "greater",
            "equal",
            "lparen",
            "rparen",
            "lbrace",
            "rbrace",
            "lbracket",
            "rbracket",
            "coloncolon",
            "semicolon",
            "colon",
            "comma",
            "dot",
            "dotdot",
            "dotdotdot",
            "and_",
            "break_",
            "do_",
            "else_",
            "elseif_",
            "end_",
            "for_",
            "function_",
            "goto_",
            "if_",
            "in_",
            "local_",
            "not_",
            "or_",
            "repeat_",
            "return_",
            "then_",
            "until_",
            "while_",
            "eof",
            "<Others>",
        ];
        let rules = rules
            .into_iter()
            .map(move |rule| rule.map(|term| terminal_class_names[term], |nonterm| nonterm))
            .collect();
        let states = vec![
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (37usize, 14usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 220usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (50usize, 28usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::ChunkOrExpressions, 221usize),
                    (ChunkOrExpressionsNonTerminals::Chunk, 223usize),
                    (ChunkOrExpressionsNonTerminals::Block, 224usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::ExpList1, 225usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 135usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (53usize, std::collections::BTreeSet::from([93usize])),
                    (57usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 0usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 1usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 111usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 125usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([20usize])),
                    (1usize, std::collections::BTreeSet::from([20usize])),
                    (5usize, std::collections::BTreeSet::from([20usize])),
                    (6usize, std::collections::BTreeSet::from([20usize])),
                    (7usize, std::collections::BTreeSet::from([20usize])),
                    (8usize, std::collections::BTreeSet::from([20usize])),
                    (9usize, std::collections::BTreeSet::from([20usize])),
                    (10usize, std::collections::BTreeSet::from([20usize])),
                    (12usize, std::collections::BTreeSet::from([20usize])),
                    (13usize, std::collections::BTreeSet::from([20usize])),
                    (14usize, std::collections::BTreeSet::from([20usize])),
                    (15usize, std::collections::BTreeSet::from([20usize])),
                    (16usize, std::collections::BTreeSet::from([20usize])),
                    (17usize, std::collections::BTreeSet::from([20usize])),
                    (18usize, std::collections::BTreeSet::from([20usize])),
                    (19usize, std::collections::BTreeSet::from([20usize])),
                    (20usize, std::collections::BTreeSet::from([20usize])),
                    (21usize, std::collections::BTreeSet::from([20usize])),
                    (22usize, std::collections::BTreeSet::from([20usize])),
                    (23usize, std::collections::BTreeSet::from([20usize])),
                    (24usize, std::collections::BTreeSet::from([20usize])),
                    (25usize, std::collections::BTreeSet::from([20usize])),
                    (26usize, std::collections::BTreeSet::from([20usize])),
                    (27usize, std::collections::BTreeSet::from([20usize])),
                    (28usize, std::collections::BTreeSet::from([20usize])),
                    (29usize, std::collections::BTreeSet::from([20usize])),
                    (30usize, std::collections::BTreeSet::from([20usize])),
                    (31usize, std::collections::BTreeSet::from([20usize])),
                    (32usize, std::collections::BTreeSet::from([20usize])),
                    (33usize, std::collections::BTreeSet::from([20usize])),
                    (34usize, std::collections::BTreeSet::from([20usize])),
                    (35usize, std::collections::BTreeSet::from([20usize])),
                    (36usize, std::collections::BTreeSet::from([20usize])),
                    (38usize, std::collections::BTreeSet::from([20usize])),
                    (39usize, std::collections::BTreeSet::from([20usize])),
                    (40usize, std::collections::BTreeSet::from([20usize])),
                    (41usize, std::collections::BTreeSet::from([20usize])),
                    (42usize, std::collections::BTreeSet::from([20usize])),
                    (43usize, std::collections::BTreeSet::from([20usize])),
                    (44usize, std::collections::BTreeSet::from([20usize])),
                    (45usize, std::collections::BTreeSet::from([20usize])),
                    (46usize, std::collections::BTreeSet::from([20usize])),
                    (47usize, std::collections::BTreeSet::from([20usize])),
                    (49usize, std::collections::BTreeSet::from([20usize])),
                    (51usize, std::collections::BTreeSet::from([20usize])),
                    (52usize, std::collections::BTreeSet::from([20usize])),
                    (53usize, std::collections::BTreeSet::from([20usize])),
                    (54usize, std::collections::BTreeSet::from([20usize])),
                    (55usize, std::collections::BTreeSet::from([20usize])),
                    (56usize, std::collections::BTreeSet::from([20usize])),
                    (57usize, std::collections::BTreeSet::from([20usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 20usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([44usize])),
                    (5usize, std::collections::BTreeSet::from([44usize])),
                    (6usize, std::collections::BTreeSet::from([44usize])),
                    (7usize, std::collections::BTreeSet::from([44usize])),
                    (8usize, std::collections::BTreeSet::from([44usize])),
                    (9usize, std::collections::BTreeSet::from([44usize])),
                    (10usize, std::collections::BTreeSet::from([44usize])),
                    (12usize, std::collections::BTreeSet::from([44usize])),
                    (13usize, std::collections::BTreeSet::from([44usize])),
                    (14usize, std::collections::BTreeSet::from([44usize])),
                    (15usize, std::collections::BTreeSet::from([44usize])),
                    (16usize, std::collections::BTreeSet::from([44usize])),
                    (17usize, std::collections::BTreeSet::from([44usize])),
                    (18usize, std::collections::BTreeSet::from([44usize])),
                    (19usize, std::collections::BTreeSet::from([44usize])),
                    (20usize, std::collections::BTreeSet::from([44usize])),
                    (21usize, std::collections::BTreeSet::from([44usize])),
                    (22usize, std::collections::BTreeSet::from([44usize])),
                    (23usize, std::collections::BTreeSet::from([44usize])),
                    (25usize, std::collections::BTreeSet::from([44usize])),
                    (26usize, std::collections::BTreeSet::from([44usize])),
                    (28usize, std::collections::BTreeSet::from([44usize])),
                    (30usize, std::collections::BTreeSet::from([44usize])),
                    (31usize, std::collections::BTreeSet::from([44usize])),
                    (32usize, std::collections::BTreeSet::from([44usize])),
                    (34usize, std::collections::BTreeSet::from([44usize])),
                    (36usize, std::collections::BTreeSet::from([44usize])),
                    (38usize, std::collections::BTreeSet::from([44usize])),
                    (39usize, std::collections::BTreeSet::from([44usize])),
                    (40usize, std::collections::BTreeSet::from([44usize])),
                    (41usize, std::collections::BTreeSet::from([44usize])),
                    (42usize, std::collections::BTreeSet::from([44usize])),
                    (43usize, std::collections::BTreeSet::from([44usize])),
                    (44usize, std::collections::BTreeSet::from([44usize])),
                    (45usize, std::collections::BTreeSet::from([44usize])),
                    (46usize, std::collections::BTreeSet::from([44usize])),
                    (47usize, std::collections::BTreeSet::from([44usize])),
                    (49usize, std::collections::BTreeSet::from([44usize])),
                    (51usize, std::collections::BTreeSet::from([44usize])),
                    (52usize, std::collections::BTreeSet::from([44usize])),
                    (53usize, std::collections::BTreeSet::from([44usize])),
                    (54usize, std::collections::BTreeSet::from([44usize])),
                    (55usize, std::collections::BTreeSet::from([44usize])),
                    (56usize, std::collections::BTreeSet::from([44usize])),
                    (57usize, std::collections::BTreeSet::from([44usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 44usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([42usize])),
                    (5usize, std::collections::BTreeSet::from([42usize])),
                    (6usize, std::collections::BTreeSet::from([42usize])),
                    (7usize, std::collections::BTreeSet::from([42usize])),
                    (8usize, std::collections::BTreeSet::from([42usize])),
                    (9usize, std::collections::BTreeSet::from([42usize])),
                    (10usize, std::collections::BTreeSet::from([42usize])),
                    (12usize, std::collections::BTreeSet::from([42usize])),
                    (13usize, std::collections::BTreeSet::from([42usize])),
                    (14usize, std::collections::BTreeSet::from([42usize])),
                    (15usize, std::collections::BTreeSet::from([42usize])),
                    (16usize, std::collections::BTreeSet::from([42usize])),
                    (17usize, std::collections::BTreeSet::from([42usize])),
                    (18usize, std::collections::BTreeSet::from([42usize])),
                    (19usize, std::collections::BTreeSet::from([42usize])),
                    (20usize, std::collections::BTreeSet::from([42usize])),
                    (21usize, std::collections::BTreeSet::from([42usize])),
                    (22usize, std::collections::BTreeSet::from([42usize])),
                    (23usize, std::collections::BTreeSet::from([42usize])),
                    (25usize, std::collections::BTreeSet::from([42usize])),
                    (26usize, std::collections::BTreeSet::from([42usize])),
                    (28usize, std::collections::BTreeSet::from([42usize])),
                    (30usize, std::collections::BTreeSet::from([42usize])),
                    (31usize, std::collections::BTreeSet::from([42usize])),
                    (32usize, std::collections::BTreeSet::from([42usize])),
                    (34usize, std::collections::BTreeSet::from([42usize])),
                    (36usize, std::collections::BTreeSet::from([42usize])),
                    (38usize, std::collections::BTreeSet::from([42usize])),
                    (39usize, std::collections::BTreeSet::from([42usize])),
                    (40usize, std::collections::BTreeSet::from([42usize])),
                    (41usize, std::collections::BTreeSet::from([42usize])),
                    (42usize, std::collections::BTreeSet::from([42usize])),
                    (43usize, std::collections::BTreeSet::from([42usize])),
                    (44usize, std::collections::BTreeSet::from([42usize])),
                    (45usize, std::collections::BTreeSet::from([42usize])),
                    (46usize, std::collections::BTreeSet::from([42usize])),
                    (47usize, std::collections::BTreeSet::from([42usize])),
                    (49usize, std::collections::BTreeSet::from([42usize])),
                    (51usize, std::collections::BTreeSet::from([42usize])),
                    (52usize, std::collections::BTreeSet::from([42usize])),
                    (53usize, std::collections::BTreeSet::from([42usize])),
                    (54usize, std::collections::BTreeSet::from([42usize])),
                    (55usize, std::collections::BTreeSet::from([42usize])),
                    (56usize, std::collections::BTreeSet::from([42usize])),
                    (57usize, std::collections::BTreeSet::from([42usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 42usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([43usize])),
                    (5usize, std::collections::BTreeSet::from([43usize])),
                    (6usize, std::collections::BTreeSet::from([43usize])),
                    (7usize, std::collections::BTreeSet::from([43usize])),
                    (8usize, std::collections::BTreeSet::from([43usize])),
                    (9usize, std::collections::BTreeSet::from([43usize])),
                    (10usize, std::collections::BTreeSet::from([43usize])),
                    (12usize, std::collections::BTreeSet::from([43usize])),
                    (13usize, std::collections::BTreeSet::from([43usize])),
                    (14usize, std::collections::BTreeSet::from([43usize])),
                    (15usize, std::collections::BTreeSet::from([43usize])),
                    (16usize, std::collections::BTreeSet::from([43usize])),
                    (17usize, std::collections::BTreeSet::from([43usize])),
                    (18usize, std::collections::BTreeSet::from([43usize])),
                    (19usize, std::collections::BTreeSet::from([43usize])),
                    (20usize, std::collections::BTreeSet::from([43usize])),
                    (21usize, std::collections::BTreeSet::from([43usize])),
                    (22usize, std::collections::BTreeSet::from([43usize])),
                    (23usize, std::collections::BTreeSet::from([43usize])),
                    (25usize, std::collections::BTreeSet::from([43usize])),
                    (26usize, std::collections::BTreeSet::from([43usize])),
                    (28usize, std::collections::BTreeSet::from([43usize])),
                    (30usize, std::collections::BTreeSet::from([43usize])),
                    (31usize, std::collections::BTreeSet::from([43usize])),
                    (32usize, std::collections::BTreeSet::from([43usize])),
                    (34usize, std::collections::BTreeSet::from([43usize])),
                    (36usize, std::collections::BTreeSet::from([43usize])),
                    (38usize, std::collections::BTreeSet::from([43usize])),
                    (39usize, std::collections::BTreeSet::from([43usize])),
                    (40usize, std::collections::BTreeSet::from([43usize])),
                    (41usize, std::collections::BTreeSet::from([43usize])),
                    (42usize, std::collections::BTreeSet::from([43usize])),
                    (43usize, std::collections::BTreeSet::from([43usize])),
                    (44usize, std::collections::BTreeSet::from([43usize])),
                    (45usize, std::collections::BTreeSet::from([43usize])),
                    (46usize, std::collections::BTreeSet::from([43usize])),
                    (47usize, std::collections::BTreeSet::from([43usize])),
                    (49usize, std::collections::BTreeSet::from([43usize])),
                    (51usize, std::collections::BTreeSet::from([43usize])),
                    (52usize, std::collections::BTreeSet::from([43usize])),
                    (53usize, std::collections::BTreeSet::from([43usize])),
                    (54usize, std::collections::BTreeSet::from([43usize])),
                    (55usize, std::collections::BTreeSet::from([43usize])),
                    (56usize, std::collections::BTreeSet::from([43usize])),
                    (57usize, std::collections::BTreeSet::from([43usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 43usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([45usize])),
                    (5usize, std::collections::BTreeSet::from([45usize])),
                    (6usize, std::collections::BTreeSet::from([45usize])),
                    (7usize, std::collections::BTreeSet::from([45usize])),
                    (8usize, std::collections::BTreeSet::from([45usize])),
                    (9usize, std::collections::BTreeSet::from([45usize])),
                    (10usize, std::collections::BTreeSet::from([45usize])),
                    (12usize, std::collections::BTreeSet::from([45usize])),
                    (13usize, std::collections::BTreeSet::from([45usize])),
                    (14usize, std::collections::BTreeSet::from([45usize])),
                    (15usize, std::collections::BTreeSet::from([45usize])),
                    (16usize, std::collections::BTreeSet::from([45usize])),
                    (17usize, std::collections::BTreeSet::from([45usize])),
                    (18usize, std::collections::BTreeSet::from([45usize])),
                    (19usize, std::collections::BTreeSet::from([45usize])),
                    (20usize, std::collections::BTreeSet::from([45usize])),
                    (21usize, std::collections::BTreeSet::from([45usize])),
                    (22usize, std::collections::BTreeSet::from([45usize])),
                    (23usize, std::collections::BTreeSet::from([45usize])),
                    (25usize, std::collections::BTreeSet::from([45usize])),
                    (26usize, std::collections::BTreeSet::from([45usize])),
                    (28usize, std::collections::BTreeSet::from([45usize])),
                    (30usize, std::collections::BTreeSet::from([45usize])),
                    (31usize, std::collections::BTreeSet::from([45usize])),
                    (32usize, std::collections::BTreeSet::from([45usize])),
                    (34usize, std::collections::BTreeSet::from([45usize])),
                    (36usize, std::collections::BTreeSet::from([45usize])),
                    (38usize, std::collections::BTreeSet::from([45usize])),
                    (39usize, std::collections::BTreeSet::from([45usize])),
                    (40usize, std::collections::BTreeSet::from([45usize])),
                    (41usize, std::collections::BTreeSet::from([45usize])),
                    (42usize, std::collections::BTreeSet::from([45usize])),
                    (43usize, std::collections::BTreeSet::from([45usize])),
                    (44usize, std::collections::BTreeSet::from([45usize])),
                    (45usize, std::collections::BTreeSet::from([45usize])),
                    (46usize, std::collections::BTreeSet::from([45usize])),
                    (47usize, std::collections::BTreeSet::from([45usize])),
                    (49usize, std::collections::BTreeSet::from([45usize])),
                    (51usize, std::collections::BTreeSet::from([45usize])),
                    (52usize, std::collections::BTreeSet::from([45usize])),
                    (53usize, std::collections::BTreeSet::from([45usize])),
                    (54usize, std::collections::BTreeSet::from([45usize])),
                    (55usize, std::collections::BTreeSet::from([45usize])),
                    (56usize, std::collections::BTreeSet::from([45usize])),
                    (57usize, std::collections::BTreeSet::from([45usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 45usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 161usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 160usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 159usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 158usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 34usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 12usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (29usize, 80usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 101usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FieldList1, 102usize),
                    (ChunkOrExpressionsNonTerminals::FieldList, 108usize),
                    (ChunkOrExpressionsNonTerminals::Field, 110usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    28usize,
                    std::collections::BTreeSet::from([79usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 76usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 77usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 78usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 79usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 80usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 81usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 82usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(24usize, 13usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (1usize, std::collections::BTreeSet::from([20usize])),
                    (5usize, std::collections::BTreeSet::from([20usize])),
                    (6usize, std::collections::BTreeSet::from([20usize])),
                    (7usize, std::collections::BTreeSet::from([20usize])),
                    (8usize, std::collections::BTreeSet::from([20usize])),
                    (9usize, std::collections::BTreeSet::from([20usize])),
                    (10usize, std::collections::BTreeSet::from([20usize])),
                    (12usize, std::collections::BTreeSet::from([20usize])),
                    (13usize, std::collections::BTreeSet::from([20usize])),
                    (14usize, std::collections::BTreeSet::from([20usize])),
                    (15usize, std::collections::BTreeSet::from([20usize])),
                    (16usize, std::collections::BTreeSet::from([20usize])),
                    (17usize, std::collections::BTreeSet::from([20usize])),
                    (18usize, std::collections::BTreeSet::from([20usize])),
                    (19usize, std::collections::BTreeSet::from([20usize])),
                    (20usize, std::collections::BTreeSet::from([20usize])),
                    (21usize, std::collections::BTreeSet::from([20usize])),
                    (22usize, std::collections::BTreeSet::from([20usize])),
                    (23usize, std::collections::BTreeSet::from([20usize])),
                    (25usize, std::collections::BTreeSet::from([20usize])),
                    (27usize, std::collections::BTreeSet::from([20usize])),
                    (28usize, std::collections::BTreeSet::from([20usize])),
                    (29usize, std::collections::BTreeSet::from([20usize])),
                    (32usize, std::collections::BTreeSet::from([20usize])),
                    (33usize, std::collections::BTreeSet::from([20usize])),
                    (34usize, std::collections::BTreeSet::from([20usize])),
                    (35usize, std::collections::BTreeSet::from([20usize])),
                    (36usize, std::collections::BTreeSet::from([20usize])),
                    (38usize, std::collections::BTreeSet::from([20usize])),
                    (51usize, std::collections::BTreeSet::from([20usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 81usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 219usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 81usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([46usize])),
                    (5usize, std::collections::BTreeSet::from([46usize])),
                    (6usize, std::collections::BTreeSet::from([46usize])),
                    (7usize, std::collections::BTreeSet::from([46usize])),
                    (8usize, std::collections::BTreeSet::from([46usize])),
                    (9usize, std::collections::BTreeSet::from([46usize])),
                    (10usize, std::collections::BTreeSet::from([46usize])),
                    (12usize, std::collections::BTreeSet::from([46usize])),
                    (13usize, std::collections::BTreeSet::from([46usize])),
                    (14usize, std::collections::BTreeSet::from([46usize])),
                    (15usize, std::collections::BTreeSet::from([46usize])),
                    (16usize, std::collections::BTreeSet::from([46usize])),
                    (17usize, std::collections::BTreeSet::from([46usize])),
                    (18usize, std::collections::BTreeSet::from([46usize])),
                    (19usize, std::collections::BTreeSet::from([46usize])),
                    (20usize, std::collections::BTreeSet::from([46usize])),
                    (21usize, std::collections::BTreeSet::from([46usize])),
                    (22usize, std::collections::BTreeSet::from([46usize])),
                    (23usize, std::collections::BTreeSet::from([46usize])),
                    (25usize, std::collections::BTreeSet::from([46usize])),
                    (26usize, std::collections::BTreeSet::from([46usize])),
                    (28usize, std::collections::BTreeSet::from([46usize])),
                    (30usize, std::collections::BTreeSet::from([46usize])),
                    (31usize, std::collections::BTreeSet::from([46usize])),
                    (32usize, std::collections::BTreeSet::from([46usize])),
                    (34usize, std::collections::BTreeSet::from([46usize])),
                    (36usize, std::collections::BTreeSet::from([46usize])),
                    (38usize, std::collections::BTreeSet::from([46usize])),
                    (39usize, std::collections::BTreeSet::from([46usize])),
                    (40usize, std::collections::BTreeSet::from([46usize])),
                    (41usize, std::collections::BTreeSet::from([46usize])),
                    (42usize, std::collections::BTreeSet::from([46usize])),
                    (43usize, std::collections::BTreeSet::from([46usize])),
                    (44usize, std::collections::BTreeSet::from([46usize])),
                    (45usize, std::collections::BTreeSet::from([46usize])),
                    (46usize, std::collections::BTreeSet::from([46usize])),
                    (47usize, std::collections::BTreeSet::from([46usize])),
                    (49usize, std::collections::BTreeSet::from([46usize])),
                    (51usize, std::collections::BTreeSet::from([46usize])),
                    (52usize, std::collections::BTreeSet::from([46usize])),
                    (53usize, std::collections::BTreeSet::from([46usize])),
                    (54usize, std::collections::BTreeSet::from([46usize])),
                    (55usize, std::collections::BTreeSet::from([46usize])),
                    (56usize, std::collections::BTreeSet::from([46usize])),
                    (57usize, std::collections::BTreeSet::from([46usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 46usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(25usize, 16usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::FuncBody,
                    157usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 17usize),
                    (37usize, 18usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::NameList, 19usize),
                    (ChunkOrExpressionsNonTerminals::ParList, 25usize),
                    (ChunkOrExpressionsNonTerminals::_ParListQuestion42, 26usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([108usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 90usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 107usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 108usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (26usize, std::collections::BTreeSet::from([36usize])),
                    (34usize, std::collections::BTreeSet::from([36usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 36usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([90usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 90usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(34usize, 20usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::_Group43, 23usize),
                    (ChunkOrExpressionsNonTerminals::__Group43Question44, 24usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([110usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 89usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 109usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 110usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 21usize),
                    (37usize, 22usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 119usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (26usize, std::collections::BTreeSet::from([35usize])),
                    (34usize, std::collections::BTreeSet::from([35usize])),
                    (48usize, std::collections::BTreeSet::from([35usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 35usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([119usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 119usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([109usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 109usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([89usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 89usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([107usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 107usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(26usize, 27usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 84usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 125usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 149usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([112usize])),
                    (1usize, std::collections::BTreeSet::from([112usize])),
                    (5usize, std::collections::BTreeSet::from([112usize])),
                    (6usize, std::collections::BTreeSet::from([112usize])),
                    (7usize, std::collections::BTreeSet::from([112usize])),
                    (8usize, std::collections::BTreeSet::from([112usize])),
                    (9usize, std::collections::BTreeSet::from([112usize])),
                    (10usize, std::collections::BTreeSet::from([112usize])),
                    (12usize, std::collections::BTreeSet::from([112usize])),
                    (13usize, std::collections::BTreeSet::from([112usize])),
                    (14usize, std::collections::BTreeSet::from([112usize])),
                    (15usize, std::collections::BTreeSet::from([112usize])),
                    (16usize, std::collections::BTreeSet::from([112usize])),
                    (17usize, std::collections::BTreeSet::from([112usize])),
                    (18usize, std::collections::BTreeSet::from([112usize])),
                    (19usize, std::collections::BTreeSet::from([112usize])),
                    (20usize, std::collections::BTreeSet::from([112usize])),
                    (21usize, std::collections::BTreeSet::from([112usize])),
                    (22usize, std::collections::BTreeSet::from([112usize])),
                    (23usize, std::collections::BTreeSet::from([112usize])),
                    (25usize, std::collections::BTreeSet::from([112usize])),
                    (26usize, std::collections::BTreeSet::from([112usize])),
                    (27usize, std::collections::BTreeSet::from([112usize])),
                    (28usize, std::collections::BTreeSet::from([112usize])),
                    (29usize, std::collections::BTreeSet::from([112usize])),
                    (30usize, std::collections::BTreeSet::from([112usize])),
                    (31usize, std::collections::BTreeSet::from([112usize])),
                    (32usize, std::collections::BTreeSet::from([112usize])),
                    (33usize, std::collections::BTreeSet::from([112usize])),
                    (34usize, std::collections::BTreeSet::from([112usize])),
                    (35usize, std::collections::BTreeSet::from([112usize])),
                    (36usize, std::collections::BTreeSet::from([112usize])),
                    (38usize, std::collections::BTreeSet::from([112usize])),
                    (39usize, std::collections::BTreeSet::from([112usize])),
                    (40usize, std::collections::BTreeSet::from([112usize])),
                    (41usize, std::collections::BTreeSet::from([112usize])),
                    (42usize, std::collections::BTreeSet::from([112usize])),
                    (43usize, std::collections::BTreeSet::from([112usize])),
                    (44usize, std::collections::BTreeSet::from([112usize])),
                    (45usize, std::collections::BTreeSet::from([112usize])),
                    (46usize, std::collections::BTreeSet::from([112usize])),
                    (47usize, std::collections::BTreeSet::from([112usize])),
                    (49usize, std::collections::BTreeSet::from([112usize])),
                    (51usize, std::collections::BTreeSet::from([112usize])),
                    (52usize, std::collections::BTreeSet::from([112usize])),
                    (53usize, std::collections::BTreeSet::from([112usize])),
                    (54usize, std::collections::BTreeSet::from([112usize])),
                    (55usize, std::collections::BTreeSet::from([112usize])),
                    (56usize, std::collections::BTreeSet::from([112usize])),
                    (57usize, std::collections::BTreeSet::from([112usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 112usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (1usize, 31usize),
                    (25usize, 32usize),
                    (27usize, 11usize),
                    (29usize, 136usize),
                    (33usize, 142usize),
                    (35usize, 146usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Args, 148usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 145usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([113usize])),
                    (5usize, std::collections::BTreeSet::from([113usize])),
                    (6usize, std::collections::BTreeSet::from([113usize])),
                    (7usize, std::collections::BTreeSet::from([113usize])),
                    (8usize, std::collections::BTreeSet::from([113usize])),
                    (9usize, std::collections::BTreeSet::from([113usize])),
                    (10usize, std::collections::BTreeSet::from([113usize])),
                    (12usize, std::collections::BTreeSet::from([113usize])),
                    (13usize, std::collections::BTreeSet::from([113usize])),
                    (14usize, std::collections::BTreeSet::from([113usize])),
                    (15usize, std::collections::BTreeSet::from([113usize])),
                    (16usize, std::collections::BTreeSet::from([113usize])),
                    (17usize, std::collections::BTreeSet::from([113usize])),
                    (18usize, std::collections::BTreeSet::from([113usize])),
                    (19usize, std::collections::BTreeSet::from([113usize])),
                    (20usize, std::collections::BTreeSet::from([113usize])),
                    (21usize, std::collections::BTreeSet::from([113usize])),
                    (22usize, std::collections::BTreeSet::from([113usize])),
                    (23usize, std::collections::BTreeSet::from([113usize])),
                    (25usize, std::collections::BTreeSet::from([113usize])),
                    (26usize, std::collections::BTreeSet::from([113usize])),
                    (28usize, std::collections::BTreeSet::from([113usize])),
                    (30usize, std::collections::BTreeSet::from([113usize])),
                    (31usize, std::collections::BTreeSet::from([113usize])),
                    (32usize, std::collections::BTreeSet::from([113usize])),
                    (34usize, std::collections::BTreeSet::from([113usize])),
                    (36usize, std::collections::BTreeSet::from([113usize])),
                    (38usize, std::collections::BTreeSet::from([113usize])),
                    (39usize, std::collections::BTreeSet::from([113usize])),
                    (40usize, std::collections::BTreeSet::from([113usize])),
                    (41usize, std::collections::BTreeSet::from([113usize])),
                    (42usize, std::collections::BTreeSet::from([113usize])),
                    (43usize, std::collections::BTreeSet::from([113usize])),
                    (44usize, std::collections::BTreeSet::from([113usize])),
                    (45usize, std::collections::BTreeSet::from([113usize])),
                    (46usize, std::collections::BTreeSet::from([113usize])),
                    (47usize, std::collections::BTreeSet::from([113usize])),
                    (49usize, std::collections::BTreeSet::from([113usize])),
                    (51usize, std::collections::BTreeSet::from([113usize])),
                    (52usize, std::collections::BTreeSet::from([113usize])),
                    (53usize, std::collections::BTreeSet::from([113usize])),
                    (54usize, std::collections::BTreeSet::from([113usize])),
                    (55usize, std::collections::BTreeSet::from([113usize])),
                    (56usize, std::collections::BTreeSet::from([113usize])),
                    (57usize, std::collections::BTreeSet::from([113usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([28usize])),
                    (1usize, std::collections::BTreeSet::from([28usize])),
                    (5usize, std::collections::BTreeSet::from([28usize])),
                    (6usize, std::collections::BTreeSet::from([28usize])),
                    (7usize, std::collections::BTreeSet::from([28usize])),
                    (8usize, std::collections::BTreeSet::from([28usize])),
                    (9usize, std::collections::BTreeSet::from([28usize])),
                    (10usize, std::collections::BTreeSet::from([28usize])),
                    (12usize, std::collections::BTreeSet::from([28usize])),
                    (13usize, std::collections::BTreeSet::from([28usize])),
                    (14usize, std::collections::BTreeSet::from([28usize])),
                    (15usize, std::collections::BTreeSet::from([28usize])),
                    (16usize, std::collections::BTreeSet::from([28usize])),
                    (17usize, std::collections::BTreeSet::from([28usize])),
                    (18usize, std::collections::BTreeSet::from([28usize])),
                    (19usize, std::collections::BTreeSet::from([28usize])),
                    (20usize, std::collections::BTreeSet::from([28usize])),
                    (21usize, std::collections::BTreeSet::from([28usize])),
                    (22usize, std::collections::BTreeSet::from([28usize])),
                    (23usize, std::collections::BTreeSet::from([28usize])),
                    (25usize, std::collections::BTreeSet::from([28usize])),
                    (26usize, std::collections::BTreeSet::from([28usize])),
                    (27usize, std::collections::BTreeSet::from([28usize])),
                    (28usize, std::collections::BTreeSet::from([28usize])),
                    (29usize, std::collections::BTreeSet::from([28usize])),
                    (30usize, std::collections::BTreeSet::from([28usize])),
                    (31usize, std::collections::BTreeSet::from([28usize])),
                    (32usize, std::collections::BTreeSet::from([28usize])),
                    (33usize, std::collections::BTreeSet::from([28usize])),
                    (34usize, std::collections::BTreeSet::from([28usize])),
                    (35usize, std::collections::BTreeSet::from([28usize])),
                    (36usize, std::collections::BTreeSet::from([28usize])),
                    (38usize, std::collections::BTreeSet::from([28usize])),
                    (39usize, std::collections::BTreeSet::from([28usize])),
                    (40usize, std::collections::BTreeSet::from([28usize])),
                    (41usize, std::collections::BTreeSet::from([28usize])),
                    (42usize, std::collections::BTreeSet::from([28usize])),
                    (43usize, std::collections::BTreeSet::from([28usize])),
                    (44usize, std::collections::BTreeSet::from([28usize])),
                    (45usize, std::collections::BTreeSet::from([28usize])),
                    (46usize, std::collections::BTreeSet::from([28usize])),
                    (47usize, std::collections::BTreeSet::from([28usize])),
                    (49usize, std::collections::BTreeSet::from([28usize])),
                    (51usize, std::collections::BTreeSet::from([28usize])),
                    (52usize, std::collections::BTreeSet::from([28usize])),
                    (53usize, std::collections::BTreeSet::from([28usize])),
                    (54usize, std::collections::BTreeSet::from([28usize])),
                    (55usize, std::collections::BTreeSet::from([28usize])),
                    (56usize, std::collections::BTreeSet::from([28usize])),
                    (57usize, std::collections::BTreeSet::from([28usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 28usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::ExpList1, 130usize),
                    (ChunkOrExpressionsNonTerminals::ExpList0, 133usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 135usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    26usize,
                    std::collections::BTreeSet::from([34usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([23usize])),
                    (1usize, std::collections::BTreeSet::from([23usize])),
                    (5usize, std::collections::BTreeSet::from([23usize])),
                    (6usize, std::collections::BTreeSet::from([23usize])),
                    (7usize, std::collections::BTreeSet::from([23usize])),
                    (8usize, std::collections::BTreeSet::from([23usize])),
                    (9usize, std::collections::BTreeSet::from([23usize])),
                    (10usize, std::collections::BTreeSet::from([23usize])),
                    (12usize, std::collections::BTreeSet::from([23usize])),
                    (13usize, std::collections::BTreeSet::from([23usize])),
                    (14usize, std::collections::BTreeSet::from([23usize])),
                    (15usize, std::collections::BTreeSet::from([23usize])),
                    (16usize, std::collections::BTreeSet::from([23usize])),
                    (17usize, std::collections::BTreeSet::from([23usize])),
                    (18usize, std::collections::BTreeSet::from([23usize])),
                    (19usize, std::collections::BTreeSet::from([23usize])),
                    (20usize, std::collections::BTreeSet::from([23usize])),
                    (21usize, std::collections::BTreeSet::from([23usize])),
                    (22usize, std::collections::BTreeSet::from([23usize])),
                    (23usize, std::collections::BTreeSet::from([23usize])),
                    (25usize, std::collections::BTreeSet::from([23usize])),
                    (26usize, std::collections::BTreeSet::from([23usize])),
                    (27usize, std::collections::BTreeSet::from([23usize])),
                    (28usize, std::collections::BTreeSet::from([23usize])),
                    (29usize, std::collections::BTreeSet::from([23usize])),
                    (30usize, std::collections::BTreeSet::from([23usize])),
                    (31usize, std::collections::BTreeSet::from([23usize])),
                    (32usize, std::collections::BTreeSet::from([23usize])),
                    (33usize, std::collections::BTreeSet::from([23usize])),
                    (34usize, std::collections::BTreeSet::from([23usize])),
                    (35usize, std::collections::BTreeSet::from([23usize])),
                    (36usize, std::collections::BTreeSet::from([23usize])),
                    (38usize, std::collections::BTreeSet::from([23usize])),
                    (39usize, std::collections::BTreeSet::from([23usize])),
                    (40usize, std::collections::BTreeSet::from([23usize])),
                    (41usize, std::collections::BTreeSet::from([23usize])),
                    (42usize, std::collections::BTreeSet::from([23usize])),
                    (43usize, std::collections::BTreeSet::from([23usize])),
                    (44usize, std::collections::BTreeSet::from([23usize])),
                    (45usize, std::collections::BTreeSet::from([23usize])),
                    (46usize, std::collections::BTreeSet::from([23usize])),
                    (47usize, std::collections::BTreeSet::from([23usize])),
                    (49usize, std::collections::BTreeSet::from([23usize])),
                    (51usize, std::collections::BTreeSet::from([23usize])),
                    (52usize, std::collections::BTreeSet::from([23usize])),
                    (53usize, std::collections::BTreeSet::from([23usize])),
                    (54usize, std::collections::BTreeSet::from([23usize])),
                    (55usize, std::collections::BTreeSet::from([23usize])),
                    (56usize, std::collections::BTreeSet::from([23usize])),
                    (57usize, std::collections::BTreeSet::from([23usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 23usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (26usize, 75usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 36usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (17usize, 47usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([58usize])),
                    (5usize, std::collections::BTreeSet::from([58usize])),
                    (6usize, std::collections::BTreeSet::from([58usize])),
                    (12usize, std::collections::BTreeSet::from([58usize])),
                    (13usize, std::collections::BTreeSet::from([58usize])),
                    (14usize, std::collections::BTreeSet::from([58usize])),
                    (15usize, std::collections::BTreeSet::from([58usize])),
                    (16usize, std::collections::BTreeSet::from([58usize])),
                    (18usize, std::collections::BTreeSet::from([58usize])),
                    (19usize, std::collections::BTreeSet::from([58usize])),
                    (20usize, std::collections::BTreeSet::from([58usize])),
                    (21usize, std::collections::BTreeSet::from([58usize])),
                    (22usize, std::collections::BTreeSet::from([58usize])),
                    (23usize, std::collections::BTreeSet::from([58usize])),
                    (25usize, std::collections::BTreeSet::from([58usize])),
                    (26usize, std::collections::BTreeSet::from([58usize])),
                    (28usize, std::collections::BTreeSet::from([58usize])),
                    (30usize, std::collections::BTreeSet::from([58usize])),
                    (31usize, std::collections::BTreeSet::from([58usize])),
                    (32usize, std::collections::BTreeSet::from([58usize])),
                    (34usize, std::collections::BTreeSet::from([58usize])),
                    (36usize, std::collections::BTreeSet::from([58usize])),
                    (38usize, std::collections::BTreeSet::from([58usize])),
                    (39usize, std::collections::BTreeSet::from([58usize])),
                    (40usize, std::collections::BTreeSet::from([58usize])),
                    (41usize, std::collections::BTreeSet::from([58usize])),
                    (42usize, std::collections::BTreeSet::from([58usize])),
                    (43usize, std::collections::BTreeSet::from([58usize])),
                    (44usize, std::collections::BTreeSet::from([58usize])),
                    (45usize, std::collections::BTreeSet::from([58usize])),
                    (46usize, std::collections::BTreeSet::from([58usize])),
                    (47usize, std::collections::BTreeSet::from([58usize])),
                    (49usize, std::collections::BTreeSet::from([58usize])),
                    (51usize, std::collections::BTreeSet::from([58usize])),
                    (52usize, std::collections::BTreeSet::from([58usize])),
                    (53usize, std::collections::BTreeSet::from([58usize])),
                    (54usize, std::collections::BTreeSet::from([58usize])),
                    (55usize, std::collections::BTreeSet::from([58usize])),
                    (56usize, std::collections::BTreeSet::from([58usize])),
                    (57usize, std::collections::BTreeSet::from([58usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 38usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(10usize, 39usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([54usize])),
                    (5usize, std::collections::BTreeSet::from([54usize])),
                    (6usize, std::collections::BTreeSet::from([54usize])),
                    (7usize, std::collections::BTreeSet::from([54usize])),
                    (8usize, std::collections::BTreeSet::from([54usize])),
                    (9usize, std::collections::BTreeSet::from([54usize])),
                    (12usize, std::collections::BTreeSet::from([54usize])),
                    (13usize, std::collections::BTreeSet::from([54usize])),
                    (14usize, std::collections::BTreeSet::from([54usize])),
                    (15usize, std::collections::BTreeSet::from([54usize])),
                    (16usize, std::collections::BTreeSet::from([54usize])),
                    (17usize, std::collections::BTreeSet::from([54usize])),
                    (18usize, std::collections::BTreeSet::from([54usize])),
                    (19usize, std::collections::BTreeSet::from([54usize])),
                    (20usize, std::collections::BTreeSet::from([54usize])),
                    (21usize, std::collections::BTreeSet::from([54usize])),
                    (22usize, std::collections::BTreeSet::from([54usize])),
                    (23usize, std::collections::BTreeSet::from([54usize])),
                    (25usize, std::collections::BTreeSet::from([54usize])),
                    (26usize, std::collections::BTreeSet::from([54usize])),
                    (28usize, std::collections::BTreeSet::from([54usize])),
                    (30usize, std::collections::BTreeSet::from([54usize])),
                    (31usize, std::collections::BTreeSet::from([54usize])),
                    (32usize, std::collections::BTreeSet::from([54usize])),
                    (34usize, std::collections::BTreeSet::from([54usize])),
                    (36usize, std::collections::BTreeSet::from([54usize])),
                    (38usize, std::collections::BTreeSet::from([54usize])),
                    (39usize, std::collections::BTreeSet::from([54usize])),
                    (40usize, std::collections::BTreeSet::from([54usize])),
                    (41usize, std::collections::BTreeSet::from([54usize])),
                    (42usize, std::collections::BTreeSet::from([54usize])),
                    (43usize, std::collections::BTreeSet::from([54usize])),
                    (44usize, std::collections::BTreeSet::from([54usize])),
                    (45usize, std::collections::BTreeSet::from([54usize])),
                    (46usize, std::collections::BTreeSet::from([54usize])),
                    (47usize, std::collections::BTreeSet::from([54usize])),
                    (49usize, std::collections::BTreeSet::from([54usize])),
                    (51usize, std::collections::BTreeSet::from([54usize])),
                    (52usize, std::collections::BTreeSet::from([54usize])),
                    (53usize, std::collections::BTreeSet::from([54usize])),
                    (54usize, std::collections::BTreeSet::from([54usize])),
                    (55usize, std::collections::BTreeSet::from([54usize])),
                    (56usize, std::collections::BTreeSet::from([54usize])),
                    (57usize, std::collections::BTreeSet::from([54usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 40usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(10usize, 39usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([74usize])),
                    (5usize, std::collections::BTreeSet::from([74usize])),
                    (6usize, std::collections::BTreeSet::from([74usize])),
                    (7usize, std::collections::BTreeSet::from([74usize])),
                    (8usize, std::collections::BTreeSet::from([74usize])),
                    (9usize, std::collections::BTreeSet::from([74usize])),
                    (12usize, std::collections::BTreeSet::from([74usize])),
                    (13usize, std::collections::BTreeSet::from([74usize])),
                    (14usize, std::collections::BTreeSet::from([74usize])),
                    (15usize, std::collections::BTreeSet::from([74usize])),
                    (16usize, std::collections::BTreeSet::from([74usize])),
                    (17usize, std::collections::BTreeSet::from([74usize])),
                    (18usize, std::collections::BTreeSet::from([74usize])),
                    (19usize, std::collections::BTreeSet::from([74usize])),
                    (20usize, std::collections::BTreeSet::from([74usize])),
                    (21usize, std::collections::BTreeSet::from([74usize])),
                    (22usize, std::collections::BTreeSet::from([74usize])),
                    (23usize, std::collections::BTreeSet::from([74usize])),
                    (25usize, std::collections::BTreeSet::from([74usize])),
                    (26usize, std::collections::BTreeSet::from([74usize])),
                    (28usize, std::collections::BTreeSet::from([74usize])),
                    (30usize, std::collections::BTreeSet::from([74usize])),
                    (31usize, std::collections::BTreeSet::from([74usize])),
                    (32usize, std::collections::BTreeSet::from([74usize])),
                    (34usize, std::collections::BTreeSet::from([74usize])),
                    (36usize, std::collections::BTreeSet::from([74usize])),
                    (38usize, std::collections::BTreeSet::from([74usize])),
                    (39usize, std::collections::BTreeSet::from([74usize])),
                    (40usize, std::collections::BTreeSet::from([74usize])),
                    (41usize, std::collections::BTreeSet::from([74usize])),
                    (42usize, std::collections::BTreeSet::from([74usize])),
                    (43usize, std::collections::BTreeSet::from([74usize])),
                    (44usize, std::collections::BTreeSet::from([74usize])),
                    (45usize, std::collections::BTreeSet::from([74usize])),
                    (46usize, std::collections::BTreeSet::from([74usize])),
                    (47usize, std::collections::BTreeSet::from([74usize])),
                    (49usize, std::collections::BTreeSet::from([74usize])),
                    (51usize, std::collections::BTreeSet::from([74usize])),
                    (52usize, std::collections::BTreeSet::from([74usize])),
                    (53usize, std::collections::BTreeSet::from([74usize])),
                    (54usize, std::collections::BTreeSet::from([74usize])),
                    (55usize, std::collections::BTreeSet::from([74usize])),
                    (56usize, std::collections::BTreeSet::from([74usize])),
                    (57usize, std::collections::BTreeSet::from([74usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([48usize])),
                    (5usize, std::collections::BTreeSet::from([48usize])),
                    (6usize, std::collections::BTreeSet::from([48usize])),
                    (7usize, std::collections::BTreeSet::from([48usize])),
                    (8usize, std::collections::BTreeSet::from([48usize])),
                    (9usize, std::collections::BTreeSet::from([48usize])),
                    (10usize, std::collections::BTreeSet::from([48usize])),
                    (12usize, std::collections::BTreeSet::from([48usize])),
                    (13usize, std::collections::BTreeSet::from([48usize])),
                    (14usize, std::collections::BTreeSet::from([48usize])),
                    (15usize, std::collections::BTreeSet::from([48usize])),
                    (16usize, std::collections::BTreeSet::from([48usize])),
                    (17usize, std::collections::BTreeSet::from([48usize])),
                    (18usize, std::collections::BTreeSet::from([48usize])),
                    (19usize, std::collections::BTreeSet::from([48usize])),
                    (20usize, std::collections::BTreeSet::from([48usize])),
                    (21usize, std::collections::BTreeSet::from([48usize])),
                    (22usize, std::collections::BTreeSet::from([48usize])),
                    (23usize, std::collections::BTreeSet::from([48usize])),
                    (25usize, std::collections::BTreeSet::from([48usize])),
                    (26usize, std::collections::BTreeSet::from([48usize])),
                    (28usize, std::collections::BTreeSet::from([48usize])),
                    (30usize, std::collections::BTreeSet::from([48usize])),
                    (31usize, std::collections::BTreeSet::from([48usize])),
                    (32usize, std::collections::BTreeSet::from([48usize])),
                    (34usize, std::collections::BTreeSet::from([48usize])),
                    (36usize, std::collections::BTreeSet::from([48usize])),
                    (38usize, std::collections::BTreeSet::from([48usize])),
                    (39usize, std::collections::BTreeSet::from([48usize])),
                    (40usize, std::collections::BTreeSet::from([48usize])),
                    (41usize, std::collections::BTreeSet::from([48usize])),
                    (42usize, std::collections::BTreeSet::from([48usize])),
                    (43usize, std::collections::BTreeSet::from([48usize])),
                    (44usize, std::collections::BTreeSet::from([48usize])),
                    (45usize, std::collections::BTreeSet::from([48usize])),
                    (46usize, std::collections::BTreeSet::from([48usize])),
                    (47usize, std::collections::BTreeSet::from([48usize])),
                    (49usize, std::collections::BTreeSet::from([48usize])),
                    (51usize, std::collections::BTreeSet::from([48usize])),
                    (52usize, std::collections::BTreeSet::from([48usize])),
                    (53usize, std::collections::BTreeSet::from([48usize])),
                    (54usize, std::collections::BTreeSet::from([48usize])),
                    (55usize, std::collections::BTreeSet::from([48usize])),
                    (56usize, std::collections::BTreeSet::from([48usize])),
                    (57usize, std::collections::BTreeSet::from([48usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 48usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([47usize])),
                    (5usize, std::collections::BTreeSet::from([47usize])),
                    (6usize, std::collections::BTreeSet::from([47usize])),
                    (7usize, std::collections::BTreeSet::from([47usize])),
                    (8usize, std::collections::BTreeSet::from([47usize])),
                    (9usize, std::collections::BTreeSet::from([47usize])),
                    (10usize, std::collections::BTreeSet::from([47usize])),
                    (12usize, std::collections::BTreeSet::from([47usize])),
                    (13usize, std::collections::BTreeSet::from([47usize])),
                    (14usize, std::collections::BTreeSet::from([47usize])),
                    (15usize, std::collections::BTreeSet::from([47usize])),
                    (16usize, std::collections::BTreeSet::from([47usize])),
                    (17usize, std::collections::BTreeSet::from([47usize])),
                    (18usize, std::collections::BTreeSet::from([47usize])),
                    (19usize, std::collections::BTreeSet::from([47usize])),
                    (20usize, std::collections::BTreeSet::from([47usize])),
                    (21usize, std::collections::BTreeSet::from([47usize])),
                    (22usize, std::collections::BTreeSet::from([47usize])),
                    (23usize, std::collections::BTreeSet::from([47usize])),
                    (25usize, std::collections::BTreeSet::from([47usize])),
                    (26usize, std::collections::BTreeSet::from([47usize])),
                    (28usize, std::collections::BTreeSet::from([47usize])),
                    (30usize, std::collections::BTreeSet::from([47usize])),
                    (31usize, std::collections::BTreeSet::from([47usize])),
                    (32usize, std::collections::BTreeSet::from([47usize])),
                    (34usize, std::collections::BTreeSet::from([47usize])),
                    (36usize, std::collections::BTreeSet::from([47usize])),
                    (38usize, std::collections::BTreeSet::from([47usize])),
                    (39usize, std::collections::BTreeSet::from([47usize])),
                    (40usize, std::collections::BTreeSet::from([47usize])),
                    (41usize, std::collections::BTreeSet::from([47usize])),
                    (42usize, std::collections::BTreeSet::from([47usize])),
                    (43usize, std::collections::BTreeSet::from([47usize])),
                    (44usize, std::collections::BTreeSet::from([47usize])),
                    (45usize, std::collections::BTreeSet::from([47usize])),
                    (46usize, std::collections::BTreeSet::from([47usize])),
                    (47usize, std::collections::BTreeSet::from([47usize])),
                    (49usize, std::collections::BTreeSet::from([47usize])),
                    (51usize, std::collections::BTreeSet::from([47usize])),
                    (52usize, std::collections::BTreeSet::from([47usize])),
                    (53usize, std::collections::BTreeSet::from([47usize])),
                    (54usize, std::collections::BTreeSet::from([47usize])),
                    (55usize, std::collections::BTreeSet::from([47usize])),
                    (56usize, std::collections::BTreeSet::from([47usize])),
                    (57usize, std::collections::BTreeSet::from([47usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 47usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 44usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(10usize, 39usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([55usize])),
                    (5usize, std::collections::BTreeSet::from([55usize])),
                    (6usize, std::collections::BTreeSet::from([55usize])),
                    (7usize, std::collections::BTreeSet::from([55usize])),
                    (8usize, std::collections::BTreeSet::from([55usize])),
                    (9usize, std::collections::BTreeSet::from([55usize])),
                    (12usize, std::collections::BTreeSet::from([55usize])),
                    (13usize, std::collections::BTreeSet::from([55usize])),
                    (14usize, std::collections::BTreeSet::from([55usize])),
                    (15usize, std::collections::BTreeSet::from([55usize])),
                    (16usize, std::collections::BTreeSet::from([55usize])),
                    (17usize, std::collections::BTreeSet::from([55usize])),
                    (18usize, std::collections::BTreeSet::from([55usize])),
                    (19usize, std::collections::BTreeSet::from([55usize])),
                    (20usize, std::collections::BTreeSet::from([55usize])),
                    (21usize, std::collections::BTreeSet::from([55usize])),
                    (22usize, std::collections::BTreeSet::from([55usize])),
                    (23usize, std::collections::BTreeSet::from([55usize])),
                    (25usize, std::collections::BTreeSet::from([55usize])),
                    (26usize, std::collections::BTreeSet::from([55usize])),
                    (28usize, std::collections::BTreeSet::from([55usize])),
                    (30usize, std::collections::BTreeSet::from([55usize])),
                    (31usize, std::collections::BTreeSet::from([55usize])),
                    (32usize, std::collections::BTreeSet::from([55usize])),
                    (34usize, std::collections::BTreeSet::from([55usize])),
                    (36usize, std::collections::BTreeSet::from([55usize])),
                    (38usize, std::collections::BTreeSet::from([55usize])),
                    (39usize, std::collections::BTreeSet::from([55usize])),
                    (40usize, std::collections::BTreeSet::from([55usize])),
                    (41usize, std::collections::BTreeSet::from([55usize])),
                    (42usize, std::collections::BTreeSet::from([55usize])),
                    (43usize, std::collections::BTreeSet::from([55usize])),
                    (44usize, std::collections::BTreeSet::from([55usize])),
                    (45usize, std::collections::BTreeSet::from([55usize])),
                    (46usize, std::collections::BTreeSet::from([55usize])),
                    (47usize, std::collections::BTreeSet::from([55usize])),
                    (49usize, std::collections::BTreeSet::from([55usize])),
                    (51usize, std::collections::BTreeSet::from([55usize])),
                    (52usize, std::collections::BTreeSet::from([55usize])),
                    (53usize, std::collections::BTreeSet::from([55usize])),
                    (54usize, std::collections::BTreeSet::from([55usize])),
                    (55usize, std::collections::BTreeSet::from([55usize])),
                    (56usize, std::collections::BTreeSet::from([55usize])),
                    (57usize, std::collections::BTreeSet::from([55usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 46usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(10usize, 39usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([57usize])),
                    (5usize, std::collections::BTreeSet::from([57usize])),
                    (6usize, std::collections::BTreeSet::from([57usize])),
                    (7usize, std::collections::BTreeSet::from([57usize])),
                    (8usize, std::collections::BTreeSet::from([57usize])),
                    (9usize, std::collections::BTreeSet::from([57usize])),
                    (12usize, std::collections::BTreeSet::from([57usize])),
                    (13usize, std::collections::BTreeSet::from([57usize])),
                    (14usize, std::collections::BTreeSet::from([57usize])),
                    (15usize, std::collections::BTreeSet::from([57usize])),
                    (16usize, std::collections::BTreeSet::from([57usize])),
                    (17usize, std::collections::BTreeSet::from([57usize])),
                    (18usize, std::collections::BTreeSet::from([57usize])),
                    (19usize, std::collections::BTreeSet::from([57usize])),
                    (20usize, std::collections::BTreeSet::from([57usize])),
                    (21usize, std::collections::BTreeSet::from([57usize])),
                    (22usize, std::collections::BTreeSet::from([57usize])),
                    (23usize, std::collections::BTreeSet::from([57usize])),
                    (25usize, std::collections::BTreeSet::from([57usize])),
                    (26usize, std::collections::BTreeSet::from([57usize])),
                    (28usize, std::collections::BTreeSet::from([57usize])),
                    (30usize, std::collections::BTreeSet::from([57usize])),
                    (31usize, std::collections::BTreeSet::from([57usize])),
                    (32usize, std::collections::BTreeSet::from([57usize])),
                    (34usize, std::collections::BTreeSet::from([57usize])),
                    (36usize, std::collections::BTreeSet::from([57usize])),
                    (38usize, std::collections::BTreeSet::from([57usize])),
                    (39usize, std::collections::BTreeSet::from([57usize])),
                    (40usize, std::collections::BTreeSet::from([57usize])),
                    (41usize, std::collections::BTreeSet::from([57usize])),
                    (42usize, std::collections::BTreeSet::from([57usize])),
                    (43usize, std::collections::BTreeSet::from([57usize])),
                    (44usize, std::collections::BTreeSet::from([57usize])),
                    (45usize, std::collections::BTreeSet::from([57usize])),
                    (46usize, std::collections::BTreeSet::from([57usize])),
                    (47usize, std::collections::BTreeSet::from([57usize])),
                    (49usize, std::collections::BTreeSet::from([57usize])),
                    (51usize, std::collections::BTreeSet::from([57usize])),
                    (52usize, std::collections::BTreeSet::from([57usize])),
                    (53usize, std::collections::BTreeSet::from([57usize])),
                    (54usize, std::collections::BTreeSet::from([57usize])),
                    (55usize, std::collections::BTreeSet::from([57usize])),
                    (56usize, std::collections::BTreeSet::from([57usize])),
                    (57usize, std::collections::BTreeSet::from([57usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 48usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(10usize, 39usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([56usize])),
                    (5usize, std::collections::BTreeSet::from([56usize])),
                    (6usize, std::collections::BTreeSet::from([56usize])),
                    (7usize, std::collections::BTreeSet::from([56usize])),
                    (8usize, std::collections::BTreeSet::from([56usize])),
                    (9usize, std::collections::BTreeSet::from([56usize])),
                    (12usize, std::collections::BTreeSet::from([56usize])),
                    (13usize, std::collections::BTreeSet::from([56usize])),
                    (14usize, std::collections::BTreeSet::from([56usize])),
                    (15usize, std::collections::BTreeSet::from([56usize])),
                    (16usize, std::collections::BTreeSet::from([56usize])),
                    (17usize, std::collections::BTreeSet::from([56usize])),
                    (18usize, std::collections::BTreeSet::from([56usize])),
                    (19usize, std::collections::BTreeSet::from([56usize])),
                    (20usize, std::collections::BTreeSet::from([56usize])),
                    (21usize, std::collections::BTreeSet::from([56usize])),
                    (22usize, std::collections::BTreeSet::from([56usize])),
                    (23usize, std::collections::BTreeSet::from([56usize])),
                    (25usize, std::collections::BTreeSet::from([56usize])),
                    (26usize, std::collections::BTreeSet::from([56usize])),
                    (28usize, std::collections::BTreeSet::from([56usize])),
                    (30usize, std::collections::BTreeSet::from([56usize])),
                    (31usize, std::collections::BTreeSet::from([56usize])),
                    (32usize, std::collections::BTreeSet::from([56usize])),
                    (34usize, std::collections::BTreeSet::from([56usize])),
                    (36usize, std::collections::BTreeSet::from([56usize])),
                    (38usize, std::collections::BTreeSet::from([56usize])),
                    (39usize, std::collections::BTreeSet::from([56usize])),
                    (40usize, std::collections::BTreeSet::from([56usize])),
                    (41usize, std::collections::BTreeSet::from([56usize])),
                    (42usize, std::collections::BTreeSet::from([56usize])),
                    (43usize, std::collections::BTreeSet::from([56usize])),
                    (44usize, std::collections::BTreeSet::from([56usize])),
                    (45usize, std::collections::BTreeSet::from([56usize])),
                    (46usize, std::collections::BTreeSet::from([56usize])),
                    (47usize, std::collections::BTreeSet::from([56usize])),
                    (49usize, std::collections::BTreeSet::from([56usize])),
                    (51usize, std::collections::BTreeSet::from([56usize])),
                    (52usize, std::collections::BTreeSet::from([56usize])),
                    (53usize, std::collections::BTreeSet::from([56usize])),
                    (54usize, std::collections::BTreeSet::from([56usize])),
                    (55usize, std::collections::BTreeSet::from([56usize])),
                    (56usize, std::collections::BTreeSet::from([56usize])),
                    (57usize, std::collections::BTreeSet::from([56usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 50usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (17usize, 47usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([59usize])),
                    (5usize, std::collections::BTreeSet::from([59usize])),
                    (6usize, std::collections::BTreeSet::from([59usize])),
                    (12usize, std::collections::BTreeSet::from([59usize])),
                    (13usize, std::collections::BTreeSet::from([59usize])),
                    (14usize, std::collections::BTreeSet::from([59usize])),
                    (15usize, std::collections::BTreeSet::from([59usize])),
                    (16usize, std::collections::BTreeSet::from([59usize])),
                    (18usize, std::collections::BTreeSet::from([59usize])),
                    (19usize, std::collections::BTreeSet::from([59usize])),
                    (20usize, std::collections::BTreeSet::from([59usize])),
                    (21usize, std::collections::BTreeSet::from([59usize])),
                    (22usize, std::collections::BTreeSet::from([59usize])),
                    (23usize, std::collections::BTreeSet::from([59usize])),
                    (25usize, std::collections::BTreeSet::from([59usize])),
                    (26usize, std::collections::BTreeSet::from([59usize])),
                    (28usize, std::collections::BTreeSet::from([59usize])),
                    (30usize, std::collections::BTreeSet::from([59usize])),
                    (31usize, std::collections::BTreeSet::from([59usize])),
                    (32usize, std::collections::BTreeSet::from([59usize])),
                    (34usize, std::collections::BTreeSet::from([59usize])),
                    (36usize, std::collections::BTreeSet::from([59usize])),
                    (38usize, std::collections::BTreeSet::from([59usize])),
                    (39usize, std::collections::BTreeSet::from([59usize])),
                    (40usize, std::collections::BTreeSet::from([59usize])),
                    (41usize, std::collections::BTreeSet::from([59usize])),
                    (42usize, std::collections::BTreeSet::from([59usize])),
                    (43usize, std::collections::BTreeSet::from([59usize])),
                    (44usize, std::collections::BTreeSet::from([59usize])),
                    (45usize, std::collections::BTreeSet::from([59usize])),
                    (46usize, std::collections::BTreeSet::from([59usize])),
                    (47usize, std::collections::BTreeSet::from([59usize])),
                    (49usize, std::collections::BTreeSet::from([59usize])),
                    (51usize, std::collections::BTreeSet::from([59usize])),
                    (52usize, std::collections::BTreeSet::from([59usize])),
                    (53usize, std::collections::BTreeSet::from([59usize])),
                    (54usize, std::collections::BTreeSet::from([59usize])),
                    (55usize, std::collections::BTreeSet::from([59usize])),
                    (56usize, std::collections::BTreeSet::from([59usize])),
                    (57usize, std::collections::BTreeSet::from([59usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 52usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([63usize])),
                    (12usize, std::collections::BTreeSet::from([63usize])),
                    (13usize, std::collections::BTreeSet::from([63usize])),
                    (14usize, std::collections::BTreeSet::from([63usize])),
                    (18usize, std::collections::BTreeSet::from([63usize])),
                    (19usize, std::collections::BTreeSet::from([63usize])),
                    (20usize, std::collections::BTreeSet::from([63usize])),
                    (21usize, std::collections::BTreeSet::from([63usize])),
                    (22usize, std::collections::BTreeSet::from([63usize])),
                    (23usize, std::collections::BTreeSet::from([63usize])),
                    (25usize, std::collections::BTreeSet::from([63usize])),
                    (26usize, std::collections::BTreeSet::from([63usize])),
                    (28usize, std::collections::BTreeSet::from([63usize])),
                    (30usize, std::collections::BTreeSet::from([63usize])),
                    (31usize, std::collections::BTreeSet::from([63usize])),
                    (32usize, std::collections::BTreeSet::from([63usize])),
                    (34usize, std::collections::BTreeSet::from([63usize])),
                    (38usize, std::collections::BTreeSet::from([63usize])),
                    (39usize, std::collections::BTreeSet::from([63usize])),
                    (40usize, std::collections::BTreeSet::from([63usize])),
                    (41usize, std::collections::BTreeSet::from([63usize])),
                    (42usize, std::collections::BTreeSet::from([63usize])),
                    (43usize, std::collections::BTreeSet::from([63usize])),
                    (44usize, std::collections::BTreeSet::from([63usize])),
                    (45usize, std::collections::BTreeSet::from([63usize])),
                    (46usize, std::collections::BTreeSet::from([63usize])),
                    (47usize, std::collections::BTreeSet::from([63usize])),
                    (49usize, std::collections::BTreeSet::from([63usize])),
                    (51usize, std::collections::BTreeSet::from([63usize])),
                    (52usize, std::collections::BTreeSet::from([63usize])),
                    (53usize, std::collections::BTreeSet::from([63usize])),
                    (54usize, std::collections::BTreeSet::from([63usize])),
                    (55usize, std::collections::BTreeSet::from([63usize])),
                    (56usize, std::collections::BTreeSet::from([63usize])),
                    (57usize, std::collections::BTreeSet::from([63usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 54usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([61usize])),
                    (12usize, std::collections::BTreeSet::from([61usize])),
                    (13usize, std::collections::BTreeSet::from([61usize])),
                    (14usize, std::collections::BTreeSet::from([61usize])),
                    (15usize, std::collections::BTreeSet::from([61usize])),
                    (16usize, std::collections::BTreeSet::from([61usize])),
                    (18usize, std::collections::BTreeSet::from([61usize])),
                    (19usize, std::collections::BTreeSet::from([61usize])),
                    (20usize, std::collections::BTreeSet::from([61usize])),
                    (21usize, std::collections::BTreeSet::from([61usize])),
                    (22usize, std::collections::BTreeSet::from([61usize])),
                    (23usize, std::collections::BTreeSet::from([61usize])),
                    (25usize, std::collections::BTreeSet::from([61usize])),
                    (26usize, std::collections::BTreeSet::from([61usize])),
                    (28usize, std::collections::BTreeSet::from([61usize])),
                    (30usize, std::collections::BTreeSet::from([61usize])),
                    (31usize, std::collections::BTreeSet::from([61usize])),
                    (32usize, std::collections::BTreeSet::from([61usize])),
                    (34usize, std::collections::BTreeSet::from([61usize])),
                    (38usize, std::collections::BTreeSet::from([61usize])),
                    (39usize, std::collections::BTreeSet::from([61usize])),
                    (40usize, std::collections::BTreeSet::from([61usize])),
                    (41usize, std::collections::BTreeSet::from([61usize])),
                    (42usize, std::collections::BTreeSet::from([61usize])),
                    (43usize, std::collections::BTreeSet::from([61usize])),
                    (44usize, std::collections::BTreeSet::from([61usize])),
                    (45usize, std::collections::BTreeSet::from([61usize])),
                    (46usize, std::collections::BTreeSet::from([61usize])),
                    (47usize, std::collections::BTreeSet::from([61usize])),
                    (49usize, std::collections::BTreeSet::from([61usize])),
                    (51usize, std::collections::BTreeSet::from([61usize])),
                    (52usize, std::collections::BTreeSet::from([61usize])),
                    (53usize, std::collections::BTreeSet::from([61usize])),
                    (54usize, std::collections::BTreeSet::from([61usize])),
                    (55usize, std::collections::BTreeSet::from([61usize])),
                    (56usize, std::collections::BTreeSet::from([61usize])),
                    (57usize, std::collections::BTreeSet::from([61usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 56usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([60usize])),
                    (12usize, std::collections::BTreeSet::from([60usize])),
                    (13usize, std::collections::BTreeSet::from([60usize])),
                    (14usize, std::collections::BTreeSet::from([60usize])),
                    (15usize, std::collections::BTreeSet::from([60usize])),
                    (16usize, std::collections::BTreeSet::from([60usize])),
                    (18usize, std::collections::BTreeSet::from([60usize])),
                    (19usize, std::collections::BTreeSet::from([60usize])),
                    (20usize, std::collections::BTreeSet::from([60usize])),
                    (21usize, std::collections::BTreeSet::from([60usize])),
                    (22usize, std::collections::BTreeSet::from([60usize])),
                    (23usize, std::collections::BTreeSet::from([60usize])),
                    (25usize, std::collections::BTreeSet::from([60usize])),
                    (26usize, std::collections::BTreeSet::from([60usize])),
                    (28usize, std::collections::BTreeSet::from([60usize])),
                    (30usize, std::collections::BTreeSet::from([60usize])),
                    (31usize, std::collections::BTreeSet::from([60usize])),
                    (32usize, std::collections::BTreeSet::from([60usize])),
                    (34usize, std::collections::BTreeSet::from([60usize])),
                    (38usize, std::collections::BTreeSet::from([60usize])),
                    (39usize, std::collections::BTreeSet::from([60usize])),
                    (40usize, std::collections::BTreeSet::from([60usize])),
                    (41usize, std::collections::BTreeSet::from([60usize])),
                    (42usize, std::collections::BTreeSet::from([60usize])),
                    (43usize, std::collections::BTreeSet::from([60usize])),
                    (44usize, std::collections::BTreeSet::from([60usize])),
                    (45usize, std::collections::BTreeSet::from([60usize])),
                    (46usize, std::collections::BTreeSet::from([60usize])),
                    (47usize, std::collections::BTreeSet::from([60usize])),
                    (49usize, std::collections::BTreeSet::from([60usize])),
                    (51usize, std::collections::BTreeSet::from([60usize])),
                    (52usize, std::collections::BTreeSet::from([60usize])),
                    (53usize, std::collections::BTreeSet::from([60usize])),
                    (54usize, std::collections::BTreeSet::from([60usize])),
                    (55usize, std::collections::BTreeSet::from([60usize])),
                    (56usize, std::collections::BTreeSet::from([60usize])),
                    (57usize, std::collections::BTreeSet::from([60usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 58usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([62usize])),
                    (12usize, std::collections::BTreeSet::from([62usize])),
                    (13usize, std::collections::BTreeSet::from([62usize])),
                    (14usize, std::collections::BTreeSet::from([62usize])),
                    (15usize, std::collections::BTreeSet::from([62usize])),
                    (16usize, std::collections::BTreeSet::from([62usize])),
                    (18usize, std::collections::BTreeSet::from([62usize])),
                    (19usize, std::collections::BTreeSet::from([62usize])),
                    (20usize, std::collections::BTreeSet::from([62usize])),
                    (21usize, std::collections::BTreeSet::from([62usize])),
                    (22usize, std::collections::BTreeSet::from([62usize])),
                    (23usize, std::collections::BTreeSet::from([62usize])),
                    (25usize, std::collections::BTreeSet::from([62usize])),
                    (26usize, std::collections::BTreeSet::from([62usize])),
                    (28usize, std::collections::BTreeSet::from([62usize])),
                    (30usize, std::collections::BTreeSet::from([62usize])),
                    (31usize, std::collections::BTreeSet::from([62usize])),
                    (32usize, std::collections::BTreeSet::from([62usize])),
                    (34usize, std::collections::BTreeSet::from([62usize])),
                    (38usize, std::collections::BTreeSet::from([62usize])),
                    (39usize, std::collections::BTreeSet::from([62usize])),
                    (40usize, std::collections::BTreeSet::from([62usize])),
                    (41usize, std::collections::BTreeSet::from([62usize])),
                    (42usize, std::collections::BTreeSet::from([62usize])),
                    (43usize, std::collections::BTreeSet::from([62usize])),
                    (44usize, std::collections::BTreeSet::from([62usize])),
                    (45usize, std::collections::BTreeSet::from([62usize])),
                    (46usize, std::collections::BTreeSet::from([62usize])),
                    (47usize, std::collections::BTreeSet::from([62usize])),
                    (49usize, std::collections::BTreeSet::from([62usize])),
                    (51usize, std::collections::BTreeSet::from([62usize])),
                    (52usize, std::collections::BTreeSet::from([62usize])),
                    (53usize, std::collections::BTreeSet::from([62usize])),
                    (54usize, std::collections::BTreeSet::from([62usize])),
                    (55usize, std::collections::BTreeSet::from([62usize])),
                    (56usize, std::collections::BTreeSet::from([62usize])),
                    (57usize, std::collections::BTreeSet::from([62usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 60usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([64usize])),
                    (13usize, std::collections::BTreeSet::from([64usize])),
                    (14usize, std::collections::BTreeSet::from([64usize])),
                    (18usize, std::collections::BTreeSet::from([64usize])),
                    (19usize, std::collections::BTreeSet::from([64usize])),
                    (20usize, std::collections::BTreeSet::from([64usize])),
                    (21usize, std::collections::BTreeSet::from([64usize])),
                    (22usize, std::collections::BTreeSet::from([64usize])),
                    (23usize, std::collections::BTreeSet::from([64usize])),
                    (25usize, std::collections::BTreeSet::from([64usize])),
                    (26usize, std::collections::BTreeSet::from([64usize])),
                    (28usize, std::collections::BTreeSet::from([64usize])),
                    (30usize, std::collections::BTreeSet::from([64usize])),
                    (31usize, std::collections::BTreeSet::from([64usize])),
                    (32usize, std::collections::BTreeSet::from([64usize])),
                    (34usize, std::collections::BTreeSet::from([64usize])),
                    (38usize, std::collections::BTreeSet::from([64usize])),
                    (39usize, std::collections::BTreeSet::from([64usize])),
                    (40usize, std::collections::BTreeSet::from([64usize])),
                    (41usize, std::collections::BTreeSet::from([64usize])),
                    (42usize, std::collections::BTreeSet::from([64usize])),
                    (43usize, std::collections::BTreeSet::from([64usize])),
                    (44usize, std::collections::BTreeSet::from([64usize])),
                    (45usize, std::collections::BTreeSet::from([64usize])),
                    (46usize, std::collections::BTreeSet::from([64usize])),
                    (47usize, std::collections::BTreeSet::from([64usize])),
                    (49usize, std::collections::BTreeSet::from([64usize])),
                    (51usize, std::collections::BTreeSet::from([64usize])),
                    (52usize, std::collections::BTreeSet::from([64usize])),
                    (53usize, std::collections::BTreeSet::from([64usize])),
                    (54usize, std::collections::BTreeSet::from([64usize])),
                    (55usize, std::collections::BTreeSet::from([64usize])),
                    (56usize, std::collections::BTreeSet::from([64usize])),
                    (57usize, std::collections::BTreeSet::from([64usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 62usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([65usize])),
                    (14usize, std::collections::BTreeSet::from([65usize])),
                    (18usize, std::collections::BTreeSet::from([65usize])),
                    (19usize, std::collections::BTreeSet::from([65usize])),
                    (20usize, std::collections::BTreeSet::from([65usize])),
                    (21usize, std::collections::BTreeSet::from([65usize])),
                    (22usize, std::collections::BTreeSet::from([65usize])),
                    (23usize, std::collections::BTreeSet::from([65usize])),
                    (25usize, std::collections::BTreeSet::from([65usize])),
                    (26usize, std::collections::BTreeSet::from([65usize])),
                    (28usize, std::collections::BTreeSet::from([65usize])),
                    (30usize, std::collections::BTreeSet::from([65usize])),
                    (31usize, std::collections::BTreeSet::from([65usize])),
                    (32usize, std::collections::BTreeSet::from([65usize])),
                    (34usize, std::collections::BTreeSet::from([65usize])),
                    (38usize, std::collections::BTreeSet::from([65usize])),
                    (39usize, std::collections::BTreeSet::from([65usize])),
                    (40usize, std::collections::BTreeSet::from([65usize])),
                    (41usize, std::collections::BTreeSet::from([65usize])),
                    (42usize, std::collections::BTreeSet::from([65usize])),
                    (43usize, std::collections::BTreeSet::from([65usize])),
                    (44usize, std::collections::BTreeSet::from([65usize])),
                    (45usize, std::collections::BTreeSet::from([65usize])),
                    (46usize, std::collections::BTreeSet::from([65usize])),
                    (47usize, std::collections::BTreeSet::from([65usize])),
                    (49usize, std::collections::BTreeSet::from([65usize])),
                    (51usize, std::collections::BTreeSet::from([65usize])),
                    (52usize, std::collections::BTreeSet::from([65usize])),
                    (53usize, std::collections::BTreeSet::from([65usize])),
                    (54usize, std::collections::BTreeSet::from([65usize])),
                    (55usize, std::collections::BTreeSet::from([65usize])),
                    (56usize, std::collections::BTreeSet::from([65usize])),
                    (57usize, std::collections::BTreeSet::from([65usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 64usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([71usize])),
                    (18usize, std::collections::BTreeSet::from([71usize])),
                    (19usize, std::collections::BTreeSet::from([71usize])),
                    (20usize, std::collections::BTreeSet::from([71usize])),
                    (21usize, std::collections::BTreeSet::from([71usize])),
                    (22usize, std::collections::BTreeSet::from([71usize])),
                    (23usize, std::collections::BTreeSet::from([71usize])),
                    (25usize, std::collections::BTreeSet::from([71usize])),
                    (26usize, std::collections::BTreeSet::from([71usize])),
                    (28usize, std::collections::BTreeSet::from([71usize])),
                    (30usize, std::collections::BTreeSet::from([71usize])),
                    (31usize, std::collections::BTreeSet::from([71usize])),
                    (32usize, std::collections::BTreeSet::from([71usize])),
                    (34usize, std::collections::BTreeSet::from([71usize])),
                    (38usize, std::collections::BTreeSet::from([71usize])),
                    (39usize, std::collections::BTreeSet::from([71usize])),
                    (40usize, std::collections::BTreeSet::from([71usize])),
                    (41usize, std::collections::BTreeSet::from([71usize])),
                    (42usize, std::collections::BTreeSet::from([71usize])),
                    (43usize, std::collections::BTreeSet::from([71usize])),
                    (44usize, std::collections::BTreeSet::from([71usize])),
                    (45usize, std::collections::BTreeSet::from([71usize])),
                    (46usize, std::collections::BTreeSet::from([71usize])),
                    (47usize, std::collections::BTreeSet::from([71usize])),
                    (49usize, std::collections::BTreeSet::from([71usize])),
                    (51usize, std::collections::BTreeSet::from([71usize])),
                    (52usize, std::collections::BTreeSet::from([71usize])),
                    (53usize, std::collections::BTreeSet::from([71usize])),
                    (54usize, std::collections::BTreeSet::from([71usize])),
                    (55usize, std::collections::BTreeSet::from([71usize])),
                    (56usize, std::collections::BTreeSet::from([71usize])),
                    (57usize, std::collections::BTreeSet::from([71usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 66usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([70usize])),
                    (18usize, std::collections::BTreeSet::from([70usize])),
                    (19usize, std::collections::BTreeSet::from([70usize])),
                    (20usize, std::collections::BTreeSet::from([70usize])),
                    (21usize, std::collections::BTreeSet::from([70usize])),
                    (22usize, std::collections::BTreeSet::from([70usize])),
                    (23usize, std::collections::BTreeSet::from([70usize])),
                    (25usize, std::collections::BTreeSet::from([70usize])),
                    (26usize, std::collections::BTreeSet::from([70usize])),
                    (28usize, std::collections::BTreeSet::from([70usize])),
                    (30usize, std::collections::BTreeSet::from([70usize])),
                    (31usize, std::collections::BTreeSet::from([70usize])),
                    (32usize, std::collections::BTreeSet::from([70usize])),
                    (34usize, std::collections::BTreeSet::from([70usize])),
                    (38usize, std::collections::BTreeSet::from([70usize])),
                    (39usize, std::collections::BTreeSet::from([70usize])),
                    (40usize, std::collections::BTreeSet::from([70usize])),
                    (41usize, std::collections::BTreeSet::from([70usize])),
                    (42usize, std::collections::BTreeSet::from([70usize])),
                    (43usize, std::collections::BTreeSet::from([70usize])),
                    (44usize, std::collections::BTreeSet::from([70usize])),
                    (45usize, std::collections::BTreeSet::from([70usize])),
                    (46usize, std::collections::BTreeSet::from([70usize])),
                    (47usize, std::collections::BTreeSet::from([70usize])),
                    (49usize, std::collections::BTreeSet::from([70usize])),
                    (51usize, std::collections::BTreeSet::from([70usize])),
                    (52usize, std::collections::BTreeSet::from([70usize])),
                    (53usize, std::collections::BTreeSet::from([70usize])),
                    (54usize, std::collections::BTreeSet::from([70usize])),
                    (55usize, std::collections::BTreeSet::from([70usize])),
                    (56usize, std::collections::BTreeSet::from([70usize])),
                    (57usize, std::collections::BTreeSet::from([70usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 68usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([67usize])),
                    (18usize, std::collections::BTreeSet::from([67usize])),
                    (19usize, std::collections::BTreeSet::from([67usize])),
                    (20usize, std::collections::BTreeSet::from([67usize])),
                    (21usize, std::collections::BTreeSet::from([67usize])),
                    (22usize, std::collections::BTreeSet::from([67usize])),
                    (23usize, std::collections::BTreeSet::from([67usize])),
                    (25usize, std::collections::BTreeSet::from([67usize])),
                    (26usize, std::collections::BTreeSet::from([67usize])),
                    (28usize, std::collections::BTreeSet::from([67usize])),
                    (30usize, std::collections::BTreeSet::from([67usize])),
                    (31usize, std::collections::BTreeSet::from([67usize])),
                    (32usize, std::collections::BTreeSet::from([67usize])),
                    (34usize, std::collections::BTreeSet::from([67usize])),
                    (38usize, std::collections::BTreeSet::from([67usize])),
                    (39usize, std::collections::BTreeSet::from([67usize])),
                    (40usize, std::collections::BTreeSet::from([67usize])),
                    (41usize, std::collections::BTreeSet::from([67usize])),
                    (42usize, std::collections::BTreeSet::from([67usize])),
                    (43usize, std::collections::BTreeSet::from([67usize])),
                    (44usize, std::collections::BTreeSet::from([67usize])),
                    (45usize, std::collections::BTreeSet::from([67usize])),
                    (46usize, std::collections::BTreeSet::from([67usize])),
                    (47usize, std::collections::BTreeSet::from([67usize])),
                    (49usize, std::collections::BTreeSet::from([67usize])),
                    (51usize, std::collections::BTreeSet::from([67usize])),
                    (52usize, std::collections::BTreeSet::from([67usize])),
                    (53usize, std::collections::BTreeSet::from([67usize])),
                    (54usize, std::collections::BTreeSet::from([67usize])),
                    (55usize, std::collections::BTreeSet::from([67usize])),
                    (56usize, std::collections::BTreeSet::from([67usize])),
                    (57usize, std::collections::BTreeSet::from([67usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 70usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([69usize])),
                    (18usize, std::collections::BTreeSet::from([69usize])),
                    (19usize, std::collections::BTreeSet::from([69usize])),
                    (20usize, std::collections::BTreeSet::from([69usize])),
                    (21usize, std::collections::BTreeSet::from([69usize])),
                    (22usize, std::collections::BTreeSet::from([69usize])),
                    (23usize, std::collections::BTreeSet::from([69usize])),
                    (25usize, std::collections::BTreeSet::from([69usize])),
                    (26usize, std::collections::BTreeSet::from([69usize])),
                    (28usize, std::collections::BTreeSet::from([69usize])),
                    (30usize, std::collections::BTreeSet::from([69usize])),
                    (31usize, std::collections::BTreeSet::from([69usize])),
                    (32usize, std::collections::BTreeSet::from([69usize])),
                    (34usize, std::collections::BTreeSet::from([69usize])),
                    (38usize, std::collections::BTreeSet::from([69usize])),
                    (39usize, std::collections::BTreeSet::from([69usize])),
                    (40usize, std::collections::BTreeSet::from([69usize])),
                    (41usize, std::collections::BTreeSet::from([69usize])),
                    (42usize, std::collections::BTreeSet::from([69usize])),
                    (43usize, std::collections::BTreeSet::from([69usize])),
                    (44usize, std::collections::BTreeSet::from([69usize])),
                    (45usize, std::collections::BTreeSet::from([69usize])),
                    (46usize, std::collections::BTreeSet::from([69usize])),
                    (47usize, std::collections::BTreeSet::from([69usize])),
                    (49usize, std::collections::BTreeSet::from([69usize])),
                    (51usize, std::collections::BTreeSet::from([69usize])),
                    (52usize, std::collections::BTreeSet::from([69usize])),
                    (53usize, std::collections::BTreeSet::from([69usize])),
                    (54usize, std::collections::BTreeSet::from([69usize])),
                    (55usize, std::collections::BTreeSet::from([69usize])),
                    (56usize, std::collections::BTreeSet::from([69usize])),
                    (57usize, std::collections::BTreeSet::from([69usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 72usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([66usize])),
                    (18usize, std::collections::BTreeSet::from([66usize])),
                    (19usize, std::collections::BTreeSet::from([66usize])),
                    (20usize, std::collections::BTreeSet::from([66usize])),
                    (21usize, std::collections::BTreeSet::from([66usize])),
                    (22usize, std::collections::BTreeSet::from([66usize])),
                    (23usize, std::collections::BTreeSet::from([66usize])),
                    (25usize, std::collections::BTreeSet::from([66usize])),
                    (26usize, std::collections::BTreeSet::from([66usize])),
                    (28usize, std::collections::BTreeSet::from([66usize])),
                    (30usize, std::collections::BTreeSet::from([66usize])),
                    (31usize, std::collections::BTreeSet::from([66usize])),
                    (32usize, std::collections::BTreeSet::from([66usize])),
                    (34usize, std::collections::BTreeSet::from([66usize])),
                    (38usize, std::collections::BTreeSet::from([66usize])),
                    (39usize, std::collections::BTreeSet::from([66usize])),
                    (40usize, std::collections::BTreeSet::from([66usize])),
                    (41usize, std::collections::BTreeSet::from([66usize])),
                    (42usize, std::collections::BTreeSet::from([66usize])),
                    (43usize, std::collections::BTreeSet::from([66usize])),
                    (44usize, std::collections::BTreeSet::from([66usize])),
                    (45usize, std::collections::BTreeSet::from([66usize])),
                    (46usize, std::collections::BTreeSet::from([66usize])),
                    (47usize, std::collections::BTreeSet::from([66usize])),
                    (49usize, std::collections::BTreeSet::from([66usize])),
                    (51usize, std::collections::BTreeSet::from([66usize])),
                    (52usize, std::collections::BTreeSet::from([66usize])),
                    (53usize, std::collections::BTreeSet::from([66usize])),
                    (54usize, std::collections::BTreeSet::from([66usize])),
                    (55usize, std::collections::BTreeSet::from([66usize])),
                    (56usize, std::collections::BTreeSet::from([66usize])),
                    (57usize, std::collections::BTreeSet::from([66usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 74usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([68usize])),
                    (18usize, std::collections::BTreeSet::from([68usize])),
                    (19usize, std::collections::BTreeSet::from([68usize])),
                    (20usize, std::collections::BTreeSet::from([68usize])),
                    (21usize, std::collections::BTreeSet::from([68usize])),
                    (22usize, std::collections::BTreeSet::from([68usize])),
                    (23usize, std::collections::BTreeSet::from([68usize])),
                    (25usize, std::collections::BTreeSet::from([68usize])),
                    (26usize, std::collections::BTreeSet::from([68usize])),
                    (28usize, std::collections::BTreeSet::from([68usize])),
                    (30usize, std::collections::BTreeSet::from([68usize])),
                    (31usize, std::collections::BTreeSet::from([68usize])),
                    (32usize, std::collections::BTreeSet::from([68usize])),
                    (34usize, std::collections::BTreeSet::from([68usize])),
                    (38usize, std::collections::BTreeSet::from([68usize])),
                    (39usize, std::collections::BTreeSet::from([68usize])),
                    (40usize, std::collections::BTreeSet::from([68usize])),
                    (41usize, std::collections::BTreeSet::from([68usize])),
                    (42usize, std::collections::BTreeSet::from([68usize])),
                    (43usize, std::collections::BTreeSet::from([68usize])),
                    (44usize, std::collections::BTreeSet::from([68usize])),
                    (45usize, std::collections::BTreeSet::from([68usize])),
                    (46usize, std::collections::BTreeSet::from([68usize])),
                    (47usize, std::collections::BTreeSet::from([68usize])),
                    (49usize, std::collections::BTreeSet::from([68usize])),
                    (51usize, std::collections::BTreeSet::from([68usize])),
                    (52usize, std::collections::BTreeSet::from([68usize])),
                    (53usize, std::collections::BTreeSet::from([68usize])),
                    (54usize, std::collections::BTreeSet::from([68usize])),
                    (55usize, std::collections::BTreeSet::from([68usize])),
                    (56usize, std::collections::BTreeSet::from([68usize])),
                    (57usize, std::collections::BTreeSet::from([68usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([120usize])),
                    (1usize, std::collections::BTreeSet::from([120usize])),
                    (5usize, std::collections::BTreeSet::from([120usize])),
                    (6usize, std::collections::BTreeSet::from([120usize])),
                    (7usize, std::collections::BTreeSet::from([120usize])),
                    (8usize, std::collections::BTreeSet::from([120usize])),
                    (9usize, std::collections::BTreeSet::from([120usize])),
                    (10usize, std::collections::BTreeSet::from([120usize])),
                    (12usize, std::collections::BTreeSet::from([120usize])),
                    (13usize, std::collections::BTreeSet::from([120usize])),
                    (14usize, std::collections::BTreeSet::from([120usize])),
                    (15usize, std::collections::BTreeSet::from([120usize])),
                    (16usize, std::collections::BTreeSet::from([120usize])),
                    (17usize, std::collections::BTreeSet::from([120usize])),
                    (18usize, std::collections::BTreeSet::from([120usize])),
                    (19usize, std::collections::BTreeSet::from([120usize])),
                    (20usize, std::collections::BTreeSet::from([120usize])),
                    (21usize, std::collections::BTreeSet::from([120usize])),
                    (22usize, std::collections::BTreeSet::from([120usize])),
                    (23usize, std::collections::BTreeSet::from([120usize])),
                    (25usize, std::collections::BTreeSet::from([120usize])),
                    (26usize, std::collections::BTreeSet::from([120usize])),
                    (27usize, std::collections::BTreeSet::from([120usize])),
                    (28usize, std::collections::BTreeSet::from([120usize])),
                    (29usize, std::collections::BTreeSet::from([120usize])),
                    (30usize, std::collections::BTreeSet::from([120usize])),
                    (31usize, std::collections::BTreeSet::from([120usize])),
                    (32usize, std::collections::BTreeSet::from([120usize])),
                    (33usize, std::collections::BTreeSet::from([120usize])),
                    (34usize, std::collections::BTreeSet::from([120usize])),
                    (35usize, std::collections::BTreeSet::from([120usize])),
                    (36usize, std::collections::BTreeSet::from([120usize])),
                    (38usize, std::collections::BTreeSet::from([120usize])),
                    (39usize, std::collections::BTreeSet::from([120usize])),
                    (40usize, std::collections::BTreeSet::from([120usize])),
                    (41usize, std::collections::BTreeSet::from([120usize])),
                    (42usize, std::collections::BTreeSet::from([120usize])),
                    (43usize, std::collections::BTreeSet::from([120usize])),
                    (44usize, std::collections::BTreeSet::from([120usize])),
                    (45usize, std::collections::BTreeSet::from([120usize])),
                    (46usize, std::collections::BTreeSet::from([120usize])),
                    (47usize, std::collections::BTreeSet::from([120usize])),
                    (49usize, std::collections::BTreeSet::from([120usize])),
                    (51usize, std::collections::BTreeSet::from([120usize])),
                    (52usize, std::collections::BTreeSet::from([120usize])),
                    (53usize, std::collections::BTreeSet::from([120usize])),
                    (54usize, std::collections::BTreeSet::from([120usize])),
                    (55usize, std::collections::BTreeSet::from([120usize])),
                    (56usize, std::collections::BTreeSet::from([120usize])),
                    (57usize, std::collections::BTreeSet::from([120usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 120usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 77usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([72usize])),
                    (25usize, std::collections::BTreeSet::from([72usize])),
                    (26usize, std::collections::BTreeSet::from([72usize])),
                    (28usize, std::collections::BTreeSet::from([72usize])),
                    (30usize, std::collections::BTreeSet::from([72usize])),
                    (31usize, std::collections::BTreeSet::from([72usize])),
                    (32usize, std::collections::BTreeSet::from([72usize])),
                    (34usize, std::collections::BTreeSet::from([72usize])),
                    (38usize, std::collections::BTreeSet::from([72usize])),
                    (39usize, std::collections::BTreeSet::from([72usize])),
                    (40usize, std::collections::BTreeSet::from([72usize])),
                    (41usize, std::collections::BTreeSet::from([72usize])),
                    (42usize, std::collections::BTreeSet::from([72usize])),
                    (43usize, std::collections::BTreeSet::from([72usize])),
                    (44usize, std::collections::BTreeSet::from([72usize])),
                    (45usize, std::collections::BTreeSet::from([72usize])),
                    (46usize, std::collections::BTreeSet::from([72usize])),
                    (47usize, std::collections::BTreeSet::from([72usize])),
                    (49usize, std::collections::BTreeSet::from([72usize])),
                    (51usize, std::collections::BTreeSet::from([72usize])),
                    (52usize, std::collections::BTreeSet::from([72usize])),
                    (53usize, std::collections::BTreeSet::from([72usize])),
                    (54usize, std::collections::BTreeSet::from([72usize])),
                    (55usize, std::collections::BTreeSet::from([72usize])),
                    (56usize, std::collections::BTreeSet::from([72usize])),
                    (57usize, std::collections::BTreeSet::from([72usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 79usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([73usize])),
                    (25usize, std::collections::BTreeSet::from([73usize])),
                    (26usize, std::collections::BTreeSet::from([73usize])),
                    (28usize, std::collections::BTreeSet::from([73usize])),
                    (30usize, std::collections::BTreeSet::from([73usize])),
                    (31usize, std::collections::BTreeSet::from([73usize])),
                    (32usize, std::collections::BTreeSet::from([73usize])),
                    (34usize, std::collections::BTreeSet::from([73usize])),
                    (39usize, std::collections::BTreeSet::from([73usize])),
                    (40usize, std::collections::BTreeSet::from([73usize])),
                    (41usize, std::collections::BTreeSet::from([73usize])),
                    (42usize, std::collections::BTreeSet::from([73usize])),
                    (43usize, std::collections::BTreeSet::from([73usize])),
                    (44usize, std::collections::BTreeSet::from([73usize])),
                    (45usize, std::collections::BTreeSet::from([73usize])),
                    (46usize, std::collections::BTreeSet::from([73usize])),
                    (47usize, std::collections::BTreeSet::from([73usize])),
                    (49usize, std::collections::BTreeSet::from([73usize])),
                    (51usize, std::collections::BTreeSet::from([73usize])),
                    (52usize, std::collections::BTreeSet::from([73usize])),
                    (53usize, std::collections::BTreeSet::from([73usize])),
                    (54usize, std::collections::BTreeSet::from([73usize])),
                    (55usize, std::collections::BTreeSet::from([73usize])),
                    (56usize, std::collections::BTreeSet::from([73usize])),
                    (57usize, std::collections::BTreeSet::from([73usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 215usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 80usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 82usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 6usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(31usize, 83usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 6usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([6usize])),
                    (25usize, std::collections::BTreeSet::from([6usize])),
                    (31usize, std::collections::BTreeSet::from([6usize])),
                    (32usize, std::collections::BTreeSet::from([6usize])),
                    (39usize, std::collections::BTreeSet::from([6usize])),
                    (40usize, std::collections::BTreeSet::from([6usize])),
                    (41usize, std::collections::BTreeSet::from([6usize])),
                    (42usize, std::collections::BTreeSet::from([6usize])),
                    (43usize, std::collections::BTreeSet::from([6usize])),
                    (44usize, std::collections::BTreeSet::from([6usize])),
                    (45usize, std::collections::BTreeSet::from([6usize])),
                    (46usize, std::collections::BTreeSet::from([6usize])),
                    (47usize, std::collections::BTreeSet::from([6usize])),
                    (49usize, std::collections::BTreeSet::from([6usize])),
                    (52usize, std::collections::BTreeSet::from([6usize])),
                    (53usize, std::collections::BTreeSet::from([6usize])),
                    (55usize, std::collections::BTreeSet::from([6usize])),
                    (56usize, std::collections::BTreeSet::from([6usize])),
                    (57usize, std::collections::BTreeSet::from([6usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 6usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([3usize])),
                    (25usize, std::collections::BTreeSet::from([3usize])),
                    (31usize, std::collections::BTreeSet::from([3usize])),
                    (32usize, std::collections::BTreeSet::from([3usize])),
                    (39usize, std::collections::BTreeSet::from([3usize])),
                    (40usize, std::collections::BTreeSet::from([3usize])),
                    (41usize, std::collections::BTreeSet::from([3usize])),
                    (42usize, std::collections::BTreeSet::from([3usize])),
                    (43usize, std::collections::BTreeSet::from([3usize])),
                    (44usize, std::collections::BTreeSet::from([3usize])),
                    (45usize, std::collections::BTreeSet::from([3usize])),
                    (46usize, std::collections::BTreeSet::from([3usize])),
                    (47usize, std::collections::BTreeSet::from([3usize])),
                    (49usize, std::collections::BTreeSet::from([3usize])),
                    (52usize, std::collections::BTreeSet::from([3usize])),
                    (53usize, std::collections::BTreeSet::from([3usize])),
                    (55usize, std::collections::BTreeSet::from([3usize])),
                    (56usize, std::collections::BTreeSet::from([3usize])),
                    (57usize, std::collections::BTreeSet::from([3usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 3usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([7usize])),
                    (25usize, std::collections::BTreeSet::from([7usize])),
                    (31usize, std::collections::BTreeSet::from([7usize])),
                    (32usize, std::collections::BTreeSet::from([7usize])),
                    (39usize, std::collections::BTreeSet::from([7usize])),
                    (40usize, std::collections::BTreeSet::from([7usize])),
                    (41usize, std::collections::BTreeSet::from([7usize])),
                    (42usize, std::collections::BTreeSet::from([7usize])),
                    (43usize, std::collections::BTreeSet::from([7usize])),
                    (44usize, std::collections::BTreeSet::from([7usize])),
                    (45usize, std::collections::BTreeSet::from([7usize])),
                    (46usize, std::collections::BTreeSet::from([7usize])),
                    (47usize, std::collections::BTreeSet::from([7usize])),
                    (49usize, std::collections::BTreeSet::from([7usize])),
                    (52usize, std::collections::BTreeSet::from([7usize])),
                    (53usize, std::collections::BTreeSet::from([7usize])),
                    (55usize, std::collections::BTreeSet::from([7usize])),
                    (56usize, std::collections::BTreeSet::from([7usize])),
                    (57usize, std::collections::BTreeSet::from([7usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 7usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 171usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 88usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::NameList,
                    183usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(24usize, 89usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (34usize, std::collections::BTreeSet::from([36usize])),
                    (48usize, std::collections::BTreeSet::from([36usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 36usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 173usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 91usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::FuncName1, 92usize),
                    (ChunkOrExpressionsNonTerminals::FuncName, 97usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 85usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 86usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 87usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (25usize, std::collections::BTreeSet::from([86usize])),
                    (33usize, std::collections::BTreeSet::from([86usize])),
                    (35usize, std::collections::BTreeSet::from([86usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 86usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (33usize, 93usize),
                    (35usize, 95usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    25usize,
                    std::collections::BTreeSet::from([88usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 85usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 87usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 94usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 87usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    25usize,
                    std::collections::BTreeSet::from([87usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 87usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 96usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 85usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (25usize, std::collections::BTreeSet::from([85usize])),
                    (33usize, std::collections::BTreeSet::from([85usize])),
                    (35usize, std::collections::BTreeSet::from([85usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 85usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(25usize, 16usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::FuncBody,
                    190usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 99usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 8usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([8usize])),
                    (25usize, std::collections::BTreeSet::from([8usize])),
                    (31usize, std::collections::BTreeSet::from([8usize])),
                    (32usize, std::collections::BTreeSet::from([8usize])),
                    (39usize, std::collections::BTreeSet::from([8usize])),
                    (40usize, std::collections::BTreeSet::from([8usize])),
                    (41usize, std::collections::BTreeSet::from([8usize])),
                    (42usize, std::collections::BTreeSet::from([8usize])),
                    (43usize, std::collections::BTreeSet::from([8usize])),
                    (44usize, std::collections::BTreeSet::from([8usize])),
                    (45usize, std::collections::BTreeSet::from([8usize])),
                    (46usize, std::collections::BTreeSet::from([8usize])),
                    (47usize, std::collections::BTreeSet::from([8usize])),
                    (49usize, std::collections::BTreeSet::from([8usize])),
                    (52usize, std::collections::BTreeSet::from([8usize])),
                    (53usize, std::collections::BTreeSet::from([8usize])),
                    (55usize, std::collections::BTreeSet::from([8usize])),
                    (56usize, std::collections::BTreeSet::from([8usize])),
                    (57usize, std::collections::BTreeSet::from([8usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 8usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 191usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (28usize, std::collections::BTreeSet::from([82usize])),
                    (32usize, std::collections::BTreeSet::from([82usize])),
                    (34usize, std::collections::BTreeSet::from([82usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 82usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (32usize, 103usize),
                    (34usize, 104usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::FieldSep, 105usize),
                    (
                        ChunkOrExpressionsNonTerminals::_FieldSepQuestion41,
                        107usize,
                    ),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    28usize,
                    std::collections::BTreeSet::from([124usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 76usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 78usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 121usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 122usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 124usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([122usize])),
                    (1usize, std::collections::BTreeSet::from([122usize])),
                    (2usize, std::collections::BTreeSet::from([122usize])),
                    (3usize, std::collections::BTreeSet::from([122usize])),
                    (4usize, std::collections::BTreeSet::from([122usize])),
                    (5usize, std::collections::BTreeSet::from([122usize])),
                    (6usize, std::collections::BTreeSet::from([122usize])),
                    (11usize, std::collections::BTreeSet::from([122usize])),
                    (13usize, std::collections::BTreeSet::from([122usize])),
                    (25usize, std::collections::BTreeSet::from([122usize])),
                    (27usize, std::collections::BTreeSet::from([122usize])),
                    (28usize, std::collections::BTreeSet::from([122usize])),
                    (29usize, std::collections::BTreeSet::from([122usize])),
                    (37usize, std::collections::BTreeSet::from([122usize])),
                    (45usize, std::collections::BTreeSet::from([122usize])),
                    (50usize, std::collections::BTreeSet::from([122usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 122usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([121usize])),
                    (1usize, std::collections::BTreeSet::from([121usize])),
                    (2usize, std::collections::BTreeSet::from([121usize])),
                    (3usize, std::collections::BTreeSet::from([121usize])),
                    (4usize, std::collections::BTreeSet::from([121usize])),
                    (5usize, std::collections::BTreeSet::from([121usize])),
                    (6usize, std::collections::BTreeSet::from([121usize])),
                    (11usize, std::collections::BTreeSet::from([121usize])),
                    (13usize, std::collections::BTreeSet::from([121usize])),
                    (25usize, std::collections::BTreeSet::from([121usize])),
                    (27usize, std::collections::BTreeSet::from([121usize])),
                    (28usize, std::collections::BTreeSet::from([121usize])),
                    (29usize, std::collections::BTreeSet::from([121usize])),
                    (37usize, std::collections::BTreeSet::from([121usize])),
                    (45usize, std::collections::BTreeSet::from([121usize])),
                    (50usize, std::collections::BTreeSet::from([121usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 121usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 12usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (29usize, 80usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 101usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::Field, 106usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    28usize,
                    std::collections::BTreeSet::from([123usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 76usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 80usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 81usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 82usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 123usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (28usize, std::collections::BTreeSet::from([76usize])),
                    (32usize, std::collections::BTreeSet::from([76usize])),
                    (34usize, std::collections::BTreeSet::from([76usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 76usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    28usize,
                    std::collections::BTreeSet::from([78usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 78usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(28usize, 109usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 75usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([75usize])),
                    (1usize, std::collections::BTreeSet::from([75usize])),
                    (5usize, std::collections::BTreeSet::from([75usize])),
                    (6usize, std::collections::BTreeSet::from([75usize])),
                    (7usize, std::collections::BTreeSet::from([75usize])),
                    (8usize, std::collections::BTreeSet::from([75usize])),
                    (9usize, std::collections::BTreeSet::from([75usize])),
                    (10usize, std::collections::BTreeSet::from([75usize])),
                    (12usize, std::collections::BTreeSet::from([75usize])),
                    (13usize, std::collections::BTreeSet::from([75usize])),
                    (14usize, std::collections::BTreeSet::from([75usize])),
                    (15usize, std::collections::BTreeSet::from([75usize])),
                    (16usize, std::collections::BTreeSet::from([75usize])),
                    (17usize, std::collections::BTreeSet::from([75usize])),
                    (18usize, std::collections::BTreeSet::from([75usize])),
                    (19usize, std::collections::BTreeSet::from([75usize])),
                    (20usize, std::collections::BTreeSet::from([75usize])),
                    (21usize, std::collections::BTreeSet::from([75usize])),
                    (22usize, std::collections::BTreeSet::from([75usize])),
                    (23usize, std::collections::BTreeSet::from([75usize])),
                    (25usize, std::collections::BTreeSet::from([75usize])),
                    (26usize, std::collections::BTreeSet::from([75usize])),
                    (27usize, std::collections::BTreeSet::from([75usize])),
                    (28usize, std::collections::BTreeSet::from([75usize])),
                    (29usize, std::collections::BTreeSet::from([75usize])),
                    (30usize, std::collections::BTreeSet::from([75usize])),
                    (31usize, std::collections::BTreeSet::from([75usize])),
                    (32usize, std::collections::BTreeSet::from([75usize])),
                    (33usize, std::collections::BTreeSet::from([75usize])),
                    (34usize, std::collections::BTreeSet::from([75usize])),
                    (35usize, std::collections::BTreeSet::from([75usize])),
                    (36usize, std::collections::BTreeSet::from([75usize])),
                    (38usize, std::collections::BTreeSet::from([75usize])),
                    (39usize, std::collections::BTreeSet::from([75usize])),
                    (40usize, std::collections::BTreeSet::from([75usize])),
                    (41usize, std::collections::BTreeSet::from([75usize])),
                    (42usize, std::collections::BTreeSet::from([75usize])),
                    (43usize, std::collections::BTreeSet::from([75usize])),
                    (44usize, std::collections::BTreeSet::from([75usize])),
                    (45usize, std::collections::BTreeSet::from([75usize])),
                    (46usize, std::collections::BTreeSet::from([75usize])),
                    (47usize, std::collections::BTreeSet::from([75usize])),
                    (49usize, std::collections::BTreeSet::from([75usize])),
                    (51usize, std::collections::BTreeSet::from([75usize])),
                    (52usize, std::collections::BTreeSet::from([75usize])),
                    (53usize, std::collections::BTreeSet::from([75usize])),
                    (54usize, std::collections::BTreeSet::from([75usize])),
                    (55usize, std::collections::BTreeSet::from([75usize])),
                    (56usize, std::collections::BTreeSet::from([75usize])),
                    (57usize, std::collections::BTreeSet::from([75usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 75usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (28usize, std::collections::BTreeSet::from([77usize])),
                    (32usize, std::collections::BTreeSet::from([77usize])),
                    (34usize, std::collections::BTreeSet::from([77usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 77usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 112usize),
                    (45usize, 117usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::AttName, 120usize),
                    (ChunkOrExpressionsNonTerminals::AttNameList, 121usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 39usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(22usize, 113usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::Attrib,
                    116usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([41usize])),
                    (24usize, std::collections::BTreeSet::from([41usize])),
                    (25usize, std::collections::BTreeSet::from([41usize])),
                    (31usize, std::collections::BTreeSet::from([41usize])),
                    (32usize, std::collections::BTreeSet::from([41usize])),
                    (34usize, std::collections::BTreeSet::from([41usize])),
                    (39usize, std::collections::BTreeSet::from([41usize])),
                    (40usize, std::collections::BTreeSet::from([41usize])),
                    (41usize, std::collections::BTreeSet::from([41usize])),
                    (42usize, std::collections::BTreeSet::from([41usize])),
                    (43usize, std::collections::BTreeSet::from([41usize])),
                    (44usize, std::collections::BTreeSet::from([41usize])),
                    (45usize, std::collections::BTreeSet::from([41usize])),
                    (46usize, std::collections::BTreeSet::from([41usize])),
                    (47usize, std::collections::BTreeSet::from([41usize])),
                    (49usize, std::collections::BTreeSet::from([41usize])),
                    (52usize, std::collections::BTreeSet::from([41usize])),
                    (53usize, std::collections::BTreeSet::from([41usize])),
                    (55usize, std::collections::BTreeSet::from([41usize])),
                    (56usize, std::collections::BTreeSet::from([41usize])),
                    (57usize, std::collections::BTreeSet::from([41usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 40usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 41usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 114usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 40usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(23usize, 115usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 40usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([40usize])),
                    (24usize, std::collections::BTreeSet::from([40usize])),
                    (25usize, std::collections::BTreeSet::from([40usize])),
                    (31usize, std::collections::BTreeSet::from([40usize])),
                    (32usize, std::collections::BTreeSet::from([40usize])),
                    (34usize, std::collections::BTreeSet::from([40usize])),
                    (39usize, std::collections::BTreeSet::from([40usize])),
                    (40usize, std::collections::BTreeSet::from([40usize])),
                    (41usize, std::collections::BTreeSet::from([40usize])),
                    (42usize, std::collections::BTreeSet::from([40usize])),
                    (43usize, std::collections::BTreeSet::from([40usize])),
                    (44usize, std::collections::BTreeSet::from([40usize])),
                    (45usize, std::collections::BTreeSet::from([40usize])),
                    (46usize, std::collections::BTreeSet::from([40usize])),
                    (47usize, std::collections::BTreeSet::from([40usize])),
                    (49usize, std::collections::BTreeSet::from([40usize])),
                    (52usize, std::collections::BTreeSet::from([40usize])),
                    (53usize, std::collections::BTreeSet::from([40usize])),
                    (55usize, std::collections::BTreeSet::from([40usize])),
                    (56usize, std::collections::BTreeSet::from([40usize])),
                    (57usize, std::collections::BTreeSet::from([40usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 40usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([37usize])),
                    (24usize, std::collections::BTreeSet::from([37usize])),
                    (25usize, std::collections::BTreeSet::from([37usize])),
                    (31usize, std::collections::BTreeSet::from([37usize])),
                    (32usize, std::collections::BTreeSet::from([37usize])),
                    (34usize, std::collections::BTreeSet::from([37usize])),
                    (39usize, std::collections::BTreeSet::from([37usize])),
                    (40usize, std::collections::BTreeSet::from([37usize])),
                    (41usize, std::collections::BTreeSet::from([37usize])),
                    (42usize, std::collections::BTreeSet::from([37usize])),
                    (43usize, std::collections::BTreeSet::from([37usize])),
                    (44usize, std::collections::BTreeSet::from([37usize])),
                    (45usize, std::collections::BTreeSet::from([37usize])),
                    (46usize, std::collections::BTreeSet::from([37usize])),
                    (47usize, std::collections::BTreeSet::from([37usize])),
                    (49usize, std::collections::BTreeSet::from([37usize])),
                    (52usize, std::collections::BTreeSet::from([37usize])),
                    (53usize, std::collections::BTreeSet::from([37usize])),
                    (55usize, std::collections::BTreeSet::from([37usize])),
                    (56usize, std::collections::BTreeSet::from([37usize])),
                    (57usize, std::collections::BTreeSet::from([37usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 37usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 118usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 16usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(25usize, 16usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::FuncBody,
                    119usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([16usize])),
                    (25usize, std::collections::BTreeSet::from([16usize])),
                    (31usize, std::collections::BTreeSet::from([16usize])),
                    (32usize, std::collections::BTreeSet::from([16usize])),
                    (39usize, std::collections::BTreeSet::from([16usize])),
                    (40usize, std::collections::BTreeSet::from([16usize])),
                    (41usize, std::collections::BTreeSet::from([16usize])),
                    (42usize, std::collections::BTreeSet::from([16usize])),
                    (43usize, std::collections::BTreeSet::from([16usize])),
                    (44usize, std::collections::BTreeSet::from([16usize])),
                    (45usize, std::collections::BTreeSet::from([16usize])),
                    (46usize, std::collections::BTreeSet::from([16usize])),
                    (47usize, std::collections::BTreeSet::from([16usize])),
                    (49usize, std::collections::BTreeSet::from([16usize])),
                    (52usize, std::collections::BTreeSet::from([16usize])),
                    (53usize, std::collections::BTreeSet::from([16usize])),
                    (55usize, std::collections::BTreeSet::from([16usize])),
                    (56usize, std::collections::BTreeSet::from([16usize])),
                    (57usize, std::collections::BTreeSet::from([16usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 16usize,
                    shifted: 4usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([39usize])),
                    (24usize, std::collections::BTreeSet::from([39usize])),
                    (25usize, std::collections::BTreeSet::from([39usize])),
                    (31usize, std::collections::BTreeSet::from([39usize])),
                    (32usize, std::collections::BTreeSet::from([39usize])),
                    (34usize, std::collections::BTreeSet::from([39usize])),
                    (39usize, std::collections::BTreeSet::from([39usize])),
                    (40usize, std::collections::BTreeSet::from([39usize])),
                    (41usize, std::collections::BTreeSet::from([39usize])),
                    (42usize, std::collections::BTreeSet::from([39usize])),
                    (43usize, std::collections::BTreeSet::from([39usize])),
                    (44usize, std::collections::BTreeSet::from([39usize])),
                    (45usize, std::collections::BTreeSet::from([39usize])),
                    (46usize, std::collections::BTreeSet::from([39usize])),
                    (47usize, std::collections::BTreeSet::from([39usize])),
                    (49usize, std::collections::BTreeSet::from([39usize])),
                    (52usize, std::collections::BTreeSet::from([39usize])),
                    (53usize, std::collections::BTreeSet::from([39usize])),
                    (55usize, std::collections::BTreeSet::from([39usize])),
                    (56usize, std::collections::BTreeSet::from([39usize])),
                    (57usize, std::collections::BTreeSet::from([39usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 39usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (24usize, 122usize),
                    (34usize, 194usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::_Group38, 196usize),
                    (
                        ChunkOrExpressionsNonTerminals::__Group38Question39,
                        197usize,
                    ),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([104usize])),
                    (25usize, std::collections::BTreeSet::from([104usize])),
                    (31usize, std::collections::BTreeSet::from([104usize])),
                    (32usize, std::collections::BTreeSet::from([104usize])),
                    (39usize, std::collections::BTreeSet::from([104usize])),
                    (40usize, std::collections::BTreeSet::from([104usize])),
                    (41usize, std::collections::BTreeSet::from([104usize])),
                    (42usize, std::collections::BTreeSet::from([104usize])),
                    (43usize, std::collections::BTreeSet::from([104usize])),
                    (44usize, std::collections::BTreeSet::from([104usize])),
                    (45usize, std::collections::BTreeSet::from([104usize])),
                    (46usize, std::collections::BTreeSet::from([104usize])),
                    (47usize, std::collections::BTreeSet::from([104usize])),
                    (49usize, std::collections::BTreeSet::from([104usize])),
                    (52usize, std::collections::BTreeSet::from([104usize])),
                    (53usize, std::collections::BTreeSet::from([104usize])),
                    (55usize, std::collections::BTreeSet::from([104usize])),
                    (56usize, std::collections::BTreeSet::from([104usize])),
                    (57usize, std::collections::BTreeSet::from([104usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 103usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 104usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::ExpList1, 193usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 135usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 198usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (53usize, std::collections::BTreeSet::from([93usize])),
                    (55usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 167usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(43usize, 126usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 84usize,
                    shifted: 4usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([84usize])),
                    (5usize, std::collections::BTreeSet::from([84usize])),
                    (6usize, std::collections::BTreeSet::from([84usize])),
                    (7usize, std::collections::BTreeSet::from([84usize])),
                    (8usize, std::collections::BTreeSet::from([84usize])),
                    (9usize, std::collections::BTreeSet::from([84usize])),
                    (10usize, std::collections::BTreeSet::from([84usize])),
                    (12usize, std::collections::BTreeSet::from([84usize])),
                    (13usize, std::collections::BTreeSet::from([84usize])),
                    (14usize, std::collections::BTreeSet::from([84usize])),
                    (15usize, std::collections::BTreeSet::from([84usize])),
                    (16usize, std::collections::BTreeSet::from([84usize])),
                    (17usize, std::collections::BTreeSet::from([84usize])),
                    (18usize, std::collections::BTreeSet::from([84usize])),
                    (19usize, std::collections::BTreeSet::from([84usize])),
                    (20usize, std::collections::BTreeSet::from([84usize])),
                    (21usize, std::collections::BTreeSet::from([84usize])),
                    (22usize, std::collections::BTreeSet::from([84usize])),
                    (23usize, std::collections::BTreeSet::from([84usize])),
                    (25usize, std::collections::BTreeSet::from([84usize])),
                    (26usize, std::collections::BTreeSet::from([84usize])),
                    (28usize, std::collections::BTreeSet::from([84usize])),
                    (30usize, std::collections::BTreeSet::from([84usize])),
                    (31usize, std::collections::BTreeSet::from([84usize])),
                    (32usize, std::collections::BTreeSet::from([84usize])),
                    (34usize, std::collections::BTreeSet::from([84usize])),
                    (36usize, std::collections::BTreeSet::from([84usize])),
                    (38usize, std::collections::BTreeSet::from([84usize])),
                    (39usize, std::collections::BTreeSet::from([84usize])),
                    (40usize, std::collections::BTreeSet::from([84usize])),
                    (41usize, std::collections::BTreeSet::from([84usize])),
                    (42usize, std::collections::BTreeSet::from([84usize])),
                    (43usize, std::collections::BTreeSet::from([84usize])),
                    (44usize, std::collections::BTreeSet::from([84usize])),
                    (45usize, std::collections::BTreeSet::from([84usize])),
                    (46usize, std::collections::BTreeSet::from([84usize])),
                    (47usize, std::collections::BTreeSet::from([84usize])),
                    (49usize, std::collections::BTreeSet::from([84usize])),
                    (51usize, std::collections::BTreeSet::from([84usize])),
                    (52usize, std::collections::BTreeSet::from([84usize])),
                    (53usize, std::collections::BTreeSet::from([84usize])),
                    (54usize, std::collections::BTreeSet::from([84usize])),
                    (55usize, std::collections::BTreeSet::from([84usize])),
                    (56usize, std::collections::BTreeSet::from([84usize])),
                    (57usize, std::collections::BTreeSet::from([84usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 84usize,
                    shifted: 5usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([91usize])),
                    (25usize, std::collections::BTreeSet::from([91usize])),
                    (31usize, std::collections::BTreeSet::from([91usize])),
                    (32usize, std::collections::BTreeSet::from([91usize])),
                    (39usize, std::collections::BTreeSet::from([91usize])),
                    (40usize, std::collections::BTreeSet::from([91usize])),
                    (41usize, std::collections::BTreeSet::from([91usize])),
                    (42usize, std::collections::BTreeSet::from([91usize])),
                    (43usize, std::collections::BTreeSet::from([91usize])),
                    (44usize, std::collections::BTreeSet::from([91usize])),
                    (45usize, std::collections::BTreeSet::from([91usize])),
                    (46usize, std::collections::BTreeSet::from([91usize])),
                    (47usize, std::collections::BTreeSet::from([91usize])),
                    (49usize, std::collections::BTreeSet::from([91usize])),
                    (52usize, std::collections::BTreeSet::from([91usize])),
                    (53usize, std::collections::BTreeSet::from([91usize])),
                    (55usize, std::collections::BTreeSet::from([91usize])),
                    (56usize, std::collections::BTreeSet::from([91usize])),
                    (57usize, std::collections::BTreeSet::from([91usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 91usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (1usize, std::collections::BTreeSet::from([112usize])),
                    (5usize, std::collections::BTreeSet::from([112usize])),
                    (6usize, std::collections::BTreeSet::from([112usize])),
                    (7usize, std::collections::BTreeSet::from([112usize])),
                    (8usize, std::collections::BTreeSet::from([112usize])),
                    (9usize, std::collections::BTreeSet::from([112usize])),
                    (10usize, std::collections::BTreeSet::from([112usize])),
                    (12usize, std::collections::BTreeSet::from([112usize])),
                    (13usize, std::collections::BTreeSet::from([112usize])),
                    (14usize, std::collections::BTreeSet::from([112usize])),
                    (15usize, std::collections::BTreeSet::from([112usize])),
                    (16usize, std::collections::BTreeSet::from([112usize])),
                    (17usize, std::collections::BTreeSet::from([112usize])),
                    (18usize, std::collections::BTreeSet::from([112usize])),
                    (19usize, std::collections::BTreeSet::from([112usize])),
                    (20usize, std::collections::BTreeSet::from([112usize])),
                    (21usize, std::collections::BTreeSet::from([112usize])),
                    (22usize, std::collections::BTreeSet::from([112usize])),
                    (23usize, std::collections::BTreeSet::from([112usize])),
                    (24usize, std::collections::BTreeSet::from([30usize])),
                    (25usize, std::collections::BTreeSet::from([112usize])),
                    (27usize, std::collections::BTreeSet::from([112usize])),
                    (29usize, std::collections::BTreeSet::from([112usize])),
                    (33usize, std::collections::BTreeSet::from([112usize])),
                    (
                        34usize,
                        std::collections::BTreeSet::from([30usize, 112usize]),
                    ),
                    (35usize, std::collections::BTreeSet::from([112usize])),
                    (36usize, std::collections::BTreeSet::from([112usize])),
                    (38usize, std::collections::BTreeSet::from([112usize])),
                    (51usize, std::collections::BTreeSet::from([112usize])),
                    (57usize, std::collections::BTreeSet::from([112usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (1usize, 31usize),
                    (25usize, 32usize),
                    (27usize, 11usize),
                    (29usize, 136usize),
                    (33usize, 142usize),
                    (35usize, 146usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Args, 148usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 145usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(34usize, 131usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (26usize, std::collections::BTreeSet::from([33usize])),
                    (32usize, std::collections::BTreeSet::from([33usize])),
                    (41usize, std::collections::BTreeSet::from([33usize])),
                    (42usize, std::collections::BTreeSet::from([33usize])),
                    (43usize, std::collections::BTreeSet::from([33usize])),
                    (55usize, std::collections::BTreeSet::from([33usize])),
                    (57usize, std::collections::BTreeSet::from([33usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 132usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([31usize])),
                    (25usize, std::collections::BTreeSet::from([31usize])),
                    (26usize, std::collections::BTreeSet::from([31usize])),
                    (31usize, std::collections::BTreeSet::from([31usize])),
                    (32usize, std::collections::BTreeSet::from([31usize])),
                    (34usize, std::collections::BTreeSet::from([31usize])),
                    (39usize, std::collections::BTreeSet::from([31usize])),
                    (40usize, std::collections::BTreeSet::from([31usize])),
                    (41usize, std::collections::BTreeSet::from([31usize])),
                    (42usize, std::collections::BTreeSet::from([31usize])),
                    (43usize, std::collections::BTreeSet::from([31usize])),
                    (44usize, std::collections::BTreeSet::from([31usize])),
                    (45usize, std::collections::BTreeSet::from([31usize])),
                    (46usize, std::collections::BTreeSet::from([31usize])),
                    (47usize, std::collections::BTreeSet::from([31usize])),
                    (49usize, std::collections::BTreeSet::from([31usize])),
                    (52usize, std::collections::BTreeSet::from([31usize])),
                    (53usize, std::collections::BTreeSet::from([31usize])),
                    (55usize, std::collections::BTreeSet::from([31usize])),
                    (56usize, std::collections::BTreeSet::from([31usize])),
                    (57usize, std::collections::BTreeSet::from([31usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(26usize, 134usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 26usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([26usize])),
                    (1usize, std::collections::BTreeSet::from([26usize])),
                    (5usize, std::collections::BTreeSet::from([26usize])),
                    (6usize, std::collections::BTreeSet::from([26usize])),
                    (7usize, std::collections::BTreeSet::from([26usize])),
                    (8usize, std::collections::BTreeSet::from([26usize])),
                    (9usize, std::collections::BTreeSet::from([26usize])),
                    (10usize, std::collections::BTreeSet::from([26usize])),
                    (12usize, std::collections::BTreeSet::from([26usize])),
                    (13usize, std::collections::BTreeSet::from([26usize])),
                    (14usize, std::collections::BTreeSet::from([26usize])),
                    (15usize, std::collections::BTreeSet::from([26usize])),
                    (16usize, std::collections::BTreeSet::from([26usize])),
                    (17usize, std::collections::BTreeSet::from([26usize])),
                    (18usize, std::collections::BTreeSet::from([26usize])),
                    (19usize, std::collections::BTreeSet::from([26usize])),
                    (20usize, std::collections::BTreeSet::from([26usize])),
                    (21usize, std::collections::BTreeSet::from([26usize])),
                    (22usize, std::collections::BTreeSet::from([26usize])),
                    (23usize, std::collections::BTreeSet::from([26usize])),
                    (25usize, std::collections::BTreeSet::from([26usize])),
                    (26usize, std::collections::BTreeSet::from([26usize])),
                    (27usize, std::collections::BTreeSet::from([26usize])),
                    (28usize, std::collections::BTreeSet::from([26usize])),
                    (29usize, std::collections::BTreeSet::from([26usize])),
                    (30usize, std::collections::BTreeSet::from([26usize])),
                    (31usize, std::collections::BTreeSet::from([26usize])),
                    (32usize, std::collections::BTreeSet::from([26usize])),
                    (33usize, std::collections::BTreeSet::from([26usize])),
                    (34usize, std::collections::BTreeSet::from([26usize])),
                    (35usize, std::collections::BTreeSet::from([26usize])),
                    (36usize, std::collections::BTreeSet::from([26usize])),
                    (38usize, std::collections::BTreeSet::from([26usize])),
                    (39usize, std::collections::BTreeSet::from([26usize])),
                    (40usize, std::collections::BTreeSet::from([26usize])),
                    (41usize, std::collections::BTreeSet::from([26usize])),
                    (42usize, std::collections::BTreeSet::from([26usize])),
                    (43usize, std::collections::BTreeSet::from([26usize])),
                    (44usize, std::collections::BTreeSet::from([26usize])),
                    (45usize, std::collections::BTreeSet::from([26usize])),
                    (46usize, std::collections::BTreeSet::from([26usize])),
                    (47usize, std::collections::BTreeSet::from([26usize])),
                    (49usize, std::collections::BTreeSet::from([26usize])),
                    (51usize, std::collections::BTreeSet::from([26usize])),
                    (52usize, std::collections::BTreeSet::from([26usize])),
                    (53usize, std::collections::BTreeSet::from([26usize])),
                    (54usize, std::collections::BTreeSet::from([26usize])),
                    (55usize, std::collections::BTreeSet::from([26usize])),
                    (56usize, std::collections::BTreeSet::from([26usize])),
                    (57usize, std::collections::BTreeSet::from([26usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 26usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([32usize])),
                    (25usize, std::collections::BTreeSet::from([32usize])),
                    (26usize, std::collections::BTreeSet::from([32usize])),
                    (31usize, std::collections::BTreeSet::from([32usize])),
                    (32usize, std::collections::BTreeSet::from([32usize])),
                    (34usize, std::collections::BTreeSet::from([32usize])),
                    (39usize, std::collections::BTreeSet::from([32usize])),
                    (40usize, std::collections::BTreeSet::from([32usize])),
                    (41usize, std::collections::BTreeSet::from([32usize])),
                    (42usize, std::collections::BTreeSet::from([32usize])),
                    (43usize, std::collections::BTreeSet::from([32usize])),
                    (44usize, std::collections::BTreeSet::from([32usize])),
                    (45usize, std::collections::BTreeSet::from([32usize])),
                    (46usize, std::collections::BTreeSet::from([32usize])),
                    (47usize, std::collections::BTreeSet::from([32usize])),
                    (49usize, std::collections::BTreeSet::from([32usize])),
                    (52usize, std::collections::BTreeSet::from([32usize])),
                    (53usize, std::collections::BTreeSet::from([32usize])),
                    (55usize, std::collections::BTreeSet::from([32usize])),
                    (56usize, std::collections::BTreeSet::from([32usize])),
                    (57usize, std::collections::BTreeSet::from([32usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 140usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([5usize])),
                    (1usize, std::collections::BTreeSet::from([23usize])),
                    (5usize, std::collections::BTreeSet::from([23usize])),
                    (6usize, std::collections::BTreeSet::from([23usize])),
                    (7usize, std::collections::BTreeSet::from([23usize])),
                    (8usize, std::collections::BTreeSet::from([23usize])),
                    (9usize, std::collections::BTreeSet::from([23usize])),
                    (10usize, std::collections::BTreeSet::from([23usize])),
                    (12usize, std::collections::BTreeSet::from([23usize])),
                    (13usize, std::collections::BTreeSet::from([23usize])),
                    (14usize, std::collections::BTreeSet::from([23usize])),
                    (15usize, std::collections::BTreeSet::from([23usize])),
                    (16usize, std::collections::BTreeSet::from([23usize])),
                    (17usize, std::collections::BTreeSet::from([23usize])),
                    (18usize, std::collections::BTreeSet::from([23usize])),
                    (19usize, std::collections::BTreeSet::from([23usize])),
                    (20usize, std::collections::BTreeSet::from([23usize])),
                    (21usize, std::collections::BTreeSet::from([23usize])),
                    (22usize, std::collections::BTreeSet::from([23usize])),
                    (23usize, std::collections::BTreeSet::from([23usize])),
                    (25usize, std::collections::BTreeSet::from([5usize, 23usize])),
                    (27usize, std::collections::BTreeSet::from([23usize])),
                    (29usize, std::collections::BTreeSet::from([23usize])),
                    (31usize, std::collections::BTreeSet::from([5usize])),
                    (32usize, std::collections::BTreeSet::from([5usize])),
                    (33usize, std::collections::BTreeSet::from([23usize])),
                    (34usize, std::collections::BTreeSet::from([23usize])),
                    (35usize, std::collections::BTreeSet::from([23usize])),
                    (36usize, std::collections::BTreeSet::from([23usize])),
                    (38usize, std::collections::BTreeSet::from([23usize])),
                    (39usize, std::collections::BTreeSet::from([5usize])),
                    (40usize, std::collections::BTreeSet::from([5usize])),
                    (41usize, std::collections::BTreeSet::from([5usize])),
                    (42usize, std::collections::BTreeSet::from([5usize])),
                    (43usize, std::collections::BTreeSet::from([5usize])),
                    (44usize, std::collections::BTreeSet::from([5usize])),
                    (45usize, std::collections::BTreeSet::from([5usize])),
                    (46usize, std::collections::BTreeSet::from([5usize])),
                    (47usize, std::collections::BTreeSet::from([5usize])),
                    (49usize, std::collections::BTreeSet::from([5usize])),
                    (51usize, std::collections::BTreeSet::from([23usize])),
                    (52usize, std::collections::BTreeSet::from([5usize])),
                    (53usize, std::collections::BTreeSet::from([5usize])),
                    (55usize, std::collections::BTreeSet::from([5usize])),
                    (56usize, std::collections::BTreeSet::from([5usize])),
                    (57usize, std::collections::BTreeSet::from([5usize, 23usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (24usize, 139usize),
                    (34usize, 151usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::ExpList1, 150usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 135usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (30usize, 141usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([21usize])),
                    (1usize, std::collections::BTreeSet::from([21usize])),
                    (5usize, std::collections::BTreeSet::from([21usize])),
                    (6usize, std::collections::BTreeSet::from([21usize])),
                    (7usize, std::collections::BTreeSet::from([21usize])),
                    (8usize, std::collections::BTreeSet::from([21usize])),
                    (9usize, std::collections::BTreeSet::from([21usize])),
                    (10usize, std::collections::BTreeSet::from([21usize])),
                    (12usize, std::collections::BTreeSet::from([21usize])),
                    (13usize, std::collections::BTreeSet::from([21usize])),
                    (14usize, std::collections::BTreeSet::from([21usize])),
                    (15usize, std::collections::BTreeSet::from([21usize])),
                    (16usize, std::collections::BTreeSet::from([21usize])),
                    (17usize, std::collections::BTreeSet::from([21usize])),
                    (18usize, std::collections::BTreeSet::from([21usize])),
                    (19usize, std::collections::BTreeSet::from([21usize])),
                    (20usize, std::collections::BTreeSet::from([21usize])),
                    (21usize, std::collections::BTreeSet::from([21usize])),
                    (22usize, std::collections::BTreeSet::from([21usize])),
                    (23usize, std::collections::BTreeSet::from([21usize])),
                    (24usize, std::collections::BTreeSet::from([21usize])),
                    (25usize, std::collections::BTreeSet::from([21usize])),
                    (26usize, std::collections::BTreeSet::from([21usize])),
                    (27usize, std::collections::BTreeSet::from([21usize])),
                    (28usize, std::collections::BTreeSet::from([21usize])),
                    (29usize, std::collections::BTreeSet::from([21usize])),
                    (30usize, std::collections::BTreeSet::from([21usize])),
                    (31usize, std::collections::BTreeSet::from([21usize])),
                    (32usize, std::collections::BTreeSet::from([21usize])),
                    (33usize, std::collections::BTreeSet::from([21usize])),
                    (34usize, std::collections::BTreeSet::from([21usize])),
                    (35usize, std::collections::BTreeSet::from([21usize])),
                    (36usize, std::collections::BTreeSet::from([21usize])),
                    (38usize, std::collections::BTreeSet::from([21usize])),
                    (39usize, std::collections::BTreeSet::from([21usize])),
                    (40usize, std::collections::BTreeSet::from([21usize])),
                    (41usize, std::collections::BTreeSet::from([21usize])),
                    (42usize, std::collections::BTreeSet::from([21usize])),
                    (43usize, std::collections::BTreeSet::from([21usize])),
                    (44usize, std::collections::BTreeSet::from([21usize])),
                    (45usize, std::collections::BTreeSet::from([21usize])),
                    (46usize, std::collections::BTreeSet::from([21usize])),
                    (47usize, std::collections::BTreeSet::from([21usize])),
                    (49usize, std::collections::BTreeSet::from([21usize])),
                    (51usize, std::collections::BTreeSet::from([21usize])),
                    (52usize, std::collections::BTreeSet::from([21usize])),
                    (53usize, std::collections::BTreeSet::from([21usize])),
                    (54usize, std::collections::BTreeSet::from([21usize])),
                    (55usize, std::collections::BTreeSet::from([21usize])),
                    (56usize, std::collections::BTreeSet::from([21usize])),
                    (57usize, std::collections::BTreeSet::from([21usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 21usize,
                    shifted: 4usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 143usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 25usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (1usize, 31usize),
                    (25usize, 32usize),
                    (27usize, 11usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Args, 144usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 145usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 26usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 27usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 28usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([25usize])),
                    (1usize, std::collections::BTreeSet::from([25usize])),
                    (5usize, std::collections::BTreeSet::from([25usize])),
                    (6usize, std::collections::BTreeSet::from([25usize])),
                    (7usize, std::collections::BTreeSet::from([25usize])),
                    (8usize, std::collections::BTreeSet::from([25usize])),
                    (9usize, std::collections::BTreeSet::from([25usize])),
                    (10usize, std::collections::BTreeSet::from([25usize])),
                    (12usize, std::collections::BTreeSet::from([25usize])),
                    (13usize, std::collections::BTreeSet::from([25usize])),
                    (14usize, std::collections::BTreeSet::from([25usize])),
                    (15usize, std::collections::BTreeSet::from([25usize])),
                    (16usize, std::collections::BTreeSet::from([25usize])),
                    (17usize, std::collections::BTreeSet::from([25usize])),
                    (18usize, std::collections::BTreeSet::from([25usize])),
                    (19usize, std::collections::BTreeSet::from([25usize])),
                    (20usize, std::collections::BTreeSet::from([25usize])),
                    (21usize, std::collections::BTreeSet::from([25usize])),
                    (22usize, std::collections::BTreeSet::from([25usize])),
                    (23usize, std::collections::BTreeSet::from([25usize])),
                    (25usize, std::collections::BTreeSet::from([25usize])),
                    (26usize, std::collections::BTreeSet::from([25usize])),
                    (27usize, std::collections::BTreeSet::from([25usize])),
                    (28usize, std::collections::BTreeSet::from([25usize])),
                    (29usize, std::collections::BTreeSet::from([25usize])),
                    (30usize, std::collections::BTreeSet::from([25usize])),
                    (31usize, std::collections::BTreeSet::from([25usize])),
                    (32usize, std::collections::BTreeSet::from([25usize])),
                    (33usize, std::collections::BTreeSet::from([25usize])),
                    (34usize, std::collections::BTreeSet::from([25usize])),
                    (35usize, std::collections::BTreeSet::from([25usize])),
                    (36usize, std::collections::BTreeSet::from([25usize])),
                    (38usize, std::collections::BTreeSet::from([25usize])),
                    (39usize, std::collections::BTreeSet::from([25usize])),
                    (40usize, std::collections::BTreeSet::from([25usize])),
                    (41usize, std::collections::BTreeSet::from([25usize])),
                    (42usize, std::collections::BTreeSet::from([25usize])),
                    (43usize, std::collections::BTreeSet::from([25usize])),
                    (44usize, std::collections::BTreeSet::from([25usize])),
                    (45usize, std::collections::BTreeSet::from([25usize])),
                    (46usize, std::collections::BTreeSet::from([25usize])),
                    (47usize, std::collections::BTreeSet::from([25usize])),
                    (49usize, std::collections::BTreeSet::from([25usize])),
                    (51usize, std::collections::BTreeSet::from([25usize])),
                    (52usize, std::collections::BTreeSet::from([25usize])),
                    (53usize, std::collections::BTreeSet::from([25usize])),
                    (54usize, std::collections::BTreeSet::from([25usize])),
                    (55usize, std::collections::BTreeSet::from([25usize])),
                    (56usize, std::collections::BTreeSet::from([25usize])),
                    (57usize, std::collections::BTreeSet::from([25usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 25usize,
                    shifted: 4usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([27usize])),
                    (1usize, std::collections::BTreeSet::from([27usize])),
                    (5usize, std::collections::BTreeSet::from([27usize])),
                    (6usize, std::collections::BTreeSet::from([27usize])),
                    (7usize, std::collections::BTreeSet::from([27usize])),
                    (8usize, std::collections::BTreeSet::from([27usize])),
                    (9usize, std::collections::BTreeSet::from([27usize])),
                    (10usize, std::collections::BTreeSet::from([27usize])),
                    (12usize, std::collections::BTreeSet::from([27usize])),
                    (13usize, std::collections::BTreeSet::from([27usize])),
                    (14usize, std::collections::BTreeSet::from([27usize])),
                    (15usize, std::collections::BTreeSet::from([27usize])),
                    (16usize, std::collections::BTreeSet::from([27usize])),
                    (17usize, std::collections::BTreeSet::from([27usize])),
                    (18usize, std::collections::BTreeSet::from([27usize])),
                    (19usize, std::collections::BTreeSet::from([27usize])),
                    (20usize, std::collections::BTreeSet::from([27usize])),
                    (21usize, std::collections::BTreeSet::from([27usize])),
                    (22usize, std::collections::BTreeSet::from([27usize])),
                    (23usize, std::collections::BTreeSet::from([27usize])),
                    (25usize, std::collections::BTreeSet::from([27usize])),
                    (26usize, std::collections::BTreeSet::from([27usize])),
                    (27usize, std::collections::BTreeSet::from([27usize])),
                    (28usize, std::collections::BTreeSet::from([27usize])),
                    (29usize, std::collections::BTreeSet::from([27usize])),
                    (30usize, std::collections::BTreeSet::from([27usize])),
                    (31usize, std::collections::BTreeSet::from([27usize])),
                    (32usize, std::collections::BTreeSet::from([27usize])),
                    (33usize, std::collections::BTreeSet::from([27usize])),
                    (34usize, std::collections::BTreeSet::from([27usize])),
                    (35usize, std::collections::BTreeSet::from([27usize])),
                    (36usize, std::collections::BTreeSet::from([27usize])),
                    (38usize, std::collections::BTreeSet::from([27usize])),
                    (39usize, std::collections::BTreeSet::from([27usize])),
                    (40usize, std::collections::BTreeSet::from([27usize])),
                    (41usize, std::collections::BTreeSet::from([27usize])),
                    (42usize, std::collections::BTreeSet::from([27usize])),
                    (43usize, std::collections::BTreeSet::from([27usize])),
                    (44usize, std::collections::BTreeSet::from([27usize])),
                    (45usize, std::collections::BTreeSet::from([27usize])),
                    (46usize, std::collections::BTreeSet::from([27usize])),
                    (47usize, std::collections::BTreeSet::from([27usize])),
                    (49usize, std::collections::BTreeSet::from([27usize])),
                    (51usize, std::collections::BTreeSet::from([27usize])),
                    (52usize, std::collections::BTreeSet::from([27usize])),
                    (53usize, std::collections::BTreeSet::from([27usize])),
                    (54usize, std::collections::BTreeSet::from([27usize])),
                    (55usize, std::collections::BTreeSet::from([27usize])),
                    (56usize, std::collections::BTreeSet::from([27usize])),
                    (57usize, std::collections::BTreeSet::from([27usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 27usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 147usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 22usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([22usize])),
                    (1usize, std::collections::BTreeSet::from([22usize])),
                    (5usize, std::collections::BTreeSet::from([22usize])),
                    (6usize, std::collections::BTreeSet::from([22usize])),
                    (7usize, std::collections::BTreeSet::from([22usize])),
                    (8usize, std::collections::BTreeSet::from([22usize])),
                    (9usize, std::collections::BTreeSet::from([22usize])),
                    (10usize, std::collections::BTreeSet::from([22usize])),
                    (12usize, std::collections::BTreeSet::from([22usize])),
                    (13usize, std::collections::BTreeSet::from([22usize])),
                    (14usize, std::collections::BTreeSet::from([22usize])),
                    (15usize, std::collections::BTreeSet::from([22usize])),
                    (16usize, std::collections::BTreeSet::from([22usize])),
                    (17usize, std::collections::BTreeSet::from([22usize])),
                    (18usize, std::collections::BTreeSet::from([22usize])),
                    (19usize, std::collections::BTreeSet::from([22usize])),
                    (20usize, std::collections::BTreeSet::from([22usize])),
                    (21usize, std::collections::BTreeSet::from([22usize])),
                    (22usize, std::collections::BTreeSet::from([22usize])),
                    (23usize, std::collections::BTreeSet::from([22usize])),
                    (24usize, std::collections::BTreeSet::from([22usize])),
                    (25usize, std::collections::BTreeSet::from([22usize])),
                    (26usize, std::collections::BTreeSet::from([22usize])),
                    (27usize, std::collections::BTreeSet::from([22usize])),
                    (28usize, std::collections::BTreeSet::from([22usize])),
                    (29usize, std::collections::BTreeSet::from([22usize])),
                    (30usize, std::collections::BTreeSet::from([22usize])),
                    (31usize, std::collections::BTreeSet::from([22usize])),
                    (32usize, std::collections::BTreeSet::from([22usize])),
                    (33usize, std::collections::BTreeSet::from([22usize])),
                    (34usize, std::collections::BTreeSet::from([22usize])),
                    (35usize, std::collections::BTreeSet::from([22usize])),
                    (36usize, std::collections::BTreeSet::from([22usize])),
                    (38usize, std::collections::BTreeSet::from([22usize])),
                    (39usize, std::collections::BTreeSet::from([22usize])),
                    (40usize, std::collections::BTreeSet::from([22usize])),
                    (41usize, std::collections::BTreeSet::from([22usize])),
                    (42usize, std::collections::BTreeSet::from([22usize])),
                    (43usize, std::collections::BTreeSet::from([22usize])),
                    (44usize, std::collections::BTreeSet::from([22usize])),
                    (45usize, std::collections::BTreeSet::from([22usize])),
                    (46usize, std::collections::BTreeSet::from([22usize])),
                    (47usize, std::collections::BTreeSet::from([22usize])),
                    (49usize, std::collections::BTreeSet::from([22usize])),
                    (51usize, std::collections::BTreeSet::from([22usize])),
                    (52usize, std::collections::BTreeSet::from([22usize])),
                    (53usize, std::collections::BTreeSet::from([22usize])),
                    (54usize, std::collections::BTreeSet::from([22usize])),
                    (55usize, std::collections::BTreeSet::from([22usize])),
                    (56usize, std::collections::BTreeSet::from([22usize])),
                    (57usize, std::collections::BTreeSet::from([22usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 22usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([24usize])),
                    (1usize, std::collections::BTreeSet::from([24usize])),
                    (5usize, std::collections::BTreeSet::from([24usize])),
                    (6usize, std::collections::BTreeSet::from([24usize])),
                    (7usize, std::collections::BTreeSet::from([24usize])),
                    (8usize, std::collections::BTreeSet::from([24usize])),
                    (9usize, std::collections::BTreeSet::from([24usize])),
                    (10usize, std::collections::BTreeSet::from([24usize])),
                    (12usize, std::collections::BTreeSet::from([24usize])),
                    (13usize, std::collections::BTreeSet::from([24usize])),
                    (14usize, std::collections::BTreeSet::from([24usize])),
                    (15usize, std::collections::BTreeSet::from([24usize])),
                    (16usize, std::collections::BTreeSet::from([24usize])),
                    (17usize, std::collections::BTreeSet::from([24usize])),
                    (18usize, std::collections::BTreeSet::from([24usize])),
                    (19usize, std::collections::BTreeSet::from([24usize])),
                    (20usize, std::collections::BTreeSet::from([24usize])),
                    (21usize, std::collections::BTreeSet::from([24usize])),
                    (22usize, std::collections::BTreeSet::from([24usize])),
                    (23usize, std::collections::BTreeSet::from([24usize])),
                    (25usize, std::collections::BTreeSet::from([24usize])),
                    (26usize, std::collections::BTreeSet::from([24usize])),
                    (27usize, std::collections::BTreeSet::from([24usize])),
                    (28usize, std::collections::BTreeSet::from([24usize])),
                    (29usize, std::collections::BTreeSet::from([24usize])),
                    (30usize, std::collections::BTreeSet::from([24usize])),
                    (31usize, std::collections::BTreeSet::from([24usize])),
                    (32usize, std::collections::BTreeSet::from([24usize])),
                    (33usize, std::collections::BTreeSet::from([24usize])),
                    (34usize, std::collections::BTreeSet::from([24usize])),
                    (35usize, std::collections::BTreeSet::from([24usize])),
                    (36usize, std::collections::BTreeSet::from([24usize])),
                    (38usize, std::collections::BTreeSet::from([24usize])),
                    (39usize, std::collections::BTreeSet::from([24usize])),
                    (40usize, std::collections::BTreeSet::from([24usize])),
                    (41usize, std::collections::BTreeSet::from([24usize])),
                    (42usize, std::collections::BTreeSet::from([24usize])),
                    (43usize, std::collections::BTreeSet::from([24usize])),
                    (44usize, std::collections::BTreeSet::from([24usize])),
                    (45usize, std::collections::BTreeSet::from([24usize])),
                    (46usize, std::collections::BTreeSet::from([24usize])),
                    (47usize, std::collections::BTreeSet::from([24usize])),
                    (49usize, std::collections::BTreeSet::from([24usize])),
                    (51usize, std::collections::BTreeSet::from([24usize])),
                    (52usize, std::collections::BTreeSet::from([24usize])),
                    (53usize, std::collections::BTreeSet::from([24usize])),
                    (54usize, std::collections::BTreeSet::from([24usize])),
                    (55usize, std::collections::BTreeSet::from([24usize])),
                    (56usize, std::collections::BTreeSet::from([24usize])),
                    (57usize, std::collections::BTreeSet::from([24usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 24usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([49usize])),
                    (5usize, std::collections::BTreeSet::from([49usize])),
                    (6usize, std::collections::BTreeSet::from([49usize])),
                    (7usize, std::collections::BTreeSet::from([49usize])),
                    (8usize, std::collections::BTreeSet::from([49usize])),
                    (9usize, std::collections::BTreeSet::from([49usize])),
                    (10usize, std::collections::BTreeSet::from([49usize])),
                    (12usize, std::collections::BTreeSet::from([49usize])),
                    (13usize, std::collections::BTreeSet::from([49usize])),
                    (14usize, std::collections::BTreeSet::from([49usize])),
                    (15usize, std::collections::BTreeSet::from([49usize])),
                    (16usize, std::collections::BTreeSet::from([49usize])),
                    (17usize, std::collections::BTreeSet::from([49usize])),
                    (18usize, std::collections::BTreeSet::from([49usize])),
                    (19usize, std::collections::BTreeSet::from([49usize])),
                    (20usize, std::collections::BTreeSet::from([49usize])),
                    (21usize, std::collections::BTreeSet::from([49usize])),
                    (22usize, std::collections::BTreeSet::from([49usize])),
                    (23usize, std::collections::BTreeSet::from([49usize])),
                    (25usize, std::collections::BTreeSet::from([49usize])),
                    (26usize, std::collections::BTreeSet::from([49usize])),
                    (28usize, std::collections::BTreeSet::from([49usize])),
                    (30usize, std::collections::BTreeSet::from([49usize])),
                    (31usize, std::collections::BTreeSet::from([49usize])),
                    (32usize, std::collections::BTreeSet::from([49usize])),
                    (34usize, std::collections::BTreeSet::from([49usize])),
                    (36usize, std::collections::BTreeSet::from([49usize])),
                    (38usize, std::collections::BTreeSet::from([49usize])),
                    (39usize, std::collections::BTreeSet::from([49usize])),
                    (40usize, std::collections::BTreeSet::from([49usize])),
                    (41usize, std::collections::BTreeSet::from([49usize])),
                    (42usize, std::collections::BTreeSet::from([49usize])),
                    (43usize, std::collections::BTreeSet::from([49usize])),
                    (44usize, std::collections::BTreeSet::from([49usize])),
                    (45usize, std::collections::BTreeSet::from([49usize])),
                    (46usize, std::collections::BTreeSet::from([49usize])),
                    (47usize, std::collections::BTreeSet::from([49usize])),
                    (49usize, std::collections::BTreeSet::from([49usize])),
                    (51usize, std::collections::BTreeSet::from([49usize])),
                    (52usize, std::collections::BTreeSet::from([49usize])),
                    (53usize, std::collections::BTreeSet::from([49usize])),
                    (54usize, std::collections::BTreeSet::from([49usize])),
                    (55usize, std::collections::BTreeSet::from([49usize])),
                    (56usize, std::collections::BTreeSet::from([49usize])),
                    (57usize, std::collections::BTreeSet::from([49usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 49usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(34usize, 131usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([4usize])),
                    (25usize, std::collections::BTreeSet::from([4usize])),
                    (31usize, std::collections::BTreeSet::from([4usize])),
                    (32usize, std::collections::BTreeSet::from([4usize])),
                    (39usize, std::collections::BTreeSet::from([4usize])),
                    (40usize, std::collections::BTreeSet::from([4usize])),
                    (41usize, std::collections::BTreeSet::from([4usize])),
                    (42usize, std::collections::BTreeSet::from([4usize])),
                    (43usize, std::collections::BTreeSet::from([4usize])),
                    (44usize, std::collections::BTreeSet::from([4usize])),
                    (45usize, std::collections::BTreeSet::from([4usize])),
                    (46usize, std::collections::BTreeSet::from([4usize])),
                    (47usize, std::collections::BTreeSet::from([4usize])),
                    (49usize, std::collections::BTreeSet::from([4usize])),
                    (52usize, std::collections::BTreeSet::from([4usize])),
                    (53usize, std::collections::BTreeSet::from([4usize])),
                    (55usize, std::collections::BTreeSet::from([4usize])),
                    (56usize, std::collections::BTreeSet::from([4usize])),
                    (57usize, std::collections::BTreeSet::from([4usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 152usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (1usize, std::collections::BTreeSet::from([112usize])),
                    (24usize, std::collections::BTreeSet::from([29usize])),
                    (25usize, std::collections::BTreeSet::from([112usize])),
                    (27usize, std::collections::BTreeSet::from([112usize])),
                    (29usize, std::collections::BTreeSet::from([112usize])),
                    (33usize, std::collections::BTreeSet::from([112usize])),
                    (34usize, std::collections::BTreeSet::from([29usize])),
                    (35usize, std::collections::BTreeSet::from([112usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Statement, 154usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([114usize])),
                    (42usize, std::collections::BTreeSet::from([114usize])),
                    (43usize, std::collections::BTreeSet::from([114usize])),
                    (53usize, std::collections::BTreeSet::from([114usize])),
                    (55usize, std::collections::BTreeSet::from([114usize])),
                    (57usize, std::collections::BTreeSet::from([114usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([92usize])),
                    (25usize, std::collections::BTreeSet::from([92usize])),
                    (31usize, std::collections::BTreeSet::from([92usize])),
                    (32usize, std::collections::BTreeSet::from([92usize])),
                    (39usize, std::collections::BTreeSet::from([92usize])),
                    (40usize, std::collections::BTreeSet::from([92usize])),
                    (41usize, std::collections::BTreeSet::from([92usize])),
                    (42usize, std::collections::BTreeSet::from([92usize])),
                    (43usize, std::collections::BTreeSet::from([92usize])),
                    (44usize, std::collections::BTreeSet::from([92usize])),
                    (45usize, std::collections::BTreeSet::from([92usize])),
                    (46usize, std::collections::BTreeSet::from([92usize])),
                    (47usize, std::collections::BTreeSet::from([92usize])),
                    (49usize, std::collections::BTreeSet::from([92usize])),
                    (52usize, std::collections::BTreeSet::from([92usize])),
                    (53usize, std::collections::BTreeSet::from([92usize])),
                    (55usize, std::collections::BTreeSet::from([92usize])),
                    (56usize, std::collections::BTreeSet::from([92usize])),
                    (57usize, std::collections::BTreeSet::from([92usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 92usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(53usize, 156usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::ReturnStatement, 165usize),
                    (
                        ChunkOrExpressionsNonTerminals::_ReturnStatementQuestion31,
                        166usize,
                    ),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([95usize])),
                    (42usize, std::collections::BTreeSet::from([95usize])),
                    (43usize, std::collections::BTreeSet::from([95usize])),
                    (55usize, std::collections::BTreeSet::from([95usize])),
                    (57usize, std::collections::BTreeSet::from([95usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 94usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 95usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::ExpList1, 130usize),
                    (ChunkOrExpressionsNonTerminals::ExpList0, 162usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 135usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (32usize, std::collections::BTreeSet::from([34usize])),
                    (41usize, std::collections::BTreeSet::from([34usize])),
                    (42usize, std::collections::BTreeSet::from([34usize])),
                    (43usize, std::collections::BTreeSet::from([34usize])),
                    (55usize, std::collections::BTreeSet::from([34usize])),
                    (57usize, std::collections::BTreeSet::from([34usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 33usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 34usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([83usize])),
                    (5usize, std::collections::BTreeSet::from([83usize])),
                    (6usize, std::collections::BTreeSet::from([83usize])),
                    (7usize, std::collections::BTreeSet::from([83usize])),
                    (8usize, std::collections::BTreeSet::from([83usize])),
                    (9usize, std::collections::BTreeSet::from([83usize])),
                    (10usize, std::collections::BTreeSet::from([83usize])),
                    (12usize, std::collections::BTreeSet::from([83usize])),
                    (13usize, std::collections::BTreeSet::from([83usize])),
                    (14usize, std::collections::BTreeSet::from([83usize])),
                    (15usize, std::collections::BTreeSet::from([83usize])),
                    (16usize, std::collections::BTreeSet::from([83usize])),
                    (17usize, std::collections::BTreeSet::from([83usize])),
                    (18usize, std::collections::BTreeSet::from([83usize])),
                    (19usize, std::collections::BTreeSet::from([83usize])),
                    (20usize, std::collections::BTreeSet::from([83usize])),
                    (21usize, std::collections::BTreeSet::from([83usize])),
                    (22usize, std::collections::BTreeSet::from([83usize])),
                    (23usize, std::collections::BTreeSet::from([83usize])),
                    (25usize, std::collections::BTreeSet::from([83usize])),
                    (26usize, std::collections::BTreeSet::from([83usize])),
                    (28usize, std::collections::BTreeSet::from([83usize])),
                    (30usize, std::collections::BTreeSet::from([83usize])),
                    (31usize, std::collections::BTreeSet::from([83usize])),
                    (32usize, std::collections::BTreeSet::from([83usize])),
                    (34usize, std::collections::BTreeSet::from([83usize])),
                    (36usize, std::collections::BTreeSet::from([83usize])),
                    (38usize, std::collections::BTreeSet::from([83usize])),
                    (39usize, std::collections::BTreeSet::from([83usize])),
                    (40usize, std::collections::BTreeSet::from([83usize])),
                    (41usize, std::collections::BTreeSet::from([83usize])),
                    (42usize, std::collections::BTreeSet::from([83usize])),
                    (43usize, std::collections::BTreeSet::from([83usize])),
                    (44usize, std::collections::BTreeSet::from([83usize])),
                    (45usize, std::collections::BTreeSet::from([83usize])),
                    (46usize, std::collections::BTreeSet::from([83usize])),
                    (47usize, std::collections::BTreeSet::from([83usize])),
                    (49usize, std::collections::BTreeSet::from([83usize])),
                    (51usize, std::collections::BTreeSet::from([83usize])),
                    (52usize, std::collections::BTreeSet::from([83usize])),
                    (53usize, std::collections::BTreeSet::from([83usize])),
                    (54usize, std::collections::BTreeSet::from([83usize])),
                    (55usize, std::collections::BTreeSet::from([83usize])),
                    (56usize, std::collections::BTreeSet::from([83usize])),
                    (57usize, std::collections::BTreeSet::from([83usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 83usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([53usize])),
                    (5usize, std::collections::BTreeSet::from([53usize])),
                    (6usize, std::collections::BTreeSet::from([53usize])),
                    (7usize, std::collections::BTreeSet::from([53usize])),
                    (8usize, std::collections::BTreeSet::from([53usize])),
                    (9usize, std::collections::BTreeSet::from([53usize])),
                    (10usize, std::collections::BTreeSet::from([53usize])),
                    (12usize, std::collections::BTreeSet::from([53usize])),
                    (13usize, std::collections::BTreeSet::from([53usize])),
                    (14usize, std::collections::BTreeSet::from([53usize])),
                    (15usize, std::collections::BTreeSet::from([53usize])),
                    (16usize, std::collections::BTreeSet::from([53usize])),
                    (17usize, std::collections::BTreeSet::from([53usize])),
                    (18usize, std::collections::BTreeSet::from([53usize])),
                    (19usize, std::collections::BTreeSet::from([53usize])),
                    (20usize, std::collections::BTreeSet::from([53usize])),
                    (21usize, std::collections::BTreeSet::from([53usize])),
                    (22usize, std::collections::BTreeSet::from([53usize])),
                    (23usize, std::collections::BTreeSet::from([53usize])),
                    (25usize, std::collections::BTreeSet::from([53usize])),
                    (26usize, std::collections::BTreeSet::from([53usize])),
                    (28usize, std::collections::BTreeSet::from([53usize])),
                    (30usize, std::collections::BTreeSet::from([53usize])),
                    (31usize, std::collections::BTreeSet::from([53usize])),
                    (32usize, std::collections::BTreeSet::from([53usize])),
                    (34usize, std::collections::BTreeSet::from([53usize])),
                    (36usize, std::collections::BTreeSet::from([53usize])),
                    (38usize, std::collections::BTreeSet::from([53usize])),
                    (39usize, std::collections::BTreeSet::from([53usize])),
                    (40usize, std::collections::BTreeSet::from([53usize])),
                    (41usize, std::collections::BTreeSet::from([53usize])),
                    (42usize, std::collections::BTreeSet::from([53usize])),
                    (43usize, std::collections::BTreeSet::from([53usize])),
                    (44usize, std::collections::BTreeSet::from([53usize])),
                    (45usize, std::collections::BTreeSet::from([53usize])),
                    (46usize, std::collections::BTreeSet::from([53usize])),
                    (47usize, std::collections::BTreeSet::from([53usize])),
                    (49usize, std::collections::BTreeSet::from([53usize])),
                    (51usize, std::collections::BTreeSet::from([53usize])),
                    (52usize, std::collections::BTreeSet::from([53usize])),
                    (53usize, std::collections::BTreeSet::from([53usize])),
                    (54usize, std::collections::BTreeSet::from([53usize])),
                    (55usize, std::collections::BTreeSet::from([53usize])),
                    (56usize, std::collections::BTreeSet::from([53usize])),
                    (57usize, std::collections::BTreeSet::from([53usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 53usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([50usize])),
                    (5usize, std::collections::BTreeSet::from([50usize])),
                    (6usize, std::collections::BTreeSet::from([50usize])),
                    (7usize, std::collections::BTreeSet::from([50usize])),
                    (8usize, std::collections::BTreeSet::from([50usize])),
                    (9usize, std::collections::BTreeSet::from([50usize])),
                    (10usize, std::collections::BTreeSet::from([50usize])),
                    (12usize, std::collections::BTreeSet::from([50usize])),
                    (13usize, std::collections::BTreeSet::from([50usize])),
                    (14usize, std::collections::BTreeSet::from([50usize])),
                    (15usize, std::collections::BTreeSet::from([50usize])),
                    (16usize, std::collections::BTreeSet::from([50usize])),
                    (17usize, std::collections::BTreeSet::from([50usize])),
                    (18usize, std::collections::BTreeSet::from([50usize])),
                    (19usize, std::collections::BTreeSet::from([50usize])),
                    (20usize, std::collections::BTreeSet::from([50usize])),
                    (21usize, std::collections::BTreeSet::from([50usize])),
                    (22usize, std::collections::BTreeSet::from([50usize])),
                    (23usize, std::collections::BTreeSet::from([50usize])),
                    (25usize, std::collections::BTreeSet::from([50usize])),
                    (26usize, std::collections::BTreeSet::from([50usize])),
                    (28usize, std::collections::BTreeSet::from([50usize])),
                    (30usize, std::collections::BTreeSet::from([50usize])),
                    (31usize, std::collections::BTreeSet::from([50usize])),
                    (32usize, std::collections::BTreeSet::from([50usize])),
                    (34usize, std::collections::BTreeSet::from([50usize])),
                    (36usize, std::collections::BTreeSet::from([50usize])),
                    (38usize, std::collections::BTreeSet::from([50usize])),
                    (39usize, std::collections::BTreeSet::from([50usize])),
                    (40usize, std::collections::BTreeSet::from([50usize])),
                    (41usize, std::collections::BTreeSet::from([50usize])),
                    (42usize, std::collections::BTreeSet::from([50usize])),
                    (43usize, std::collections::BTreeSet::from([50usize])),
                    (44usize, std::collections::BTreeSet::from([50usize])),
                    (45usize, std::collections::BTreeSet::from([50usize])),
                    (46usize, std::collections::BTreeSet::from([50usize])),
                    (47usize, std::collections::BTreeSet::from([50usize])),
                    (49usize, std::collections::BTreeSet::from([50usize])),
                    (51usize, std::collections::BTreeSet::from([50usize])),
                    (52usize, std::collections::BTreeSet::from([50usize])),
                    (53usize, std::collections::BTreeSet::from([50usize])),
                    (54usize, std::collections::BTreeSet::from([50usize])),
                    (55usize, std::collections::BTreeSet::from([50usize])),
                    (56usize, std::collections::BTreeSet::from([50usize])),
                    (57usize, std::collections::BTreeSet::from([50usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 50usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([51usize])),
                    (5usize, std::collections::BTreeSet::from([51usize])),
                    (6usize, std::collections::BTreeSet::from([51usize])),
                    (7usize, std::collections::BTreeSet::from([51usize])),
                    (8usize, std::collections::BTreeSet::from([51usize])),
                    (9usize, std::collections::BTreeSet::from([51usize])),
                    (10usize, std::collections::BTreeSet::from([51usize])),
                    (12usize, std::collections::BTreeSet::from([51usize])),
                    (13usize, std::collections::BTreeSet::from([51usize])),
                    (14usize, std::collections::BTreeSet::from([51usize])),
                    (15usize, std::collections::BTreeSet::from([51usize])),
                    (16usize, std::collections::BTreeSet::from([51usize])),
                    (17usize, std::collections::BTreeSet::from([51usize])),
                    (18usize, std::collections::BTreeSet::from([51usize])),
                    (19usize, std::collections::BTreeSet::from([51usize])),
                    (20usize, std::collections::BTreeSet::from([51usize])),
                    (21usize, std::collections::BTreeSet::from([51usize])),
                    (22usize, std::collections::BTreeSet::from([51usize])),
                    (23usize, std::collections::BTreeSet::from([51usize])),
                    (25usize, std::collections::BTreeSet::from([51usize])),
                    (26usize, std::collections::BTreeSet::from([51usize])),
                    (28usize, std::collections::BTreeSet::from([51usize])),
                    (30usize, std::collections::BTreeSet::from([51usize])),
                    (31usize, std::collections::BTreeSet::from([51usize])),
                    (32usize, std::collections::BTreeSet::from([51usize])),
                    (34usize, std::collections::BTreeSet::from([51usize])),
                    (36usize, std::collections::BTreeSet::from([51usize])),
                    (38usize, std::collections::BTreeSet::from([51usize])),
                    (39usize, std::collections::BTreeSet::from([51usize])),
                    (40usize, std::collections::BTreeSet::from([51usize])),
                    (41usize, std::collections::BTreeSet::from([51usize])),
                    (42usize, std::collections::BTreeSet::from([51usize])),
                    (43usize, std::collections::BTreeSet::from([51usize])),
                    (44usize, std::collections::BTreeSet::from([51usize])),
                    (45usize, std::collections::BTreeSet::from([51usize])),
                    (46usize, std::collections::BTreeSet::from([51usize])),
                    (47usize, std::collections::BTreeSet::from([51usize])),
                    (49usize, std::collections::BTreeSet::from([51usize])),
                    (51usize, std::collections::BTreeSet::from([51usize])),
                    (52usize, std::collections::BTreeSet::from([51usize])),
                    (53usize, std::collections::BTreeSet::from([51usize])),
                    (54usize, std::collections::BTreeSet::from([51usize])),
                    (55usize, std::collections::BTreeSet::from([51usize])),
                    (56usize, std::collections::BTreeSet::from([51usize])),
                    (57usize, std::collections::BTreeSet::from([51usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 51usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([52usize])),
                    (5usize, std::collections::BTreeSet::from([52usize])),
                    (6usize, std::collections::BTreeSet::from([52usize])),
                    (7usize, std::collections::BTreeSet::from([52usize])),
                    (8usize, std::collections::BTreeSet::from([52usize])),
                    (9usize, std::collections::BTreeSet::from([52usize])),
                    (10usize, std::collections::BTreeSet::from([52usize])),
                    (12usize, std::collections::BTreeSet::from([52usize])),
                    (13usize, std::collections::BTreeSet::from([52usize])),
                    (14usize, std::collections::BTreeSet::from([52usize])),
                    (15usize, std::collections::BTreeSet::from([52usize])),
                    (16usize, std::collections::BTreeSet::from([52usize])),
                    (17usize, std::collections::BTreeSet::from([52usize])),
                    (18usize, std::collections::BTreeSet::from([52usize])),
                    (19usize, std::collections::BTreeSet::from([52usize])),
                    (20usize, std::collections::BTreeSet::from([52usize])),
                    (21usize, std::collections::BTreeSet::from([52usize])),
                    (22usize, std::collections::BTreeSet::from([52usize])),
                    (23usize, std::collections::BTreeSet::from([52usize])),
                    (25usize, std::collections::BTreeSet::from([52usize])),
                    (26usize, std::collections::BTreeSet::from([52usize])),
                    (28usize, std::collections::BTreeSet::from([52usize])),
                    (30usize, std::collections::BTreeSet::from([52usize])),
                    (31usize, std::collections::BTreeSet::from([52usize])),
                    (32usize, std::collections::BTreeSet::from([52usize])),
                    (34usize, std::collections::BTreeSet::from([52usize])),
                    (36usize, std::collections::BTreeSet::from([52usize])),
                    (38usize, std::collections::BTreeSet::from([52usize])),
                    (39usize, std::collections::BTreeSet::from([52usize])),
                    (40usize, std::collections::BTreeSet::from([52usize])),
                    (41usize, std::collections::BTreeSet::from([52usize])),
                    (42usize, std::collections::BTreeSet::from([52usize])),
                    (43usize, std::collections::BTreeSet::from([52usize])),
                    (44usize, std::collections::BTreeSet::from([52usize])),
                    (45usize, std::collections::BTreeSet::from([52usize])),
                    (46usize, std::collections::BTreeSet::from([52usize])),
                    (47usize, std::collections::BTreeSet::from([52usize])),
                    (49usize, std::collections::BTreeSet::from([52usize])),
                    (51usize, std::collections::BTreeSet::from([52usize])),
                    (52usize, std::collections::BTreeSet::from([52usize])),
                    (53usize, std::collections::BTreeSet::from([52usize])),
                    (54usize, std::collections::BTreeSet::from([52usize])),
                    (55usize, std::collections::BTreeSet::from([52usize])),
                    (56usize, std::collections::BTreeSet::from([52usize])),
                    (57usize, std::collections::BTreeSet::from([52usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 52usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(32usize, 163usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::_semicolonQuestion40,
                    164usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([106usize])),
                    (42usize, std::collections::BTreeSet::from([106usize])),
                    (43usize, std::collections::BTreeSet::from([106usize])),
                    (55usize, std::collections::BTreeSet::from([106usize])),
                    (57usize, std::collections::BTreeSet::from([106usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 19usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 105usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 106usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([105usize])),
                    (42usize, std::collections::BTreeSet::from([105usize])),
                    (43usize, std::collections::BTreeSet::from([105usize])),
                    (55usize, std::collections::BTreeSet::from([105usize])),
                    (57usize, std::collections::BTreeSet::from([105usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 105usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([19usize])),
                    (42usize, std::collections::BTreeSet::from([19usize])),
                    (43usize, std::collections::BTreeSet::from([19usize])),
                    (55usize, std::collections::BTreeSet::from([19usize])),
                    (57usize, std::collections::BTreeSet::from([19usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 19usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([94usize])),
                    (42usize, std::collections::BTreeSet::from([94usize])),
                    (43usize, std::collections::BTreeSet::from([94usize])),
                    (55usize, std::collections::BTreeSet::from([94usize])),
                    (57usize, std::collections::BTreeSet::from([94usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 94usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([2usize])),
                    (42usize, std::collections::BTreeSet::from([2usize])),
                    (43usize, std::collections::BTreeSet::from([2usize])),
                    (55usize, std::collections::BTreeSet::from([2usize])),
                    (57usize, std::collections::BTreeSet::from([2usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 2usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (40usize, 168usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 169usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(43usize, 170usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 10usize,
                    shifted: 4usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([10usize])),
                    (25usize, std::collections::BTreeSet::from([10usize])),
                    (31usize, std::collections::BTreeSet::from([10usize])),
                    (32usize, std::collections::BTreeSet::from([10usize])),
                    (39usize, std::collections::BTreeSet::from([10usize])),
                    (40usize, std::collections::BTreeSet::from([10usize])),
                    (41usize, std::collections::BTreeSet::from([10usize])),
                    (42usize, std::collections::BTreeSet::from([10usize])),
                    (43usize, std::collections::BTreeSet::from([10usize])),
                    (44usize, std::collections::BTreeSet::from([10usize])),
                    (45usize, std::collections::BTreeSet::from([10usize])),
                    (46usize, std::collections::BTreeSet::from([10usize])),
                    (47usize, std::collections::BTreeSet::from([10usize])),
                    (49usize, std::collections::BTreeSet::from([10usize])),
                    (52usize, std::collections::BTreeSet::from([10usize])),
                    (53usize, std::collections::BTreeSet::from([10usize])),
                    (55usize, std::collections::BTreeSet::from([10usize])),
                    (56usize, std::collections::BTreeSet::from([10usize])),
                    (57usize, std::collections::BTreeSet::from([10usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 10usize,
                    shifted: 5usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(43usize, 172usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 9usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([9usize])),
                    (25usize, std::collections::BTreeSet::from([9usize])),
                    (31usize, std::collections::BTreeSet::from([9usize])),
                    (32usize, std::collections::BTreeSet::from([9usize])),
                    (39usize, std::collections::BTreeSet::from([9usize])),
                    (40usize, std::collections::BTreeSet::from([9usize])),
                    (41usize, std::collections::BTreeSet::from([9usize])),
                    (42usize, std::collections::BTreeSet::from([9usize])),
                    (43usize, std::collections::BTreeSet::from([9usize])),
                    (44usize, std::collections::BTreeSet::from([9usize])),
                    (45usize, std::collections::BTreeSet::from([9usize])),
                    (46usize, std::collections::BTreeSet::from([9usize])),
                    (47usize, std::collections::BTreeSet::from([9usize])),
                    (49usize, std::collections::BTreeSet::from([9usize])),
                    (52usize, std::collections::BTreeSet::from([9usize])),
                    (53usize, std::collections::BTreeSet::from([9usize])),
                    (55usize, std::collections::BTreeSet::from([9usize])),
                    (56usize, std::collections::BTreeSet::from([9usize])),
                    (57usize, std::collections::BTreeSet::from([9usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 9usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (34usize, 174usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 4usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 175usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 5usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (34usize, 176usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::_Group36, 178usize),
                    (
                        ChunkOrExpressionsNonTerminals::__Group36Question37,
                        179usize,
                    ),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    40usize,
                    std::collections::BTreeSet::from([102usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 6usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 101usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 102usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 177usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    40usize,
                    std::collections::BTreeSet::from([117usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 117usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    40usize,
                    std::collections::BTreeSet::from([101usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 101usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(40usize, 180usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 13usize,
                    shifted: 7usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 181usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 8usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(43usize, 182usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 13usize,
                    shifted: 9usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([13usize])),
                    (25usize, std::collections::BTreeSet::from([13usize])),
                    (31usize, std::collections::BTreeSet::from([13usize])),
                    (32usize, std::collections::BTreeSet::from([13usize])),
                    (39usize, std::collections::BTreeSet::from([13usize])),
                    (40usize, std::collections::BTreeSet::from([13usize])),
                    (41usize, std::collections::BTreeSet::from([13usize])),
                    (42usize, std::collections::BTreeSet::from([13usize])),
                    (43usize, std::collections::BTreeSet::from([13usize])),
                    (44usize, std::collections::BTreeSet::from([13usize])),
                    (45usize, std::collections::BTreeSet::from([13usize])),
                    (46usize, std::collections::BTreeSet::from([13usize])),
                    (47usize, std::collections::BTreeSet::from([13usize])),
                    (49usize, std::collections::BTreeSet::from([13usize])),
                    (52usize, std::collections::BTreeSet::from([13usize])),
                    (53usize, std::collections::BTreeSet::from([13usize])),
                    (55usize, std::collections::BTreeSet::from([13usize])),
                    (56usize, std::collections::BTreeSet::from([13usize])),
                    (57usize, std::collections::BTreeSet::from([13usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 13usize,
                    shifted: 10usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (34usize, 184usize),
                    (48usize, 185usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 35usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 21usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 35usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::ExpList1, 186usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 135usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 32usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (34usize, 131usize),
                    (40usize, 187usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 4usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 188usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 5usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(43usize, 189usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 14usize,
                    shifted: 6usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([14usize])),
                    (25usize, std::collections::BTreeSet::from([14usize])),
                    (31usize, std::collections::BTreeSet::from([14usize])),
                    (32usize, std::collections::BTreeSet::from([14usize])),
                    (39usize, std::collections::BTreeSet::from([14usize])),
                    (40usize, std::collections::BTreeSet::from([14usize])),
                    (41usize, std::collections::BTreeSet::from([14usize])),
                    (42usize, std::collections::BTreeSet::from([14usize])),
                    (43usize, std::collections::BTreeSet::from([14usize])),
                    (44usize, std::collections::BTreeSet::from([14usize])),
                    (45usize, std::collections::BTreeSet::from([14usize])),
                    (46usize, std::collections::BTreeSet::from([14usize])),
                    (47usize, std::collections::BTreeSet::from([14usize])),
                    (49usize, std::collections::BTreeSet::from([14usize])),
                    (52usize, std::collections::BTreeSet::from([14usize])),
                    (53usize, std::collections::BTreeSet::from([14usize])),
                    (55usize, std::collections::BTreeSet::from([14usize])),
                    (56usize, std::collections::BTreeSet::from([14usize])),
                    (57usize, std::collections::BTreeSet::from([14usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 14usize,
                    shifted: 7usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([15usize])),
                    (25usize, std::collections::BTreeSet::from([15usize])),
                    (31usize, std::collections::BTreeSet::from([15usize])),
                    (32usize, std::collections::BTreeSet::from([15usize])),
                    (39usize, std::collections::BTreeSet::from([15usize])),
                    (40usize, std::collections::BTreeSet::from([15usize])),
                    (41usize, std::collections::BTreeSet::from([15usize])),
                    (42usize, std::collections::BTreeSet::from([15usize])),
                    (43usize, std::collections::BTreeSet::from([15usize])),
                    (44usize, std::collections::BTreeSet::from([15usize])),
                    (45usize, std::collections::BTreeSet::from([15usize])),
                    (46usize, std::collections::BTreeSet::from([15usize])),
                    (47usize, std::collections::BTreeSet::from([15usize])),
                    (49usize, std::collections::BTreeSet::from([15usize])),
                    (52usize, std::collections::BTreeSet::from([15usize])),
                    (53usize, std::collections::BTreeSet::from([15usize])),
                    (55usize, std::collections::BTreeSet::from([15usize])),
                    (56usize, std::collections::BTreeSet::from([15usize])),
                    (57usize, std::collections::BTreeSet::from([15usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 15usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                    (54usize, 192usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 201usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([93usize])),
                    (42usize, std::collections::BTreeSet::from([93usize])),
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(34usize, 131usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([118usize])),
                    (25usize, std::collections::BTreeSet::from([118usize])),
                    (31usize, std::collections::BTreeSet::from([118usize])),
                    (32usize, std::collections::BTreeSet::from([118usize])),
                    (39usize, std::collections::BTreeSet::from([118usize])),
                    (40usize, std::collections::BTreeSet::from([118usize])),
                    (41usize, std::collections::BTreeSet::from([118usize])),
                    (42usize, std::collections::BTreeSet::from([118usize])),
                    (43usize, std::collections::BTreeSet::from([118usize])),
                    (44usize, std::collections::BTreeSet::from([118usize])),
                    (45usize, std::collections::BTreeSet::from([118usize])),
                    (46usize, std::collections::BTreeSet::from([118usize])),
                    (47usize, std::collections::BTreeSet::from([118usize])),
                    (49usize, std::collections::BTreeSet::from([118usize])),
                    (52usize, std::collections::BTreeSet::from([118usize])),
                    (53usize, std::collections::BTreeSet::from([118usize])),
                    (55usize, std::collections::BTreeSet::from([118usize])),
                    (56usize, std::collections::BTreeSet::from([118usize])),
                    (57usize, std::collections::BTreeSet::from([118usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 118usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(0usize, 112usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::AttName,
                    195usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 37usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 38usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([38usize])),
                    (24usize, std::collections::BTreeSet::from([38usize])),
                    (25usize, std::collections::BTreeSet::from([38usize])),
                    (31usize, std::collections::BTreeSet::from([38usize])),
                    (32usize, std::collections::BTreeSet::from([38usize])),
                    (34usize, std::collections::BTreeSet::from([38usize])),
                    (39usize, std::collections::BTreeSet::from([38usize])),
                    (40usize, std::collections::BTreeSet::from([38usize])),
                    (41usize, std::collections::BTreeSet::from([38usize])),
                    (42usize, std::collections::BTreeSet::from([38usize])),
                    (43usize, std::collections::BTreeSet::from([38usize])),
                    (44usize, std::collections::BTreeSet::from([38usize])),
                    (45usize, std::collections::BTreeSet::from([38usize])),
                    (46usize, std::collections::BTreeSet::from([38usize])),
                    (47usize, std::collections::BTreeSet::from([38usize])),
                    (49usize, std::collections::BTreeSet::from([38usize])),
                    (52usize, std::collections::BTreeSet::from([38usize])),
                    (53usize, std::collections::BTreeSet::from([38usize])),
                    (55usize, std::collections::BTreeSet::from([38usize])),
                    (56usize, std::collections::BTreeSet::from([38usize])),
                    (57usize, std::collections::BTreeSet::from([38usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 38usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([103usize])),
                    (25usize, std::collections::BTreeSet::from([103usize])),
                    (31usize, std::collections::BTreeSet::from([103usize])),
                    (32usize, std::collections::BTreeSet::from([103usize])),
                    (39usize, std::collections::BTreeSet::from([103usize])),
                    (40usize, std::collections::BTreeSet::from([103usize])),
                    (41usize, std::collections::BTreeSet::from([103usize])),
                    (42usize, std::collections::BTreeSet::from([103usize])),
                    (43usize, std::collections::BTreeSet::from([103usize])),
                    (44usize, std::collections::BTreeSet::from([103usize])),
                    (45usize, std::collections::BTreeSet::from([103usize])),
                    (46usize, std::collections::BTreeSet::from([103usize])),
                    (47usize, std::collections::BTreeSet::from([103usize])),
                    (49usize, std::collections::BTreeSet::from([103usize])),
                    (52usize, std::collections::BTreeSet::from([103usize])),
                    (53usize, std::collections::BTreeSet::from([103usize])),
                    (55usize, std::collections::BTreeSet::from([103usize])),
                    (56usize, std::collections::BTreeSet::from([103usize])),
                    (57usize, std::collections::BTreeSet::from([103usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 103usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([17usize])),
                    (25usize, std::collections::BTreeSet::from([17usize])),
                    (31usize, std::collections::BTreeSet::from([17usize])),
                    (32usize, std::collections::BTreeSet::from([17usize])),
                    (39usize, std::collections::BTreeSet::from([17usize])),
                    (40usize, std::collections::BTreeSet::from([17usize])),
                    (41usize, std::collections::BTreeSet::from([17usize])),
                    (42usize, std::collections::BTreeSet::from([17usize])),
                    (43usize, std::collections::BTreeSet::from([17usize])),
                    (44usize, std::collections::BTreeSet::from([17usize])),
                    (45usize, std::collections::BTreeSet::from([17usize])),
                    (46usize, std::collections::BTreeSet::from([17usize])),
                    (47usize, std::collections::BTreeSet::from([17usize])),
                    (49usize, std::collections::BTreeSet::from([17usize])),
                    (52usize, std::collections::BTreeSet::from([17usize])),
                    (53usize, std::collections::BTreeSet::from([17usize])),
                    (55usize, std::collections::BTreeSet::from([17usize])),
                    (56usize, std::collections::BTreeSet::from([17usize])),
                    (57usize, std::collections::BTreeSet::from([17usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 17usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(55usize, 199usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 11usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 200usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([11usize])),
                    (25usize, std::collections::BTreeSet::from([11usize])),
                    (31usize, std::collections::BTreeSet::from([11usize])),
                    (32usize, std::collections::BTreeSet::from([11usize])),
                    (39usize, std::collections::BTreeSet::from([11usize])),
                    (40usize, std::collections::BTreeSet::from([11usize])),
                    (41usize, std::collections::BTreeSet::from([11usize])),
                    (42usize, std::collections::BTreeSet::from([11usize])),
                    (43usize, std::collections::BTreeSet::from([11usize])),
                    (44usize, std::collections::BTreeSet::from([11usize])),
                    (45usize, std::collections::BTreeSet::from([11usize])),
                    (46usize, std::collections::BTreeSet::from([11usize])),
                    (47usize, std::collections::BTreeSet::from([11usize])),
                    (49usize, std::collections::BTreeSet::from([11usize])),
                    (52usize, std::collections::BTreeSet::from([11usize])),
                    (53usize, std::collections::BTreeSet::from([11usize])),
                    (55usize, std::collections::BTreeSet::from([11usize])),
                    (56usize, std::collections::BTreeSet::from([11usize])),
                    (57usize, std::collections::BTreeSet::from([11usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 4usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(42usize, 202usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::ElseIf, 206usize),
                    (ChunkOrExpressionsNonTerminals::_ElseIfPlus32, 207usize),
                    (ChunkOrExpressionsNonTerminals::_ElseIfStar33, 209usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([98usize])),
                    (43usize, std::collections::BTreeSet::from([98usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 4usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 96usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 97usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 98usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 203usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                    (54usize, 204usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 2usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 205usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([93usize])),
                    (42usize, std::collections::BTreeSet::from([93usize])),
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 3usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([18usize])),
                    (42usize, std::collections::BTreeSet::from([18usize])),
                    (43usize, std::collections::BTreeSet::from([18usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 18usize,
                    shifted: 4usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([96usize])),
                    (42usize, std::collections::BTreeSet::from([96usize])),
                    (43usize, std::collections::BTreeSet::from([96usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 96usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(42usize, 202usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([(
                    ChunkOrExpressionsNonTerminals::ElseIf,
                    208usize,
                )]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([115usize])),
                    (43usize, std::collections::BTreeSet::from([115usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 18usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 97usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 115usize,
                        shifted: 1usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (41usize, std::collections::BTreeSet::from([97usize])),
                    (42usize, std::collections::BTreeSet::from([97usize])),
                    (43usize, std::collections::BTreeSet::from([97usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 97usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(41usize, 210usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::_Group34, 212usize),
                    (
                        ChunkOrExpressionsNonTerminals::__Group34Question35,
                        213usize,
                    ),
                ]),
                reduce_map: std::collections::BTreeMap::from([(
                    43usize,
                    std::collections::BTreeSet::from([100usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 5usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 99usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 100usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (25usize, 10usize),
                    (31usize, 81usize),
                    (32usize, 84usize),
                    (39usize, 85usize),
                    (40usize, 86usize),
                    (44usize, 87usize),
                    (45usize, 90usize),
                    (46usize, 98usize),
                    (47usize, 100usize),
                    (49usize, 111usize),
                    (52usize, 123usize),
                    (56usize, 124usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Block, 211usize),
                    (ChunkOrExpressionsNonTerminals::Statement, 127usize),
                    (ChunkOrExpressionsNonTerminals::Var, 128usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 129usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 137usize),
                    (ChunkOrExpressionsNonTerminals::VarList, 138usize),
                    (ChunkOrExpressionsNonTerminals::_StatementPlus29, 153usize),
                    (ChunkOrExpressionsNonTerminals::_StatementStar30, 155usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([
                    (43usize, std::collections::BTreeSet::from([93usize])),
                    (53usize, std::collections::BTreeSet::from([93usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 2usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 3usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 4usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 5usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 6usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 7usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 8usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 9usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 10usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 11usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 12usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 13usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 14usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 16usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 17usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 29usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 30usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 91usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 92usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 93usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 114usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 116usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    43usize,
                    std::collections::BTreeSet::from([116usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 116usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    43usize,
                    std::collections::BTreeSet::from([99usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 99usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(43usize, 214usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 12usize,
                    shifted: 6usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (0usize, std::collections::BTreeSet::from([12usize])),
                    (25usize, std::collections::BTreeSet::from([12usize])),
                    (31usize, std::collections::BTreeSet::from([12usize])),
                    (32usize, std::collections::BTreeSet::from([12usize])),
                    (39usize, std::collections::BTreeSet::from([12usize])),
                    (40usize, std::collections::BTreeSet::from([12usize])),
                    (41usize, std::collections::BTreeSet::from([12usize])),
                    (42usize, std::collections::BTreeSet::from([12usize])),
                    (43usize, std::collections::BTreeSet::from([12usize])),
                    (44usize, std::collections::BTreeSet::from([12usize])),
                    (45usize, std::collections::BTreeSet::from([12usize])),
                    (46usize, std::collections::BTreeSet::from([12usize])),
                    (47usize, std::collections::BTreeSet::from([12usize])),
                    (49usize, std::collections::BTreeSet::from([12usize])),
                    (52usize, std::collections::BTreeSet::from([12usize])),
                    (53usize, std::collections::BTreeSet::from([12usize])),
                    (55usize, std::collections::BTreeSet::from([12usize])),
                    (56usize, std::collections::BTreeSet::from([12usize])),
                    (57usize, std::collections::BTreeSet::from([12usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 12usize,
                    shifted: 7usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (30usize, 216usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 80usize,
                        shifted: 2usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(24usize, 217usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 80usize,
                    shifted: 3usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 1usize),
                    (1usize, 2usize),
                    (2usize, 3usize),
                    (3usize, 4usize),
                    (4usize, 5usize),
                    (5usize, 6usize),
                    (6usize, 7usize),
                    (11usize, 8usize),
                    (13usize, 9usize),
                    (25usize, 10usize),
                    (27usize, 11usize),
                    (37usize, 14usize),
                    (45usize, 15usize),
                    (50usize, 28usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::Var, 29usize),
                    (ChunkOrExpressionsNonTerminals::PrefixExp, 30usize),
                    (ChunkOrExpressionsNonTerminals::FunctionCall, 33usize),
                    (ChunkOrExpressionsNonTerminals::Exp, 218usize),
                    (ChunkOrExpressionsNonTerminals::TableConstructor, 41usize),
                    (ChunkOrExpressionsNonTerminals::FunctionDef, 42usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 20usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 21usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 22usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 23usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 24usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 25usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 42usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 43usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 44usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 45usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 46usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 47usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 48usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 49usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 50usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 51usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 52usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 53usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 75usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 80usize,
                        shifted: 4usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 112usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 113usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 120usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (28usize, std::collections::BTreeSet::from([80usize])),
                    (32usize, std::collections::BTreeSet::from([80usize])),
                    (34usize, std::collections::BTreeSet::from([80usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 80usize,
                        shifted: 5usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (5usize, 35usize),
                    (6usize, 49usize),
                    (7usize, 37usize),
                    (8usize, 43usize),
                    (9usize, 45usize),
                    (10usize, 39usize),
                    (12usize, 51usize),
                    (13usize, 59usize),
                    (14usize, 61usize),
                    (15usize, 53usize),
                    (16usize, 57usize),
                    (17usize, 47usize),
                    (18usize, 63usize),
                    (19usize, 65usize),
                    (20usize, 67usize),
                    (21usize, 69usize),
                    (22usize, 71usize),
                    (23usize, 73usize),
                    (36usize, 55usize),
                    (38usize, 76usize),
                    (51usize, 78usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([
                    (28usize, std::collections::BTreeSet::from([81usize])),
                    (32usize, std::collections::BTreeSet::from([81usize])),
                    (34usize, std::collections::BTreeSet::from([81usize])),
                ]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 54usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 55usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 56usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 57usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 58usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 59usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 60usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 61usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 62usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 63usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 64usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 65usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 66usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 67usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 68usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 69usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 70usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 71usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 72usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 73usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 74usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 81usize,
                        shifted: 3usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([
                    (0usize, 91usize),
                    (25usize, 16usize),
                ]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([
                    (ChunkOrExpressionsNonTerminals::FuncBody, 157usize),
                    (ChunkOrExpressionsNonTerminals::FuncName1, 92usize),
                    (ChunkOrExpressionsNonTerminals::FuncName, 97usize),
                ]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 15usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 83usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 84usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 85usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 86usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 87usize,
                        shifted: 0usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 88usize,
                        shifted: 0usize,
                    },
                ]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(57usize, 222usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 125usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 125usize,
                    shifted: 2usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    57usize,
                    std::collections::BTreeSet::from([0usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 0usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    57usize,
                    std::collections::BTreeSet::from([111usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([::rusty_lr::rule::ShiftedRuleRef {
                    rule: 111usize,
                    shifted: 1usize,
                }]),
            },
            ::rusty_lr::builder::State {
                shift_goto_map_term: std::collections::BTreeMap::from([(34usize, 131usize)]),
                shift_goto_map_nonterm: std::collections::BTreeMap::from([]),
                reduce_map: std::collections::BTreeMap::from([(
                    57usize,
                    std::collections::BTreeSet::from([1usize]),
                )]),
                ruleset: std::collections::BTreeSet::from([
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 1usize,
                        shifted: 1usize,
                    },
                    ::rusty_lr::rule::ShiftedRuleRef {
                        rule: 31usize,
                        shifted: 1usize,
                    },
                ]),
            },
        ];
        let states: Vec<_> = states
            .into_iter()
            .map(|state| state.into_glr_sparse_state_u8(|x| x, |x| x))
            .collect();
        Self {
            rules,
            states,
            classes: vec![
                vec!["ident"],
                vec!["string_literal"],
                vec!["numeric_literal"],
                vec!["nil"],
                vec!["bool_"],
                vec!["plus"],
                vec!["minus"],
                vec!["asterisk"],
                vec!["slash"],
                vec!["percent"],
                vec!["caret"],
                vec!["hash"],
                vec!["ampersand"],
                vec!["tilde"],
                vec!["pipe"],
                vec!["lessless"],
                vec!["greatergreater"],
                vec!["slashslash"],
                vec!["equalequal"],
                vec!["tildeequal"],
                vec!["lessequal"],
                vec!["greaterequal"],
                vec!["less"],
                vec!["greater"],
                vec!["equal"],
                vec!["lparen"],
                vec!["rparen"],
                vec!["lbrace"],
                vec!["rbrace"],
                vec!["lbracket"],
                vec!["rbracket"],
                vec!["coloncolon"],
                vec!["semicolon"],
                vec!["colon"],
                vec!["comma"],
                vec!["dot"],
                vec!["dotdot"],
                vec!["dotdotdot"],
                vec!["and_"],
                vec!["break_"],
                vec!["do_"],
                vec!["else_"],
                vec!["elseif_"],
                vec!["end_"],
                vec!["for_"],
                vec!["function_"],
                vec!["goto_"],
                vec!["if_"],
                vec!["in_"],
                vec!["local_"],
                vec!["not_"],
                vec!["or_"],
                vec!["repeat_"],
                vec!["return_"],
                vec!["then_"],
                vec!["until_"],
                vec!["while_"],
                vec!["eof"],
            ],
        }
    }
}
// ==============================Generated Codes End===============================
